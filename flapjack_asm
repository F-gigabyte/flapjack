
flapjack:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	f3 0f 1e fa          	endbr64
    4004:	48 83 ec 08          	sub    rsp,0x8
    4008:	48 8b 05 e9 2f 01 00 	mov    rax,QWORD PTR [rip+0x12fe9]        # 16ff8 <__gmon_start__@Base>
    400f:	48 85 c0             	test   rax,rax
    4012:	74 02                	je     4016 <_init+0x16>
    4014:	ff d0                	call   rax
    4016:	48 83 c4 08          	add    rsp,0x8
    401a:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <.plt>:
    4020:	ff 35 72 2d 01 00    	push   QWORD PTR [rip+0x12d72]        # 16d98 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 74 2d 01 00    	jmp    QWORD PTR [rip+0x12d74]        # 16da0 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4030:	f3 0f 1e fa          	endbr64
    4034:	68 00 00 00 00       	push   0x0
    4039:	e9 e2 ff ff ff       	jmp    4020 <_init+0x20>
    403e:	66 90                	xchg   ax,ax
    4040:	f3 0f 1e fa          	endbr64
    4044:	68 01 00 00 00       	push   0x1
    4049:	e9 d2 ff ff ff       	jmp    4020 <_init+0x20>
    404e:	66 90                	xchg   ax,ax
    4050:	f3 0f 1e fa          	endbr64
    4054:	68 02 00 00 00       	push   0x2
    4059:	e9 c2 ff ff ff       	jmp    4020 <_init+0x20>
    405e:	66 90                	xchg   ax,ax
    4060:	f3 0f 1e fa          	endbr64
    4064:	68 03 00 00 00       	push   0x3
    4069:	e9 b2 ff ff ff       	jmp    4020 <_init+0x20>
    406e:	66 90                	xchg   ax,ax
    4070:	f3 0f 1e fa          	endbr64
    4074:	68 04 00 00 00       	push   0x4
    4079:	e9 a2 ff ff ff       	jmp    4020 <_init+0x20>
    407e:	66 90                	xchg   ax,ax
    4080:	f3 0f 1e fa          	endbr64
    4084:	68 05 00 00 00       	push   0x5
    4089:	e9 92 ff ff ff       	jmp    4020 <_init+0x20>
    408e:	66 90                	xchg   ax,ax
    4090:	f3 0f 1e fa          	endbr64
    4094:	68 06 00 00 00       	push   0x6
    4099:	e9 82 ff ff ff       	jmp    4020 <_init+0x20>
    409e:	66 90                	xchg   ax,ax
    40a0:	f3 0f 1e fa          	endbr64
    40a4:	68 07 00 00 00       	push   0x7
    40a9:	e9 72 ff ff ff       	jmp    4020 <_init+0x20>
    40ae:	66 90                	xchg   ax,ax
    40b0:	f3 0f 1e fa          	endbr64
    40b4:	68 08 00 00 00       	push   0x8
    40b9:	e9 62 ff ff ff       	jmp    4020 <_init+0x20>
    40be:	66 90                	xchg   ax,ax
    40c0:	f3 0f 1e fa          	endbr64
    40c4:	68 09 00 00 00       	push   0x9
    40c9:	e9 52 ff ff ff       	jmp    4020 <_init+0x20>
    40ce:	66 90                	xchg   ax,ax
    40d0:	f3 0f 1e fa          	endbr64
    40d4:	68 0a 00 00 00       	push   0xa
    40d9:	e9 42 ff ff ff       	jmp    4020 <_init+0x20>
    40de:	66 90                	xchg   ax,ax
    40e0:	f3 0f 1e fa          	endbr64
    40e4:	68 0b 00 00 00       	push   0xb
    40e9:	e9 32 ff ff ff       	jmp    4020 <_init+0x20>
    40ee:	66 90                	xchg   ax,ax
    40f0:	f3 0f 1e fa          	endbr64
    40f4:	68 0c 00 00 00       	push   0xc
    40f9:	e9 22 ff ff ff       	jmp    4020 <_init+0x20>
    40fe:	66 90                	xchg   ax,ax
    4100:	f3 0f 1e fa          	endbr64
    4104:	68 0d 00 00 00       	push   0xd
    4109:	e9 12 ff ff ff       	jmp    4020 <_init+0x20>
    410e:	66 90                	xchg   ax,ax
    4110:	f3 0f 1e fa          	endbr64
    4114:	68 0e 00 00 00       	push   0xe
    4119:	e9 02 ff ff ff       	jmp    4020 <_init+0x20>
    411e:	66 90                	xchg   ax,ax
    4120:	f3 0f 1e fa          	endbr64
    4124:	68 0f 00 00 00       	push   0xf
    4129:	e9 f2 fe ff ff       	jmp    4020 <_init+0x20>
    412e:	66 90                	xchg   ax,ax
    4130:	f3 0f 1e fa          	endbr64
    4134:	68 10 00 00 00       	push   0x10
    4139:	e9 e2 fe ff ff       	jmp    4020 <_init+0x20>
    413e:	66 90                	xchg   ax,ax
    4140:	f3 0f 1e fa          	endbr64
    4144:	68 11 00 00 00       	push   0x11
    4149:	e9 d2 fe ff ff       	jmp    4020 <_init+0x20>
    414e:	66 90                	xchg   ax,ax
    4150:	f3 0f 1e fa          	endbr64
    4154:	68 12 00 00 00       	push   0x12
    4159:	e9 c2 fe ff ff       	jmp    4020 <_init+0x20>
    415e:	66 90                	xchg   ax,ax
    4160:	f3 0f 1e fa          	endbr64
    4164:	68 13 00 00 00       	push   0x13
    4169:	e9 b2 fe ff ff       	jmp    4020 <_init+0x20>
    416e:	66 90                	xchg   ax,ax
    4170:	f3 0f 1e fa          	endbr64
    4174:	68 14 00 00 00       	push   0x14
    4179:	e9 a2 fe ff ff       	jmp    4020 <_init+0x20>
    417e:	66 90                	xchg   ax,ax
    4180:	f3 0f 1e fa          	endbr64
    4184:	68 15 00 00 00       	push   0x15
    4189:	e9 92 fe ff ff       	jmp    4020 <_init+0x20>
    418e:	66 90                	xchg   ax,ax
    4190:	f3 0f 1e fa          	endbr64
    4194:	68 16 00 00 00       	push   0x16
    4199:	e9 82 fe ff ff       	jmp    4020 <_init+0x20>
    419e:	66 90                	xchg   ax,ax
    41a0:	f3 0f 1e fa          	endbr64
    41a4:	68 17 00 00 00       	push   0x17
    41a9:	e9 72 fe ff ff       	jmp    4020 <_init+0x20>
    41ae:	66 90                	xchg   ax,ax
    41b0:	f3 0f 1e fa          	endbr64
    41b4:	68 18 00 00 00       	push   0x18
    41b9:	e9 62 fe ff ff       	jmp    4020 <_init+0x20>
    41be:	66 90                	xchg   ax,ax
    41c0:	f3 0f 1e fa          	endbr64
    41c4:	68 19 00 00 00       	push   0x19
    41c9:	e9 52 fe ff ff       	jmp    4020 <_init+0x20>
    41ce:	66 90                	xchg   ax,ax
    41d0:	f3 0f 1e fa          	endbr64
    41d4:	68 1a 00 00 00       	push   0x1a
    41d9:	e9 42 fe ff ff       	jmp    4020 <_init+0x20>
    41de:	66 90                	xchg   ax,ax
    41e0:	f3 0f 1e fa          	endbr64
    41e4:	68 1b 00 00 00       	push   0x1b
    41e9:	e9 32 fe ff ff       	jmp    4020 <_init+0x20>
    41ee:	66 90                	xchg   ax,ax
    41f0:	f3 0f 1e fa          	endbr64
    41f4:	68 1c 00 00 00       	push   0x1c
    41f9:	e9 22 fe ff ff       	jmp    4020 <_init+0x20>
    41fe:	66 90                	xchg   ax,ax
    4200:	f3 0f 1e fa          	endbr64
    4204:	68 1d 00 00 00       	push   0x1d
    4209:	e9 12 fe ff ff       	jmp    4020 <_init+0x20>
    420e:	66 90                	xchg   ax,ax
    4210:	f3 0f 1e fa          	endbr64
    4214:	68 1e 00 00 00       	push   0x1e
    4219:	e9 02 fe ff ff       	jmp    4020 <_init+0x20>
    421e:	66 90                	xchg   ax,ax
    4220:	f3 0f 1e fa          	endbr64
    4224:	68 1f 00 00 00       	push   0x1f
    4229:	e9 f2 fd ff ff       	jmp    4020 <_init+0x20>
    422e:	66 90                	xchg   ax,ax
    4230:	f3 0f 1e fa          	endbr64
    4234:	68 20 00 00 00       	push   0x20
    4239:	e9 e2 fd ff ff       	jmp    4020 <_init+0x20>
    423e:	66 90                	xchg   ax,ax
    4240:	f3 0f 1e fa          	endbr64
    4244:	68 21 00 00 00       	push   0x21
    4249:	e9 d2 fd ff ff       	jmp    4020 <_init+0x20>
    424e:	66 90                	xchg   ax,ax
    4250:	f3 0f 1e fa          	endbr64
    4254:	68 22 00 00 00       	push   0x22
    4259:	e9 c2 fd ff ff       	jmp    4020 <_init+0x20>
    425e:	66 90                	xchg   ax,ax
    4260:	f3 0f 1e fa          	endbr64
    4264:	68 23 00 00 00       	push   0x23
    4269:	e9 b2 fd ff ff       	jmp    4020 <_init+0x20>
    426e:	66 90                	xchg   ax,ax
    4270:	f3 0f 1e fa          	endbr64
    4274:	68 24 00 00 00       	push   0x24
    4279:	e9 a2 fd ff ff       	jmp    4020 <_init+0x20>
    427e:	66 90                	xchg   ax,ax
    4280:	f3 0f 1e fa          	endbr64
    4284:	68 25 00 00 00       	push   0x25
    4289:	e9 92 fd ff ff       	jmp    4020 <_init+0x20>
    428e:	66 90                	xchg   ax,ax
    4290:	f3 0f 1e fa          	endbr64
    4294:	68 26 00 00 00       	push   0x26
    4299:	e9 82 fd ff ff       	jmp    4020 <_init+0x20>
    429e:	66 90                	xchg   ax,ax
    42a0:	f3 0f 1e fa          	endbr64
    42a4:	68 27 00 00 00       	push   0x27
    42a9:	e9 72 fd ff ff       	jmp    4020 <_init+0x20>
    42ae:	66 90                	xchg   ax,ax
    42b0:	f3 0f 1e fa          	endbr64
    42b4:	68 28 00 00 00       	push   0x28
    42b9:	e9 62 fd ff ff       	jmp    4020 <_init+0x20>
    42be:	66 90                	xchg   ax,ax
    42c0:	f3 0f 1e fa          	endbr64
    42c4:	68 29 00 00 00       	push   0x29
    42c9:	e9 52 fd ff ff       	jmp    4020 <_init+0x20>
    42ce:	66 90                	xchg   ax,ax
    42d0:	f3 0f 1e fa          	endbr64
    42d4:	68 2a 00 00 00       	push   0x2a
    42d9:	e9 42 fd ff ff       	jmp    4020 <_init+0x20>
    42de:	66 90                	xchg   ax,ax
    42e0:	f3 0f 1e fa          	endbr64
    42e4:	68 2b 00 00 00       	push   0x2b
    42e9:	e9 32 fd ff ff       	jmp    4020 <_init+0x20>
    42ee:	66 90                	xchg   ax,ax
    42f0:	f3 0f 1e fa          	endbr64
    42f4:	68 2c 00 00 00       	push   0x2c
    42f9:	e9 22 fd ff ff       	jmp    4020 <_init+0x20>
    42fe:	66 90                	xchg   ax,ax
    4300:	f3 0f 1e fa          	endbr64
    4304:	68 2d 00 00 00       	push   0x2d
    4309:	e9 12 fd ff ff       	jmp    4020 <_init+0x20>
    430e:	66 90                	xchg   ax,ax
    4310:	f3 0f 1e fa          	endbr64
    4314:	68 2e 00 00 00       	push   0x2e
    4319:	e9 02 fd ff ff       	jmp    4020 <_init+0x20>
    431e:	66 90                	xchg   ax,ax
    4320:	f3 0f 1e fa          	endbr64
    4324:	68 2f 00 00 00       	push   0x2f
    4329:	e9 f2 fc ff ff       	jmp    4020 <_init+0x20>
    432e:	66 90                	xchg   ax,ax
    4330:	f3 0f 1e fa          	endbr64
    4334:	68 30 00 00 00       	push   0x30
    4339:	e9 e2 fc ff ff       	jmp    4020 <_init+0x20>
    433e:	66 90                	xchg   ax,ax
    4340:	f3 0f 1e fa          	endbr64
    4344:	68 31 00 00 00       	push   0x31
    4349:	e9 d2 fc ff ff       	jmp    4020 <_init+0x20>
    434e:	66 90                	xchg   ax,ax
    4350:	f3 0f 1e fa          	endbr64
    4354:	68 32 00 00 00       	push   0x32
    4359:	e9 c2 fc ff ff       	jmp    4020 <_init+0x20>
    435e:	66 90                	xchg   ax,ax
    4360:	f3 0f 1e fa          	endbr64
    4364:	68 33 00 00 00       	push   0x33
    4369:	e9 b2 fc ff ff       	jmp    4020 <_init+0x20>
    436e:	66 90                	xchg   ax,ax
    4370:	f3 0f 1e fa          	endbr64
    4374:	68 34 00 00 00       	push   0x34
    4379:	e9 a2 fc ff ff       	jmp    4020 <_init+0x20>
    437e:	66 90                	xchg   ax,ax
    4380:	f3 0f 1e fa          	endbr64
    4384:	68 35 00 00 00       	push   0x35
    4389:	e9 92 fc ff ff       	jmp    4020 <_init+0x20>
    438e:	66 90                	xchg   ax,ax
    4390:	f3 0f 1e fa          	endbr64
    4394:	68 36 00 00 00       	push   0x36
    4399:	e9 82 fc ff ff       	jmp    4020 <_init+0x20>
    439e:	66 90                	xchg   ax,ax
    43a0:	f3 0f 1e fa          	endbr64
    43a4:	68 37 00 00 00       	push   0x37
    43a9:	e9 72 fc ff ff       	jmp    4020 <_init+0x20>
    43ae:	66 90                	xchg   ax,ax
    43b0:	f3 0f 1e fa          	endbr64
    43b4:	68 38 00 00 00       	push   0x38
    43b9:	e9 62 fc ff ff       	jmp    4020 <_init+0x20>
    43be:	66 90                	xchg   ax,ax
    43c0:	f3 0f 1e fa          	endbr64
    43c4:	68 39 00 00 00       	push   0x39
    43c9:	e9 52 fc ff ff       	jmp    4020 <_init+0x20>
    43ce:	66 90                	xchg   ax,ax
    43d0:	f3 0f 1e fa          	endbr64
    43d4:	68 3a 00 00 00       	push   0x3a
    43d9:	e9 42 fc ff ff       	jmp    4020 <_init+0x20>
    43de:	66 90                	xchg   ax,ax
    43e0:	f3 0f 1e fa          	endbr64
    43e4:	68 3b 00 00 00       	push   0x3b
    43e9:	e9 32 fc ff ff       	jmp    4020 <_init+0x20>
    43ee:	66 90                	xchg   ax,ax
    43f0:	f3 0f 1e fa          	endbr64
    43f4:	68 3c 00 00 00       	push   0x3c
    43f9:	e9 22 fc ff ff       	jmp    4020 <_init+0x20>
    43fe:	66 90                	xchg   ax,ax
    4400:	f3 0f 1e fa          	endbr64
    4404:	68 3d 00 00 00       	push   0x3d
    4409:	e9 12 fc ff ff       	jmp    4020 <_init+0x20>
    440e:	66 90                	xchg   ax,ax

Disassembly of section .plt.got:

0000000000004410 <__register_frame_info@plt>:
    4410:	f3 0f 1e fa          	endbr64
    4414:	ff 25 8e 2b 01 00    	jmp    QWORD PTR [rip+0x12b8e]        # 16fa8 <__register_frame_info@Base>
    441a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004420 <__cxa_finalize@plt>:
    4420:	f3 0f 1e fa          	endbr64
    4424:	ff 25 86 2b 01 00    	jmp    QWORD PTR [rip+0x12b86]        # 16fb0 <__cxa_finalize@GLIBC_2.2.5>
    442a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004430 <__deregister_frame_info@plt>:
    4430:	f3 0f 1e fa          	endbr64
    4434:	ff 25 8e 2b 01 00    	jmp    QWORD PTR [rip+0x12b8e]        # 16fc8 <__deregister_frame_info@Base>
    443a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000004440 <_Znam@plt>:
    4440:	f3 0f 1e fa          	endbr64
    4444:	ff 25 5e 29 01 00    	jmp    QWORD PTR [rip+0x1295e]        # 16da8 <_Znam@GLIBCXX_3.4>
    444a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004450 <__errno_location@plt>:
    4450:	f3 0f 1e fa          	endbr64
    4454:	ff 25 56 29 01 00    	jmp    QWORD PTR [rip+0x12956]        # 16db0 <__errno_location@GLIBC_2.2.5>
    445a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004460 <printf@plt>:
    4460:	f3 0f 1e fa          	endbr64
    4464:	ff 25 4e 29 01 00    	jmp    QWORD PTR [rip+0x1294e]        # 16db8 <printf@GLIBC_2.2.5>
    446a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004470 <_ZSt11_Hash_bytesPKvmm@plt>:
    4470:	f3 0f 1e fa          	endbr64
    4474:	ff 25 46 29 01 00    	jmp    QWORD PTR [rip+0x12946]        # 16dc0 <_ZSt11_Hash_bytesPKvmm@CXXABI_1.3.5>
    447a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004480 <_Unwind_Resume@plt>:
    4480:	f3 0f 1e fa          	endbr64
    4484:	ff 25 3e 29 01 00    	jmp    QWORD PTR [rip+0x1293e]        # 16dc8 <_Unwind_Resume@Base>
    448a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004490 <_ZSt9terminatev@plt>:
    4490:	f3 0f 1e fa          	endbr64
    4494:	ff 25 36 29 01 00    	jmp    QWORD PTR [rip+0x12936]        # 16dd0 <_ZSt9terminatev@GLIBCXX_3.4>
    449a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044a0 <realpath@plt>:
    44a0:	f3 0f 1e fa          	endbr64
    44a4:	ff 25 2e 29 01 00    	jmp    QWORD PTR [rip+0x1292e]        # 16dd8 <realpath@GLIBC_2.3>
    44aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044b0 <_ZSt17__throw_bad_allocv@plt>:
    44b0:	f3 0f 1e fa          	endbr64
    44b4:	ff 25 26 29 01 00    	jmp    QWORD PTR [rip+0x12926]        # 16de0 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    44ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044c0 <__cxa_begin_catch@plt>:
    44c0:	f3 0f 1e fa          	endbr64
    44c4:	ff 25 1e 29 01 00    	jmp    QWORD PTR [rip+0x1291e]        # 16de8 <__cxa_begin_catch@CXXABI_1.3>
    44ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044d0 <strlen@plt>:
    44d0:	f3 0f 1e fa          	endbr64
    44d4:	ff 25 16 29 01 00    	jmp    QWORD PTR [rip+0x12916]        # 16df0 <strlen@GLIBC_2.2.5>
    44da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044e0 <memcmp@plt>:
    44e0:	f3 0f 1e fa          	endbr64
    44e4:	ff 25 0e 29 01 00    	jmp    QWORD PTR [rip+0x1290e]        # 16df8 <memcmp@GLIBC_2.2.5>
    44ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044f0 <__cxa_allocate_exception@plt>:
    44f0:	f3 0f 1e fa          	endbr64
    44f4:	ff 25 06 29 01 00    	jmp    QWORD PTR [rip+0x12906]        # 16e00 <__cxa_allocate_exception@CXXABI_1.3>
    44fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004500 <getcwd@plt>:
    4500:	f3 0f 1e fa          	endbr64
    4504:	ff 25 fe 28 01 00    	jmp    QWORD PTR [rip+0x128fe]        # 16e08 <getcwd@GLIBC_2.2.5>
    450a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004510 <_ZSt20__throw_length_errorPKc@plt>:
    4510:	f3 0f 1e fa          	endbr64
    4514:	ff 25 f6 28 01 00    	jmp    QWORD PTR [rip+0x128f6]        # 16e10 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    451a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004520 <memset@plt>:
    4520:	f3 0f 1e fa          	endbr64
    4524:	ff 25 ee 28 01 00    	jmp    QWORD PTR [rip+0x128ee]        # 16e18 <memset@GLIBC_2.2.5>
    452a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004530 <_ZSt19__throw_logic_errorPKc@plt>:
    4530:	f3 0f 1e fa          	endbr64
    4534:	ff 25 e6 28 01 00    	jmp    QWORD PTR [rip+0x128e6]        # 16e20 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    453a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004540 <__cxa_free_exception@plt>:
    4540:	f3 0f 1e fa          	endbr64
    4544:	ff 25 de 28 01 00    	jmp    QWORD PTR [rip+0x128de]        # 16e28 <__cxa_free_exception@CXXABI_1.3>
    454a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004550 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4550:	f3 0f 1e fa          	endbr64
    4554:	ff 25 d6 28 01 00    	jmp    QWORD PTR [rip+0x128d6]        # 16e30 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    455a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004560 <memcpy@plt>:
    4560:	f3 0f 1e fa          	endbr64
    4564:	ff 25 ce 28 01 00    	jmp    QWORD PTR [rip+0x128ce]        # 16e38 <memcpy@GLIBC_2.14>
    456a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004570 <stat@plt>:
    4570:	f3 0f 1e fa          	endbr64
    4574:	ff 25 c6 28 01 00    	jmp    QWORD PTR [rip+0x128c6]        # 16e40 <stat@GLIBC_2.33>
    457a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004580 <fclose@plt>:
    4580:	f3 0f 1e fa          	endbr64
    4584:	ff 25 be 28 01 00    	jmp    QWORD PTR [rip+0x128be]        # 16e48 <fclose@GLIBC_2.2.5>
    458a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004590 <_Znwm@plt>:
    4590:	f3 0f 1e fa          	endbr64
    4594:	ff 25 b6 28 01 00    	jmp    QWORD PTR [rip+0x128b6]        # 16e50 <_Znwm@GLIBCXX_3.4>
    459a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045a0 <_ZdlPvm@plt>:
    45a0:	f3 0f 1e fa          	endbr64
    45a4:	ff 25 ae 28 01 00    	jmp    QWORD PTR [rip+0x128ae]        # 16e58 <_ZdlPvm@CXXABI_1.3.9>
    45aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045b0 <fileno@plt>:
    45b0:	f3 0f 1e fa          	endbr64
    45b4:	ff 25 a6 28 01 00    	jmp    QWORD PTR [rip+0x128a6]        # 16e60 <fileno@GLIBC_2.2.5>
    45ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045c0 <freopen@plt>:
    45c0:	f3 0f 1e fa          	endbr64
    45c4:	ff 25 9e 28 01 00    	jmp    QWORD PTR [rip+0x1289e]        # 16e68 <freopen@GLIBC_2.2.5>
    45ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045d0 <__stack_chk_fail@plt>:
    45d0:	f3 0f 1e fa          	endbr64
    45d4:	ff 25 96 28 01 00    	jmp    QWORD PTR [rip+0x12896]        # 16e70 <__stack_chk_fail@GLIBC_2.4>
    45da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045e0 <tcgetattr@plt>:
    45e0:	f3 0f 1e fa          	endbr64
    45e4:	ff 25 8e 28 01 00    	jmp    QWORD PTR [rip+0x1288e]        # 16e78 <tcgetattr@GLIBC_2.2.5>
    45ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045f0 <fputs@plt>:
    45f0:	f3 0f 1e fa          	endbr64
    45f4:	ff 25 86 28 01 00    	jmp    QWORD PTR [rip+0x12886]        # 16e80 <fputs@GLIBC_2.2.5>
    45fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004600 <fflush@plt>:
    4600:	f3 0f 1e fa          	endbr64
    4604:	ff 25 7e 28 01 00    	jmp    QWORD PTR [rip+0x1287e]        # 16e88 <fflush@GLIBC_2.2.5>
    460a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004610 <fopen@plt>:
    4610:	f3 0f 1e fa          	endbr64
    4614:	ff 25 76 28 01 00    	jmp    QWORD PTR [rip+0x12876]        # 16e90 <fopen@GLIBC_2.2.5>
    461a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004620 <free@plt>:
    4620:	f3 0f 1e fa          	endbr64
    4624:	ff 25 6e 28 01 00    	jmp    QWORD PTR [rip+0x1286e]        # 16e98 <free@GLIBC_2.2.5>
    462a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004630 <exit@plt>:
    4630:	f3 0f 1e fa          	endbr64
    4634:	ff 25 66 28 01 00    	jmp    QWORD PTR [rip+0x12866]        # 16ea0 <exit@GLIBC_2.2.5>
    463a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004640 <getenv@plt>:
    4640:	f3 0f 1e fa          	endbr64
    4644:	ff 25 5e 28 01 00    	jmp    QWORD PTR [rip+0x1285e]        # 16ea8 <getenv@GLIBC_2.2.5>
    464a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004650 <wait@plt>:
    4650:	f3 0f 1e fa          	endbr64
    4654:	ff 25 56 28 01 00    	jmp    QWORD PTR [rip+0x12856]        # 16eb0 <wait@GLIBC_2.2.5>
    465a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004660 <tcsetattr@plt>:
    4660:	f3 0f 1e fa          	endbr64
    4664:	ff 25 4e 28 01 00    	jmp    QWORD PTR [rip+0x1284e]        # 16eb8 <tcsetattr@GLIBC_2.2.5>
    466a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004670 <_ZdaPv@plt>:
    4670:	f3 0f 1e fa          	endbr64
    4674:	ff 25 46 28 01 00    	jmp    QWORD PTR [rip+0x12846]        # 16ec0 <_ZdaPv@GLIBCXX_3.4>
    467a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004680 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@plt>:
    4680:	f3 0f 1e fa          	endbr64
    4684:	ff 25 3e 28 01 00    	jmp    QWORD PTR [rip+0x1283e]        # 16ec8 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@GLIBCXX_3.4.18>
    468a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004690 <vfprintf@plt>:
    4690:	f3 0f 1e fa          	endbr64
    4694:	ff 25 36 28 01 00    	jmp    QWORD PTR [rip+0x12836]        # 16ed0 <vfprintf@GLIBC_2.2.5>
    469a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046a0 <vfork@plt>:
    46a0:	f3 0f 1e fa          	endbr64
    46a4:	ff 25 2e 28 01 00    	jmp    QWORD PTR [rip+0x1282e]        # 16ed8 <vfork@GLIBC_2.2.5>
    46aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@plt>:
    46b0:	f3 0f 1e fa          	endbr64
    46b4:	ff 25 26 28 01 00    	jmp    QWORD PTR [rip+0x12826]        # 16ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@GLIBCXX_3.4.31>
    46ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046c0 <strcmp@plt>:
    46c0:	f3 0f 1e fa          	endbr64
    46c4:	ff 25 1e 28 01 00    	jmp    QWORD PTR [rip+0x1281e]        # 16ee8 <strcmp@GLIBC_2.2.5>
    46ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046d0 <fprintf@plt>:
    46d0:	f3 0f 1e fa          	endbr64
    46d4:	ff 25 16 28 01 00    	jmp    QWORD PTR [rip+0x12816]        # 16ef0 <fprintf@GLIBC_2.2.5>
    46da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046e0 <read@plt>:
    46e0:	f3 0f 1e fa          	endbr64
    46e4:	ff 25 0e 28 01 00    	jmp    QWORD PTR [rip+0x1280e]        # 16ef8 <read@GLIBC_2.2.5>
    46ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046f0 <_ZSt20__throw_out_of_rangePKc@plt>:
    46f0:	f3 0f 1e fa          	endbr64
    46f4:	ff 25 06 28 01 00    	jmp    QWORD PTR [rip+0x12806]        # 16f00 <_ZSt20__throw_out_of_rangePKc@GLIBCXX_3.4>
    46fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004700 <__cxa_rethrow@plt>:
    4700:	f3 0f 1e fa          	endbr64
    4704:	ff 25 fe 27 01 00    	jmp    QWORD PTR [rip+0x127fe]        # 16f08 <__cxa_rethrow@CXXABI_1.3>
    470a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004710 <chdir@plt>:
    4710:	f3 0f 1e fa          	endbr64
    4714:	ff 25 f6 27 01 00    	jmp    QWORD PTR [rip+0x127f6]        # 16f10 <chdir@GLIBC_2.2.5>
    471a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004720 <iscntrl@plt>:
    4720:	f3 0f 1e fa          	endbr64
    4724:	ff 25 ee 27 01 00    	jmp    QWORD PTR [rip+0x127ee]        # 16f18 <iscntrl@GLIBC_2.2.5>
    472a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004730 <fread@plt>:
    4730:	f3 0f 1e fa          	endbr64
    4734:	ff 25 e6 27 01 00    	jmp    QWORD PTR [rip+0x127e6]        # 16f20 <fread@GLIBC_2.2.5>
    473a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004740 <opendir@plt>:
    4740:	f3 0f 1e fa          	endbr64
    4744:	ff 25 de 27 01 00    	jmp    QWORD PTR [rip+0x127de]        # 16f28 <opendir@GLIBC_2.2.5>
    474a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004750 <setenv@plt>:
    4750:	f3 0f 1e fa          	endbr64
    4754:	ff 25 d6 27 01 00    	jmp    QWORD PTR [rip+0x127d6]        # 16f30 <setenv@GLIBC_2.2.5>
    475a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004760 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    4760:	f3 0f 1e fa          	endbr64
    4764:	ff 25 ce 27 01 00    	jmp    QWORD PTR [rip+0x127ce]        # 16f38 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    476a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004770 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4770:	f3 0f 1e fa          	endbr64
    4774:	ff 25 c6 27 01 00    	jmp    QWORD PTR [rip+0x127c6]        # 16f40 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    477a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004780 <readdir@plt>:
    4780:	f3 0f 1e fa          	endbr64
    4784:	ff 25 be 27 01 00    	jmp    QWORD PTR [rip+0x127be]        # 16f48 <readdir@GLIBC_2.2.5>
    478a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004790 <snprintf@plt>:
    4790:	f3 0f 1e fa          	endbr64
    4794:	ff 25 b6 27 01 00    	jmp    QWORD PTR [rip+0x127b6]        # 16f50 <snprintf@GLIBC_2.2.5>
    479a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047a0 <closedir@plt>:
    47a0:	f3 0f 1e fa          	endbr64
    47a4:	ff 25 ae 27 01 00    	jmp    QWORD PTR [rip+0x127ae]        # 16f58 <closedir@GLIBC_2.2.5>
    47aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047b0 <memmove@plt>:
    47b0:	f3 0f 1e fa          	endbr64
    47b4:	ff 25 a6 27 01 00    	jmp    QWORD PTR [rip+0x127a6]        # 16f60 <memmove@GLIBC_2.2.5>
    47ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047c0 <_exit@plt>:
    47c0:	f3 0f 1e fa          	endbr64
    47c4:	ff 25 9e 27 01 00    	jmp    QWORD PTR [rip+0x1279e]        # 16f68 <_exit@GLIBC_2.2.5>
    47ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047d0 <__cxa_end_catch@plt>:
    47d0:	f3 0f 1e fa          	endbr64
    47d4:	ff 25 96 27 01 00    	jmp    QWORD PTR [rip+0x12796]        # 16f70 <__cxa_end_catch@CXXABI_1.3>
    47da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047e0 <access@plt>:
    47e0:	f3 0f 1e fa          	endbr64
    47e4:	ff 25 8e 27 01 00    	jmp    QWORD PTR [rip+0x1278e]        # 16f78 <access@GLIBC_2.2.5>
    47ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047f0 <execve@plt>:
    47f0:	f3 0f 1e fa          	endbr64
    47f4:	ff 25 86 27 01 00    	jmp    QWORD PTR [rip+0x12786]        # 16f80 <execve@GLIBC_2.2.5>
    47fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004800 <__cxa_throw@plt>:
    4800:	f3 0f 1e fa          	endbr64
    4804:	ff 25 7e 27 01 00    	jmp    QWORD PTR [rip+0x1277e]        # 16f88 <__cxa_throw@CXXABI_1.3>
    480a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004810 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4810:	f3 0f 1e fa          	endbr64
    4814:	ff 25 76 27 01 00    	jmp    QWORD PTR [rip+0x12776]        # 16f90 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    481a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000004820 <_start>:
    4820:	f3 0f 1e fa          	endbr64
    4824:	31 ed                	xor    ebp,ebp
    4826:	49 89 d1             	mov    r9,rdx
    4829:	5e                   	pop    rsi
    482a:	48 89 e2             	mov    rdx,rsp
    482d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    4831:	50                   	push   rax
    4832:	54                   	push   rsp
    4833:	45 31 c0             	xor    r8d,r8d
    4836:	31 c9                	xor    ecx,ecx
    4838:	48 8d 3d 11 60 00 00 	lea    rdi,[rip+0x6011]        # a850 <main>
    483f:	ff 15 73 27 01 00    	call   QWORD PTR [rip+0x12773]        # 16fb8 <__libc_start_main@GLIBC_2.34>
    4845:	f4                   	hlt
    4846:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    484d:	00 00 00 
    4850:	f3 0f 1e fa          	endbr64
    4854:	80 3d bd 27 01 00 00 	cmp    BYTE PTR [rip+0x127bd],0x0        # 17018 <__bss_start>
    485b:	75 24                	jne    4881 <_start+0x61>
    485d:	48 83 3d 43 27 01 00 	cmp    QWORD PTR [rip+0x12743],0x0        # 16fa8 <__register_frame_info@Base>
    4864:	00 
    4865:	c6 05 ac 27 01 00 01 	mov    BYTE PTR [rip+0x127ac],0x1        # 17018 <__bss_start>
    486c:	74 13                	je     4881 <_start+0x61>
    486e:	48 8d 3d 23 f7 00 00 	lea    rdi,[rip+0xf723]        # 13f98 <GCC_except_table264+0x19c4>
    4875:	48 8d 35 a4 27 01 00 	lea    rsi,[rip+0x127a4]        # 17020 <__bss_start+0x8>
    487c:	e9 8f fb ff ff       	jmp    4410 <__register_frame_info@plt>
    4881:	c3                   	ret
    4882:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    4889:	1f 84 00 00 00 00 00 
    4890:	f3 0f 1e fa          	endbr64
    4894:	80 3d c5 27 01 00 00 	cmp    BYTE PTR [rip+0x127c5],0x0        # 17060 <__bss_start+0x48>
    489b:	75 39                	jne    48d6 <_start+0xb6>
    489d:	50                   	push   rax
    489e:	48 83 3d 0a 27 01 00 	cmp    QWORD PTR [rip+0x1270a],0x0        # 16fb0 <__cxa_finalize@GLIBC_2.2.5>
    48a5:	00 
    48a6:	c6 05 b3 27 01 00 01 	mov    BYTE PTR [rip+0x127b3],0x1        # 17060 <__bss_start+0x48>
    48ad:	74 0c                	je     48bb <_start+0x9b>
    48af:	48 8b 3d 52 27 01 00 	mov    rdi,QWORD PTR [rip+0x12752]        # 17008 <__dso_handle>
    48b6:	e8 65 fb ff ff       	call   4420 <__cxa_finalize@plt>
    48bb:	48 83 3d 05 27 01 00 	cmp    QWORD PTR [rip+0x12705],0x0        # 16fc8 <__deregister_frame_info@Base>
    48c2:	00 
    48c3:	48 8d 64 24 08       	lea    rsp,[rsp+0x8]
    48c8:	74 0c                	je     48d6 <_start+0xb6>
    48ca:	48 8d 3d c7 f6 00 00 	lea    rdi,[rip+0xf6c7]        # 13f98 <GCC_except_table264+0x19c4>
    48d1:	e9 5a fb ff ff       	jmp    4430 <__deregister_frame_info@plt>
    48d6:	c3                   	ret
    48d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    48de:	00 00 

00000000000048e0 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:
    closedir(dir);
    return 0;
}

int dir_cmd(TerminalIO& terminal, const std::string& current_dir, const std::vector<std::string>& args)
{
    48e0:	f3 0f 1e fa          	endbr64
    48e4:	55                   	push   rbp
    48e5:	48 89 e5             	mov    rbp,rsp
    48e8:	48 83 ec 50          	sub    rsp,0x50
    48ec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    48f0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    48f4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    if(args.size() == 0)
    48f8:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    48fc:	e8 7f 15 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4901:	48 83 f8 00          	cmp    rax,0x0
    4905:	75 1b                	jne    4922 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x42>
    {
        int ret = perform_dir_cmd(terminal, current_dir);
    4907:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    490b:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    490f:	e8 cc 00 00 00       	call   49e0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4914:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
        return ret;
    4917:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    491a:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    491d:	e9 a8 00 00 00       	jmp    49ca <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xea>
    }
    else
    {
        int ret = 0;
    4922:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
        for(size_t i = 0; i < args.size(); i++)
    4929:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    4930:	00 
    4931:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4935:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4939:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    493d:	e8 3e 15 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4942:	48 89 c1             	mov    rcx,rax
    4945:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4949:	48 39 c8             	cmp    rax,rcx
    494c:	73 76                	jae    49c4 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xe4>
        {
            terminal.print("%s:\r\n", args[i].c_str());
    494e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4952:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4956:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    495a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    495e:	e8 3d 15 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4963:	48 89 c7             	mov    rdi,rax
    4966:	e8 65 15 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    496b:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    496f:	48 89 c2             	mov    rdx,rax
    4972:	48 8d 35 8f c6 00 00 	lea    rsi,[rip+0xc68f]        # 11008 <_IO_stdin_used+0x8>
    4979:	b0 00                	mov    al,0x0
    497b:	e8 f0 48 00 00       	call   9270 <_ZN10TerminalIO5printEPKcz>
            int path_ret = perform_dir_cmd(terminal, args[i]);
    4980:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4984:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4988:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    498c:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4990:	e8 0b 15 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4995:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    4999:	48 89 c6             	mov    rsi,rax
    499c:	e8 3f 00 00 00       	call   49e0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    49a1:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
            if(path_ret != 0)
    49a4:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
    49a8:	74 07                	je     49b1 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xd1>
            {
                ret = -1;
    49aa:	c7 45 d8 ff ff ff ff 	mov    DWORD PTR [rbp-0x28],0xffffffff
            }
        }
    49b1:	eb 00                	jmp    49b3 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xd3>
        for(size_t i = 0; i < args.size(); i++)
    49b3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    49b7:	48 83 c0 01          	add    rax,0x1
    49bb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    49bf:	e9 6d ff ff ff       	jmp    4931 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x51>
        return ret; 
    49c4:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    49c7:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    }
}
    49ca:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    49cd:	48 83 c4 50          	add    rsp,0x50
    49d1:	5d                   	pop    rbp
    49d2:	c3                   	ret
    49d3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    49da:	84 00 00 00 00 00 

00000000000049e0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
    49e0:	55                   	push   rbp
    49e1:	48 89 e5             	mov    rbp,rsp
    49e4:	48 83 ec 30          	sub    rsp,0x30
    49e8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    49ec:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    DIR* dir = opendir(path.c_str());
    49f0:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    49f4:	e8 d7 14 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    49f9:	48 89 c7             	mov    rdi,rax
    49fc:	e8 3f fd ff ff       	call   4740 <opendir@plt>
    4a01:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    if(dir == NULL)
    4a05:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    4a0a:	75 32                	jne    4a3e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5e>
        terminal.print_error("Error opening directory %s\r\n", path.c_str());
    4a0c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a10:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4a14:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    4a18:	e8 b3 14 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4a1d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    4a21:	48 89 c2             	mov    rdx,rax
    4a24:	48 8d 35 0e c6 00 00 	lea    rsi,[rip+0xc60e]        # 11039 <_IO_stdin_used+0x39>
    4a2b:	b0 00                	mov    al,0x0
    4a2d:	e8 1e 49 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        return 1;
    4a32:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
    4a39:	e9 91 00 00 00       	jmp    4acf <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xef>
    struct dirent* entry = readdir(dir);
    4a3e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4a42:	e8 39 fd ff ff       	call   4780 <readdir@plt>
    4a47:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    while(entry != NULL)
    4a4b:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    4a50:	74 5b                	je     4aad <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd>
        if(std::strcmp(entry->d_name, ".") != 0 && std::strcmp(entry->d_name, "..") != 0)
    4a52:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4a56:	48 83 c7 13          	add    rdi,0x13
    4a5a:	48 8d 35 c7 c6 00 00 	lea    rsi,[rip+0xc6c7]        # 11128 <_IO_stdin_used+0x128>
    4a61:	e8 5a fc ff ff       	call   46c0 <strcmp@plt>
    4a66:	83 f8 00             	cmp    eax,0x0
    4a69:	74 33                	je     4a9e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbe>
    4a6b:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4a6f:	48 83 c7 13          	add    rdi,0x13
    4a73:	48 8d 35 ad c6 00 00 	lea    rsi,[rip+0xc6ad]        # 11127 <_IO_stdin_used+0x127>
    4a7a:	e8 41 fc ff ff       	call   46c0 <strcmp@plt>
    4a7f:	83 f8 00             	cmp    eax,0x0
    4a82:	74 1a                	je     4a9e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbe>
            terminal.print("%s\r\n", entry->d_name);
    4a84:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    4a88:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a8c:	48 83 c2 13          	add    rdx,0x13
    4a90:	48 8d 35 ba c5 00 00 	lea    rsi,[rip+0xc5ba]        # 11051 <_IO_stdin_used+0x51>
    4a97:	b0 00                	mov    al,0x0
    4a99:	e8 d2 47 00 00       	call   9270 <_ZN10TerminalIO5printEPKcz>
        entry = readdir(dir);
    4a9e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4aa2:	e8 d9 fc ff ff       	call   4780 <readdir@plt>
    4aa7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    while(entry != NULL)
    4aab:	eb 9e                	jmp    4a4b <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b>
    terminal.print("\r\n");
    4aad:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    4ab1:	48 8d 35 8f c9 00 00 	lea    rsi,[rip+0xc98f]        # 11447 <_IO_stdin_used+0x447>
    4ab8:	b0 00                	mov    al,0x0
    4aba:	e8 b1 47 00 00       	call   9270 <_ZN10TerminalIO5printEPKcz>
    closedir(dir);
    4abf:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4ac3:	e8 d8 fc ff ff       	call   47a0 <closedir@plt>
    return 0;
    4ac8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
}
    4acf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    4ad2:	48 83 c4 30          	add    rsp,0x30
    4ad6:	5d                   	pop    rbp
    4ad7:	c3                   	ret
    4ad8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    4adf:	00 

0000000000004ae0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:


std::string update_current_dir(const std::string& current_dir)
{
    4ae0:	f3 0f 1e fa          	endbr64
    4ae4:	55                   	push   rbp
    4ae5:	48 89 e5             	mov    rbp,rsp
    4ae8:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    4aef:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    4af3:	48 89 f8             	mov    rax,rdi
    4af6:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    4afa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4b01:	00 00 
    4b03:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4b07:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    4b0b:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    char* dir = getcwd(NULL, 0);
    4b0f:	31 c0                	xor    eax,eax
    4b11:	89 c6                	mov    esi,eax
    4b13:	48 89 f7             	mov    rdi,rsi
    4b16:	e8 e5 f9 ff ff       	call   4500 <getcwd@plt>
    4b1b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    if(dir == NULL)
    4b1f:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    4b24:	75 12                	jne    4b38 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x58>
    4b26:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    {
        // on error, assume we stayed in the original directory
        return current_dir;
    4b2a:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    4b2e:	e8 dd 13 00 00       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    4b33:	e9 a6 00 00 00       	jmp    4bde <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfe>
    }
    setenv("PWD", dir, true);
    4b38:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    4b3c:	48 8d 3d ce c4 00 00 	lea    rdi,[rip+0xc4ce]        # 11011 <_IO_stdin_used+0x11>
    4b43:	ba 01 00 00 00       	mov    edx,0x1
    4b48:	e8 03 fc ff ff       	call   4750 <setenv@plt>
    if(current_dir.length() > 0)
    4b4d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    4b51:	e8 2a 15 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4b56:	48 83 f8 00          	cmp    rax,0x0
    4b5a:	76 1d                	jbe    4b79 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x99>
    {
        setenv("OLDPWD", current_dir.c_str(), true);
    4b5c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    4b60:	e8 6b 13 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4b65:	48 89 c6             	mov    rsi,rax
    4b68:	48 8d 3d 9f c4 00 00 	lea    rdi,[rip+0xc49f]        # 1100e <_IO_stdin_used+0xe>
    4b6f:	ba 01 00 00 00       	mov    edx,0x1
    4b74:	e8 d7 fb ff ff       	call   4750 <setenv@plt>
    4b79:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    }
    std::string res = dir;
    4b7d:	c6 45 b7 00          	mov    BYTE PTR [rbp-0x49],0x0
    4b81:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    4b85:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    4b89:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    4b8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b91:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b95:	e8 06 15 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    4b9a:	eb 00                	jmp    4b9c <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbc>
    4b9c:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    4ba0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    free(dir); // dir is malloced
    4ba4:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    4ba8:	e8 73 fa ff ff       	call   4620 <free@plt>
    return res;
    4bad:	c6 45 b7 01          	mov    BYTE PTR [rbp-0x49],0x1
}
    4bb1:	f6 45 b7 01          	test   BYTE PTR [rbp-0x49],0x1
    4bb5:	75 25                	jne    4bdc <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfc>
    4bb7:	eb 1a                	jmp    4bd3 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf3>
    4bb9:	f3 0f 1e fa          	endbr64
    4bbd:	48 89 c1             	mov    rcx,rax
    4bc0:	89 d0                	mov    eax,edx
    4bc2:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    4bc6:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    4bc9:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    4bcd:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    std::string res = dir;
    4bd1:	eb 2a                	jmp    4bfd <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x11d>
    4bd3:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
}
    4bd7:	e8 74 15 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    4bdc:	eb 00                	jmp    4bde <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfe>
    4bde:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4be5:	00 00 
    4be7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4beb:	48 39 c8             	cmp    rax,rcx
    4bee:	75 30                	jne    4c20 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>
    4bf0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4bf4:	48 81 c4 80 00 00 00 	add    rsp,0x80
    4bfb:	5d                   	pop    rbp
    4bfc:	c3                   	ret
    std::string res = dir;
    4bfd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4c01:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    4c05:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4c0c:	00 00 
    4c0e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4c12:	48 39 c8             	cmp    rax,rcx
    4c15:	75 09                	jne    4c20 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>
    4c17:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    4c1b:	e8 60 f8 ff ff       	call   4480 <_Unwind_Resume@plt>
    4c20:	e8 ab f9 ff ff       	call   45d0 <__stack_chk_fail@plt>
    4c25:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    4c2c:	00 00 00 00 

0000000000004c30 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:

int cd_cmd(TerminalIO& terminal, std::string& current_dir, const std::vector<std::string>& args)
{
    4c30:	f3 0f 1e fa          	endbr64
    4c34:	55                   	push   rbp
    4c35:	48 89 e5             	mov    rbp,rsp
    4c38:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    4c3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4c46:	00 00 
    4c48:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c4c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4c50:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    4c54:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    if(args.size() == 0)
    4c58:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4c5c:	e8 1f 12 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4c61:	48 83 f8 00          	cmp    rax,0x0
    4c65:	0f 85 8b 00 00 00    	jne    4cf6 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xc6>
    {
        const char* home = getenv("HOME");
    4c6b:	48 8d 3d a3 c3 00 00 	lea    rdi,[rip+0xc3a3]        # 11015 <_IO_stdin_used+0x15>
    4c72:	e8 c9 f9 ff ff       	call   4640 <getenv@plt>
    4c77:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
        if(home == NULL)
    4c7b:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    4c80:	75 1e                	jne    4ca0 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x70>
        {
            terminal.print_error("Error getting home directory\r\n");
    4c82:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    4c86:	48 8d 35 8d c3 00 00 	lea    rsi,[rip+0xc38d]        # 1101a <_IO_stdin_used+0x1a>
    4c8d:	b0 00                	mov    al,0x0
    4c8f:	e8 bc 46 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
            return -1;
    4c94:	c7 45 b4 ff ff ff ff 	mov    DWORD PTR [rbp-0x4c],0xffffffff
    4c9b:	e9 0e 01 00 00       	jmp    4dae <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
        }
        int value = chdir(home);
    4ca0:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    4ca4:	e8 67 fa ff ff       	call   4710 <chdir@plt>
    4ca9:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
        current_dir = update_current_dir(current_dir);
    4cac:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    4cb0:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    4cb4:	e8 27 fe ff ff       	call   4ae0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4cb9:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    4cbd:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    4cc1:	e8 ca 14 00 00       	call   6190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    4cc6:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    4cca:	e8 81 14 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
        if(value != 0)
    4ccf:	83 7d 8c 00          	cmp    DWORD PTR [rbp-0x74],0x0
    4cd3:	74 16                	je     4ceb <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xbb>
        {
            terminal.print_error("Error opening directory %s\r\n", home);
    4cd5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    4cd9:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    4cdd:	48 8d 35 55 c3 00 00 	lea    rsi,[rip+0xc355]        # 11039 <_IO_stdin_used+0x39>
    4ce4:	b0 00                	mov    al,0x0
    4ce6:	e8 65 46 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        }
        return value;
    4ceb:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    4cee:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4cf1:	e9 b8 00 00 00       	jmp    4dae <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
    }
    else if(args.size() == 1)
    4cf6:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4cfa:	e8 81 11 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4cff:	48 83 f8 01          	cmp    rax,0x1
    4d03:	75 76                	jne    4d7b <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x14b>
    {
        int value = chdir(args[0].c_str());
    4d05:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4d09:	31 c0                	xor    eax,eax
    4d0b:	89 c6                	mov    esi,eax
    4d0d:	e8 8e 11 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4d12:	48 89 c7             	mov    rdi,rax
    4d15:	e8 b6 11 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4d1a:	48 89 c7             	mov    rdi,rax
    4d1d:	e8 ee f9 ff ff       	call   4710 <chdir@plt>
    4d22:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
        update_current_dir(current_dir);
    4d25:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    4d29:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    4d2d:	e8 ae fd ff ff       	call   4ae0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4d32:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    4d36:	e8 15 14 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
        if(value != 0)
    4d3b:	83 7d 88 00          	cmp    DWORD PTR [rbp-0x78],0x0
    4d3f:	74 32                	je     4d73 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x143>
        {
            terminal.print_error("Error opening directory %s\r\n", args[0].c_str());
    4d41:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4d45:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    4d49:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4d4d:	31 c0                	xor    eax,eax
    4d4f:	89 c6                	mov    esi,eax
    4d51:	e8 4a 11 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4d56:	48 89 c7             	mov    rdi,rax
    4d59:	e8 72 11 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4d5e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    4d62:	48 89 c2             	mov    rdx,rax
    4d65:	48 8d 35 cd c2 00 00 	lea    rsi,[rip+0xc2cd]        # 11039 <_IO_stdin_used+0x39>
    4d6c:	b0 00                	mov    al,0x0
    4d6e:	e8 dd 45 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        }
        return value;
    4d73:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
    4d76:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4d79:	eb 33                	jmp    4dae <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
    }
    else
    {
        terminal.print_error("Expected at most 1 argument for '@'. Got %zu\r\n", args.size());
    4d7b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4d7f:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    4d86:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4d8a:	e8 f1 10 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4d8f:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    4d96:	48 89 c2             	mov    rdx,rax
    4d99:	48 8d 35 b6 c2 00 00 	lea    rsi,[rip+0xc2b6]        # 11056 <_IO_stdin_used+0x56>
    4da0:	b0 00                	mov    al,0x0
    4da2:	e8 a9 45 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        return -1;
    4da7:	c7 45 b4 ff ff ff ff 	mov    DWORD PTR [rbp-0x4c],0xffffffff
    }
}
    4dae:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4db1:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    4db7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4dbe:	00 00 
    4dc0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4dc4:	48 39 c8             	cmp    rax,rcx
    4dc7:	75 0f                	jne    4dd8 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x1a8>
    4dc9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    4dcf:	48 81 c4 90 00 00 00 	add    rsp,0x90
    4dd6:	5d                   	pop    rbp
    4dd7:	c3                   	ret
    4dd8:	e8 f3 f7 ff ff       	call   45d0 <__stack_chk_fail@plt>
    4ddd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000004de0 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:

int pwd_cmd(TerminalIO& terminal, const std::string& current_dir, const std::vector<std::string>& args)
{
    4de0:	f3 0f 1e fa          	endbr64
    4de4:	55                   	push   rbp
    4de5:	48 89 e5             	mov    rbp,rsp
    4de8:	48 83 ec 30          	sub    rsp,0x30
    4dec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    4df0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    4df4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    if(args.size() == 0)
    4df8:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4dfc:	e8 7f 10 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e01:	48 83 f8 00          	cmp    rax,0x0
    4e05:	75 2f                	jne    4e36 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x56>
    {
        terminal.print("%s\r\n", current_dir.c_str()); 
    4e07:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4e0b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4e0f:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    4e13:	e8 b8 10 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4e18:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4e1c:	48 89 c2             	mov    rdx,rax
    4e1f:	48 8d 35 2b c2 00 00 	lea    rsi,[rip+0xc22b]        # 11051 <_IO_stdin_used+0x51>
    4e26:	b0 00                	mov    al,0x0
    4e28:	e8 43 44 00 00       	call   9270 <_ZN10TerminalIO5printEPKcz>
        return 0;
    4e2d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    4e34:	eb 2d                	jmp    4e63 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x83>
    }
    else
    {
        terminal.print_error("Expected no arguments for 'pwd'. Got %zu\r\n", args.size());
    4e36:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4e3a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4e3e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4e42:	e8 39 10 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e47:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    4e4b:	48 89 c2             	mov    rdx,rax
    4e4e:	48 8d 35 30 c2 00 00 	lea    rsi,[rip+0xc230]        # 11085 <_IO_stdin_used+0x85>
    4e55:	b0 00                	mov    al,0x0
    4e57:	e8 f4 44 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        return -1;
    4e5c:	c7 45 fc ff ff ff ff 	mov    DWORD PTR [rbp-0x4],0xffffffff
    }
}
    4e63:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    4e66:	48 83 c4 30          	add    rsp,0x30
    4e6a:	5d                   	pop    rbp
    4e6b:	c3                   	ret
    4e6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004e70 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE>:

char** get_argument_list(const std::vector<std::string>& args)
{
    4e70:	f3 0f 1e fa          	endbr64
    4e74:	55                   	push   rbp
    4e75:	48 89 e5             	mov    rbp,rsp
    4e78:	48 83 ec 40          	sub    rsp,0x40
    4e7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   char** arguments = allocate_array<char*>(args.size() + 1);
    4e80:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4e84:	e8 f7 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e89:	48 89 c7             	mov    rdi,rax
    4e8c:	48 83 c7 01          	add    rdi,0x1
    4e90:	e8 0b 15 00 00       	call   63a0 <_Z14allocate_arrayIPcEPT_m>
    4e95:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   for(size_t i = 0; i < args.size(); i++)
    4e99:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    4ea0:	00 
    4ea1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ea5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4ea9:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4ead:	e8 ce 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4eb2:	48 89 c1             	mov    rcx,rax
    4eb5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4eb9:	48 39 c8             	cmp    rax,rcx
    4ebc:	0f 83 c3 00 00 00    	jae    4f85 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE+0x115>
   {
       arguments[i] = allocate_array<char>(args[i].length() + 1);
    4ec2:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4ec6:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4eca:	e8 d1 0f 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4ecf:	48 89 c7             	mov    rdi,rax
    4ed2:	e8 a9 11 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4ed7:	48 89 c7             	mov    rdi,rax
    4eda:	48 83 c7 01          	add    rdi,0x1
    4ede:	e8 2d 15 00 00       	call   6410 <_Z14allocate_arrayIcEPT_m>
    4ee3:	48 89 c2             	mov    rdx,rax
    4ee6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4eea:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4eee:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
       std::memcpy(arguments[i], args[i].c_str(), sizeof(char) * args[i].length());
    4ef2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4ef6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4efa:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    4efe:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4f02:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f06:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4f0a:	e8 91 0f 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4f0f:	48 89 c7             	mov    rdi,rax
    4f12:	e8 b9 0f 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4f17:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4f1b:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f1f:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4f23:	e8 78 0f 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4f28:	48 89 c7             	mov    rdi,rax
    4f2b:	e8 50 11 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4f30:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    4f34:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4f38:	48 89 c2             	mov    rdx,rax
    4f3b:	48 c1 e2 00          	shl    rdx,0x0
    4f3f:	e8 1c f6 ff ff       	call   4560 <memcpy@plt>
       arguments[i][args[i].length()] = 0;
    4f44:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f48:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4f4c:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    4f50:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4f54:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f58:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4f5c:	e8 3f 0f 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4f61:	48 89 c7             	mov    rdi,rax
    4f64:	e8 17 11 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4f69:	48 89 c1             	mov    rcx,rax
    4f6c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f70:	c6 04 08 00          	mov    BYTE PTR [rax+rcx*1],0x0
   for(size_t i = 0; i < args.size(); i++)
    4f74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4f78:	48 83 c0 01          	add    rax,0x1
    4f7c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4f80:	e9 1c ff ff ff       	jmp    4ea1 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE+0x31>
   }
   arguments[args.size()] = NULL;
    4f85:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f89:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4f8d:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f91:	e8 ea 0e 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4f96:	48 89 c1             	mov    rcx,rax
    4f99:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f9d:	48 c7 04 c8 00 00 00 	mov    QWORD PTR [rax+rcx*8],0x0
    4fa4:	00 
   return arguments;
    4fa5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4fa9:	48 83 c4 40          	add    rsp,0x40
    4fad:	5d                   	pop    rbp
    4fae:	c3                   	ret
    4faf:	90                   	nop

0000000000004fb0 <_Z14parse_env_pathB5cxx11v>:
}

std::vector<std::string> parse_env_path()
{
    4fb0:	f3 0f 1e fa          	endbr64
    4fb4:	55                   	push   rbp
    4fb5:	48 89 e5             	mov    rbp,rsp
    4fb8:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    4fbf:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    4fc3:	48 89 f8             	mov    rax,rdi
    4fc6:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    4fca:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fd1:	00 00 
    4fd3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fd7:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    std::vector<std::string> paths;
    4fdb:	c6 45 cf 00          	mov    BYTE PTR [rbp-0x31],0x0
    4fdf:	e8 7c 14 00 00       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    char* path = getenv("PATH");
    4fe4:	48 8d 3d c5 c0 00 00 	lea    rdi,[rip+0xc0c5]        # 110b0 <_IO_stdin_used+0xb0>
    4feb:	e8 50 f6 ff ff       	call   4640 <getenv@plt>
    4ff0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    if(path == NULL)
    4ff4:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    4ff9:	75 10                	jne    500b <_Z14parse_env_pathB5cxx11v+0x5b>
    {
        return paths;
    4ffb:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
    4fff:	c7 45 bc 01 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1
    5006:	e9 f0 00 00 00       	jmp    50fb <_Z14parse_env_pathB5cxx11v+0x14b>
    }
    size_t index = 0;
    500b:	48 c7 45 b0 00 00 00 	mov    QWORD PTR [rbp-0x50],0x0
    5012:	00 
    std::string path_elem;
    5013:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5017:	e8 64 14 00 00       	call   6480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    while(path[index] != 0)
    501c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5020:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    5024:	0f be 04 08          	movsx  eax,BYTE PTR [rax+rcx*1]
    5028:	83 f8 00             	cmp    eax,0x0
    502b:	0f 84 96 00 00 00    	je     50c7 <_Z14parse_env_pathB5cxx11v+0x117>
    {
        if(path[index] == ':')
    5031:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5035:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    5039:	0f be 04 08          	movsx  eax,BYTE PTR [rax+rcx*1]
    503d:	83 f8 3a             	cmp    eax,0x3a
    5040:	75 5b                	jne    509d <_Z14parse_env_pathB5cxx11v+0xed>
        {
            if(path_elem.length() > 0)
    5042:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5046:	e8 35 10 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    504b:	48 83 f8 00          	cmp    rax,0x0
    504f:	76 38                	jbe    5089 <_Z14parse_env_pathB5cxx11v+0xd9>
    5051:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5055:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
            {
                paths.emplace_back(path_elem);
    5059:	e8 b2 14 00 00       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    505e:	eb 00                	jmp    5060 <_Z14parse_env_pathB5cxx11v+0xb0>
            }
    5060:	eb 27                	jmp    5089 <_Z14parse_env_pathB5cxx11v+0xd9>
    5062:	f3 0f 1e fa          	endbr64
    5066:	48 89 c1             	mov    rcx,rax
    if(path_elem.length() > 0)
    {
        paths.emplace_back(path_elem);
    }
    return paths;
}
    5069:	89 d0                	mov    eax,edx
    506b:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    506f:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    5072:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5076:	e8 d5 10 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    507b:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    507f:	e8 7c 15 00 00       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5084:	e9 a0 00 00 00       	jmp    5129 <_Z14parse_env_pathB5cxx11v+0x179>
            path_elem = "";
    5089:	48 8d 35 b9 c3 00 00 	lea    rsi,[rip+0xc3b9]        # 11449 <_IO_stdin_used+0x449>
    5090:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5094:	e8 f7 14 00 00       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    5099:	eb 00                	jmp    509b <_Z14parse_env_pathB5cxx11v+0xeb>
        }
    509b:	eb 19                	jmp    50b6 <_Z14parse_env_pathB5cxx11v+0x106>
            path_elem += path[index];
    509d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    50a1:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    50a5:	0f be 34 08          	movsx  esi,BYTE PTR [rax+rcx*1]
    50a9:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    50ad:	e8 0e 15 00 00       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    50b2:	eb 00                	jmp    50b4 <_Z14parse_env_pathB5cxx11v+0x104>
    50b4:	eb 00                	jmp    50b6 <_Z14parse_env_pathB5cxx11v+0x106>
        index++;
    50b6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    50ba:	48 83 c0 01          	add    rax,0x1
    50be:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    while(path[index] != 0)
    50c2:	e9 55 ff ff ff       	jmp    501c <_Z14parse_env_pathB5cxx11v+0x6c>
    if(path_elem.length() > 0)
    50c7:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    50cb:	e8 b0 0f 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    50d0:	48 83 f8 00          	cmp    rax,0x0
    50d4:	76 11                	jbe    50e7 <_Z14parse_env_pathB5cxx11v+0x137>
    50d6:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    50da:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
        paths.emplace_back(path_elem);
    50de:	e8 2d 14 00 00       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    50e3:	eb 00                	jmp    50e5 <_Z14parse_env_pathB5cxx11v+0x135>
    }
    50e5:	eb 00                	jmp    50e7 <_Z14parse_env_pathB5cxx11v+0x137>
    return paths;
    50e7:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
    50eb:	c7 45 bc 01 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1
}
    50f2:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    50f6:	e8 55 10 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    50fb:	f6 45 cf 01          	test   BYTE PTR [rbp-0x31],0x1
    50ff:	75 09                	jne    510a <_Z14parse_env_pathB5cxx11v+0x15a>
    5101:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5105:	e8 f6 14 00 00       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    510a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5111:	00 00 
    5113:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5117:	48 39 c8             	cmp    rax,rcx
    511a:	75 30                	jne    514c <_Z14parse_env_pathB5cxx11v+0x19c>
    511c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    5120:	48 81 c4 80 00 00 00 	add    rsp,0x80
    5127:	5d                   	pop    rbp
    5128:	c3                   	ret
    5129:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    512d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    5131:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5138:	00 00 
    513a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    513e:	48 39 c8             	cmp    rax,rcx
    5141:	75 09                	jne    514c <_Z14parse_env_pathB5cxx11v+0x19c>
    5143:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    5147:	e8 34 f3 ff ff       	call   4480 <_Unwind_Resume@plt>
    514c:	e8 7f f4 ff ff       	call   45d0 <__stack_chk_fail@plt>
    5151:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    5158:	0f 1f 84 00 00 00 00 
    515f:	00 

0000000000005160 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream>:
    }
    return res;
}

int exec_process(TerminalIO& terminal, const std::vector<std::string>& args, const TerminalStream& streams)
{
    5160:	f3 0f 1e fa          	endbr64
    5164:	55                   	push   rbp
    5165:	48 89 e5             	mov    rbp,rsp
    5168:	48 81 ec e0 01 00 00 	sub    rsp,0x1e0
    516f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5176:	00 00 
    5178:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    517c:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
    5183:	48 89 b5 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rsi
    518a:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
    std::vector<std::string> paths;
    5191:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5195:	e8 c6 12 00 00       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    bool has_slash = false;
    519a:	c6 85 47 ff ff ff 00 	mov    BYTE PTR [rbp-0xb9],0x0
    for(size_t i = 0; i < args[0].length() && !has_slash; i++)
    51a1:	48 c7 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],0x0
    51a8:	00 00 00 00 
    51ac:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    51b3:	48 89 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],rax
    51ba:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    51c1:	31 c0                	xor    eax,eax
    51c3:	89 c6                	mov    esi,eax
    51c5:	e8 d6 0c 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    51ca:	48 89 c7             	mov    rdi,rax
    51cd:	e8 ae 0e 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    51d2:	48 8b 8d b0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x150]
    51d9:	48 89 c2             	mov    rdx,rax
    51dc:	31 c0                	xor    eax,eax
    51de:	48 39 d1             	cmp    rcx,rdx
    51e1:	88 85 bb fe ff ff    	mov    BYTE PTR [rbp-0x145],al
    51e7:	73 0e                	jae    51f7 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x97>
    51e9:	8a 85 47 ff ff ff    	mov    al,BYTE PTR [rbp-0xb9]
    51ef:	34 ff                	xor    al,0xff
    51f1:	88 85 bb fe ff ff    	mov    BYTE PTR [rbp-0x145],al
    51f7:	8a 85 bb fe ff ff    	mov    al,BYTE PTR [rbp-0x145]
    51fd:	a8 01                	test   al,0x1
    51ff:	75 02                	jne    5203 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xa3>
    5201:	eb 47                	jmp    524a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xea>
    {
        if(args[0][i] == '/')
    5203:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    520a:	31 c0                	xor    eax,eax
    520c:	89 c6                	mov    esi,eax
    520e:	e8 8d 0c 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5213:	48 89 c7             	mov    rdi,rax
    5216:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    521d:	e8 4e 14 00 00       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    5222:	0f be 00             	movsx  eax,BYTE PTR [rax]
    5225:	83 f8 2f             	cmp    eax,0x2f
    5228:	75 07                	jne    5231 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xd1>
        {
            has_slash = true;
    522a:	c6 85 47 ff ff ff 01 	mov    BYTE PTR [rbp-0xb9],0x1
        }
    }
    5231:	eb 00                	jmp    5233 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xd3>
    for(size_t i = 0; i < args[0].length() && !has_slash; i++)
    5233:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    523a:	48 83 c0 01          	add    rax,0x1
    523e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    5245:	e9 62 ff ff ff       	jmp    51ac <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c>
    if(has_slash)
    524a:	f6 85 47 ff ff ff 01 	test   BYTE PTR [rbp-0xb9],0x1
    5251:	74 3e                	je     5291 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x131>
    {
        paths.emplace_back(args[0]);
    5253:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    525a:	31 c0                	xor    eax,eax
    525c:	89 c6                	mov    esi,eax
    525e:	e8 3d 0c 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5263:	48 89 c6             	mov    rsi,rax
    5266:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    526a:	e8 41 14 00 00       	call   66b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_>
    526f:	eb 00                	jmp    5271 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x111>
    }
    5271:	e9 0e 01 00 00       	jmp    5384 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x224>
    5276:	f3 0f 1e fa          	endbr64
    527a:	48 89 c1             	mov    rcx,rax
            return status;
        }
    }
    terminal.print_error("Unknown command '%s'\r\n", args[0].c_str());
    return -1;
}
    527d:	89 d0                	mov    eax,edx
    527f:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    5286:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
    528c:	e9 35 08 00 00       	jmp    5ac6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
    5291:	48 8d bd 68 ff ff ff 	lea    rdi,[rbp-0x98]
        paths = parse_env_path();
    5298:	e8 13 fd ff ff       	call   4fb0 <_Z14parse_env_pathB5cxx11v>
    529d:	eb 00                	jmp    529f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x13f>
    529f:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52a3:	48 8d b5 68 ff ff ff 	lea    rsi,[rbp-0x98]
    52aa:	e8 81 14 00 00       	call   6730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>
    52af:	48 8d bd 68 ff ff ff 	lea    rdi,[rbp-0x98]
    52b6:	e8 45 13 00 00       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
        for(size_t i = 0; i < paths.size(); i++)
    52bb:	48 c7 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],0x0
    52c2:	00 00 00 00 
    52c6:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    52cd:	48 89 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rax
    52d4:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52d8:	e8 a3 0b 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    52dd:	48 89 c1             	mov    rcx,rax
    52e0:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
    52e7:	48 39 c8             	cmp    rax,rcx
    52ea:	0f 83 92 00 00 00    	jae    5382 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x222>
            if(paths[i].back() != '/')
    52f0:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    52f7:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52fb:	e8 70 14 00 00       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5300:	48 89 c7             	mov    rdi,rax
    5303:	e8 98 14 00 00       	call   67a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
    5308:	0f be 00             	movsx  eax,BYTE PTR [rax]
    530b:	83 f8 2f             	cmp    eax,0x2f
    530e:	74 21                	je     5331 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1d1>
                paths[i] += '/';
    5310:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    5317:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    531b:	e8 50 14 00 00       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5320:	48 89 c7             	mov    rdi,rax
    5323:	be 2f 00 00 00       	mov    esi,0x2f
    5328:	e8 93 12 00 00       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    532d:	eb 00                	jmp    532f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1cf>
            }
    532f:	eb 00                	jmp    5331 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1d1>
            paths[i] += args[0];
    5331:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    5338:	31 c0                	xor    eax,eax
    533a:	89 c6                	mov    esi,eax
    533c:	e8 5f 0b 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5341:	48 89 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rax
    5348:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    534f:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5353:	e8 18 14 00 00       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5358:	48 8b b5 a0 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x160]
    535f:	48 89 c7             	mov    rdi,rax
    5362:	e8 89 14 00 00       	call   67f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
    5367:	eb 00                	jmp    5369 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x209>
        }
    5369:	eb 00                	jmp    536b <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x20b>
        for(size_t i = 0; i < paths.size(); i++)
    536b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    5372:	48 83 c0 01          	add    rax,0x1
    5376:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    537d:	e9 44 ff ff ff       	jmp    52c6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x166>
    5382:	eb 00                	jmp    5384 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x224>
    for(size_t i = 0; i < paths.size(); i++)
    5384:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x0
    538b:	00 00 00 00 
    538f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    5396:	48 89 85 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],rax
    539d:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    53a1:	e8 da 0a 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    53a6:	48 89 c1             	mov    rcx,rax
    53a9:	48 8b 85 98 fe ff ff 	mov    rax,QWORD PTR [rbp-0x168]
    53b0:	48 39 c8             	cmp    rax,rcx
    53b3:	0f 83 79 06 00 00    	jae    5a32 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8d2>
        if(access(paths[i].c_str(), X_OK) == 0)
    53b9:	48 8b b5 18 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe8]
    53c0:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    53c4:	e8 a7 13 00 00       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    53c9:	48 89 c7             	mov    rdi,rax
    53cc:	e8 ff 0a 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    53d1:	48 89 c7             	mov    rdi,rax
    53d4:	be 01 00 00 00       	mov    esi,0x1
    53d9:	e8 02 f4 ff ff       	call   47e0 <access@plt>
    53de:	83 f8 00             	cmp    eax,0x0
    53e1:	0f 85 32 06 00 00    	jne    5a19 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8b9>
            char** arguments = get_argument_list(args);
    53e7:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    53ee:	e8 7d fa ff ff       	call   4e70 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE>
    53f3:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    53fa:	eb 00                	jmp    53fc <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x29c>
    53fc:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
    5403:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
            int status = 1;
    540a:	c7 85 64 ff ff ff 01 	mov    DWORD PTR [rbp-0x9c],0x1
    5411:	00 00 00 
            pid_t p_id = vfork();
    5414:	e8 87 f2 ff ff       	call   46a0 <vfork@plt>
    5419:	f3 0f 1e fa          	endbr64
    541d:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
            if(p_id == -1)
    5423:	83 bd 0c ff ff ff ff 	cmp    DWORD PTR [rbp-0xf4],0xffffffff
    542a:	75 1c                	jne    5448 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x2e8>
                terminal.print_error("Unable to create new processes\r\n");
    542c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    5433:	48 8d 35 7b bc 00 00 	lea    rsi,[rip+0xbc7b]        # 110b5 <_IO_stdin_used+0xb5>
    543a:	31 c0                	xor    eax,eax
    543c:	e8 0f 3f 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    5441:	eb 00                	jmp    5443 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x2e3>
            }
    5443:	e9 24 05 00 00       	jmp    596c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80c>
            else if(p_id == 0)
    5448:	83 bd 0c ff ff ff 00 	cmp    DWORD PTR [rbp-0xf4],0x0
    544f:	0f 85 f7 04 00 00    	jne    594c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ec>
                terminal.disable_raw_mode();
    5455:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    545c:	e8 0f 3d 00 00       	call   9170 <_ZN10TerminalIO16disable_raw_modeEv>
    5461:	eb 00                	jmp    5463 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x303>
                bool stdin_valid = true;
    5463:	c6 85 0b ff ff ff 01 	mov    BYTE PTR [rbp-0xf5],0x1
                if(streams.stdin_path.length() > 0)
    546a:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5471:	e8 0a 0c 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5476:	48 83 f8 00          	cmp    rax,0x0
    547a:	0f 86 ba 00 00 00    	jbe    553a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3da>
                    std::string current_stdin = get_file_path(stdin);
    5480:	48 8b 05 39 1b 01 00 	mov    rax,QWORD PTR [rip+0x11b39]        # 16fc0 <stdin@GLIBC_2.2.5>
    5487:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    548a:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    548e:	e8 6d 06 00 00       	call   5b00 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    5493:	eb 00                	jmp    5495 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x335>
                    if(current_stdin.length() == 0 || streams.stdin_path != current_stdin)
    5495:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5499:	e8 e2 0b 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    549e:	48 83 f8 00          	cmp    rax,0x0
    54a2:	74 18                	je     54bc <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x35c>
    54a4:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    54ab:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    54af:	e8 6c 13 00 00       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    54b4:	34 ff                	xor    al,0xff
    54b6:	a8 01                	test   al,0x1
    54b8:	75 02                	jne    54bc <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x35c>
    54ba:	eb 75                	jmp    5531 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3d1>
                        FILE* stdin_res = std::freopen(streams.stdin_path.c_str(), "r", stdin);    
    54bc:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    54c3:	e8 08 0a 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    54c8:	48 89 c7             	mov    rdi,rax
    54cb:	48 8b 05 ee 1a 01 00 	mov    rax,QWORD PTR [rip+0x11aee]        # 16fc0 <stdin@GLIBC_2.2.5>
    54d2:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    54d5:	48 8d 35 fa bb 00 00 	lea    rsi,[rip+0xbbfa]        # 110d6 <_IO_stdin_used+0xd6>
    54dc:	e8 df f0 ff ff       	call   45c0 <freopen@plt>
    54e1:	48 89 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rax
    54e8:	eb 00                	jmp    54ea <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x38a>
    54ea:	48 8b 85 88 fe ff ff 	mov    rax,QWORD PTR [rbp-0x178]
    54f1:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
                        stdin_valid = (stdin_res != NULL);
    54f8:	48 83 bd 00 ff ff ff 	cmp    QWORD PTR [rbp-0x100],0x0
    54ff:	00 
    5500:	0f 95 c0             	setne  al
    5503:	24 01                	and    al,0x1
    5505:	88 85 0b ff ff ff    	mov    BYTE PTR [rbp-0xf5],al
                    }
    550b:	eb 24                	jmp    5531 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3d1>
    550d:	f3 0f 1e fa          	endbr64
    5511:	48 89 c1             	mov    rcx,rax
}
    5514:	89 d0                	mov    eax,edx
    5516:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    551d:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    5523:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5527:	e8 24 0c 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    552c:	e9 95 05 00 00       	jmp    5ac6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
    5531:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5535:	e8 16 0c 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                bool stdout_valid = true;
    553a:	c6 85 ff fe ff ff 01 	mov    BYTE PTR [rbp-0x101],0x1
                if(streams.stdout_path.length() > 0)
    5541:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5548:	48 83 c7 20          	add    rdi,0x20
    554c:	e8 2f 0b 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5551:	48 83 f8 00          	cmp    rax,0x0
    5555:	0f 86 58 01 00 00    	jbe    56b3 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x553>
                    std::string current_stdout = get_file_path(stdout);
    555b:	48 8b 05 36 1a 01 00 	mov    rax,QWORD PTR [rip+0x11a36]        # 16f98 <stdout@GLIBC_2.2.5>
    5562:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    5565:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    5569:	e8 92 05 00 00       	call   5b00 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    556e:	eb 00                	jmp    5570 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x410>
                    if(streams.stdout_append)
    5570:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    5577:	f6 40 40 01          	test   BYTE PTR [rax+0x40],0x1
    557b:	0f 84 a9 00 00 00    	je     562a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4ca>
                        if(current_stdout.length() == 0 || streams.stdout_path != current_stdout)
    5581:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    5585:	e8 f6 0a 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    558a:	48 83 f8 00          	cmp    rax,0x0
    558e:	74 1c                	je     55ac <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x44c>
    5590:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5597:	48 83 c7 20          	add    rdi,0x20
    559b:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    559f:	e8 7c 12 00 00       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    55a4:	34 ff                	xor    al,0xff
    55a6:	a8 01                	test   al,0x1
    55a8:	75 02                	jne    55ac <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x44c>
    55aa:	eb 79                	jmp    5625 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c5>
                            FILE* stdout_res = freopen(streams.stdout_path.c_str(), "a", stdout);
    55ac:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    55b3:	48 83 c7 20          	add    rdi,0x20
    55b7:	e8 14 09 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    55bc:	48 89 c7             	mov    rdi,rax
    55bf:	48 8b 05 d2 19 01 00 	mov    rax,QWORD PTR [rip+0x119d2]        # 16f98 <stdout@GLIBC_2.2.5>
    55c6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    55c9:	48 8d 35 08 bb 00 00 	lea    rsi,[rip+0xbb08]        # 110d8 <_IO_stdin_used+0xd8>
    55d0:	e8 eb ef ff ff       	call   45c0 <freopen@plt>
    55d5:	48 89 85 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rax
    55dc:	eb 00                	jmp    55de <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x47e>
    55de:	48 8b 85 80 fe ff ff 	mov    rax,QWORD PTR [rbp-0x180]
    55e5:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
                            stdout_valid = (stdout_res != NULL);
    55ec:	48 83 bd f0 fe ff ff 	cmp    QWORD PTR [rbp-0x110],0x0
    55f3:	00 
    55f4:	0f 95 c0             	setne  al
    55f7:	24 01                	and    al,0x1
    55f9:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
                        }
    55ff:	eb 24                	jmp    5625 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c5>
    5601:	f3 0f 1e fa          	endbr64
    5605:	48 89 c1             	mov    rcx,rax
}
    5608:	89 d0                	mov    eax,edx
    560a:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    5611:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    5617:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    561b:	e8 30 0b 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5620:	e9 a1 04 00 00       	jmp    5ac6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
                    }
    5625:	e9 80 00 00 00       	jmp    56aa <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x54a>
                        if(current_stdout.length() == 0 || streams.stdout_path != current_stdout)
    562a:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    562e:	e8 4d 0a 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5633:	48 83 f8 00          	cmp    rax,0x0
    5637:	74 1c                	je     5655 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4f5>
    5639:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5640:	48 83 c7 20          	add    rdi,0x20
    5644:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    5648:	e8 d3 11 00 00       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    564d:	34 ff                	xor    al,0xff
    564f:	a8 01                	test   al,0x1
    5651:	75 02                	jne    5655 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4f5>
    5653:	eb 53                	jmp    56a8 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x548>
                            FILE* stdout_res = freopen(streams.stdout_path.c_str(), "w", stdout);    
    5655:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    565c:	48 83 c7 20          	add    rdi,0x20
    5660:	e8 6b 08 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5665:	48 89 c7             	mov    rdi,rax
    5668:	48 8b 05 29 19 01 00 	mov    rax,QWORD PTR [rip+0x11929]        # 16f98 <stdout@GLIBC_2.2.5>
    566f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5672:	48 8d 35 61 ba 00 00 	lea    rsi,[rip+0xba61]        # 110da <_IO_stdin_used+0xda>
    5679:	e8 42 ef ff ff       	call   45c0 <freopen@plt>
    567e:	48 89 85 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rax
    5685:	eb 00                	jmp    5687 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x527>
    5687:	48 8b 85 78 fe ff ff 	mov    rax,QWORD PTR [rbp-0x188]
    568e:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
                            stdout_valid = (stdout_res != NULL);
    5695:	48 83 bd e8 fe ff ff 	cmp    QWORD PTR [rbp-0x118],0x0
    569c:	00 
    569d:	0f 95 c0             	setne  al
    56a0:	24 01                	and    al,0x1
    56a2:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
    56a8:	eb 00                	jmp    56aa <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x54a>
                }
    56aa:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    56ae:	e8 9d 0a 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                bool stderr_valid = true;
    56b3:	c6 85 e7 fe ff ff 01 	mov    BYTE PTR [rbp-0x119],0x1
                if(streams.stderr_path.length() > 0)
    56ba:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    56c1:	48 83 c7 48          	add    rdi,0x48
    56c5:	e8 b6 09 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    56ca:	48 83 f8 00          	cmp    rax,0x0
    56ce:	0f 86 58 01 00 00    	jbe    582c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6cc>
                    std::string current_stderr = get_file_path(stdout);
    56d4:	48 8b 05 bd 18 01 00 	mov    rax,QWORD PTR [rip+0x118bd]        # 16f98 <stdout@GLIBC_2.2.5>
    56db:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    56de:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    56e2:	e8 19 04 00 00       	call   5b00 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    56e7:	eb 00                	jmp    56e9 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x589>
                    if(streams.stderr_append)
    56e9:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    56f0:	f6 40 68 01          	test   BYTE PTR [rax+0x68],0x1
    56f4:	0f 84 a9 00 00 00    	je     57a3 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x643>
                        if(current_stderr.length() == 0 || streams.stderr_path != current_stderr)
    56fa:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    56fe:	e8 7d 09 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5703:	48 83 f8 00          	cmp    rax,0x0
    5707:	74 1c                	je     5725 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5c5>
    5709:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5710:	48 83 c7 48          	add    rdi,0x48
    5714:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    5718:	e8 03 11 00 00       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    571d:	34 ff                	xor    al,0xff
    571f:	a8 01                	test   al,0x1
    5721:	75 02                	jne    5725 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5c5>
    5723:	eb 79                	jmp    579e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x63e>
                            FILE* stderr_res = freopen(streams.stderr_path.c_str(), "a", stderr);
    5725:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    572c:	48 83 c7 48          	add    rdi,0x48
    5730:	e8 9b 07 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5735:	48 89 c7             	mov    rdi,rax
    5738:	48 8b 05 91 18 01 00 	mov    rax,QWORD PTR [rip+0x11891]        # 16fd0 <stderr@GLIBC_2.2.5>
    573f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5742:	48 8d 35 8f b9 00 00 	lea    rsi,[rip+0xb98f]        # 110d8 <_IO_stdin_used+0xd8>
    5749:	e8 72 ee ff ff       	call   45c0 <freopen@plt>
    574e:	48 89 85 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rax
    5755:	eb 00                	jmp    5757 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5f7>
    5757:	48 8b 85 70 fe ff ff 	mov    rax,QWORD PTR [rbp-0x190]
    575e:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
                            stderr_valid = (stderr_res != NULL);
    5765:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    576c:	00 
    576d:	0f 95 c0             	setne  al
    5770:	24 01                	and    al,0x1
    5772:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
                        }
    5778:	eb 24                	jmp    579e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x63e>
    577a:	f3 0f 1e fa          	endbr64
    577e:	48 89 c1             	mov    rcx,rax
}
    5781:	89 d0                	mov    eax,edx
    5783:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    578a:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    5790:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    5794:	e8 b7 09 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5799:	e9 28 03 00 00       	jmp    5ac6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
                    }
    579e:	e9 80 00 00 00       	jmp    5823 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c3>
                        if(current_stderr.length() == 0 || streams.stderr_path != current_stderr)
    57a3:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    57a7:	e8 d4 08 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    57ac:	48 83 f8 00          	cmp    rax,0x0
    57b0:	74 1c                	je     57ce <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x66e>
    57b2:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    57b9:	48 83 c7 48          	add    rdi,0x48
    57bd:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    57c1:	e8 5a 10 00 00       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    57c6:	34 ff                	xor    al,0xff
    57c8:	a8 01                	test   al,0x1
    57ca:	75 02                	jne    57ce <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x66e>
    57cc:	eb 53                	jmp    5821 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c1>
                            FILE* stderr_res = freopen(streams.stderr_path.c_str(), "w", stderr);    
    57ce:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    57d5:	48 83 c7 48          	add    rdi,0x48
    57d9:	e8 f2 06 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    57de:	48 89 c7             	mov    rdi,rax
    57e1:	48 8b 05 e8 17 01 00 	mov    rax,QWORD PTR [rip+0x117e8]        # 16fd0 <stderr@GLIBC_2.2.5>
    57e8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57eb:	48 8d 35 e8 b8 00 00 	lea    rsi,[rip+0xb8e8]        # 110da <_IO_stdin_used+0xda>
    57f2:	e8 c9 ed ff ff       	call   45c0 <freopen@plt>
    57f7:	48 89 85 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rax
    57fe:	eb 00                	jmp    5800 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6a0>
    5800:	48 8b 85 68 fe ff ff 	mov    rax,QWORD PTR [rbp-0x198]
    5807:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
                            stderr_valid = (stderr_res != NULL);
    580e:	48 83 bd d0 fe ff ff 	cmp    QWORD PTR [rbp-0x130],0x0
    5815:	00 
    5816:	0f 95 c0             	setne  al
    5819:	24 01                	and    al,0x1
    581b:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
    5821:	eb 00                	jmp    5823 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c3>
                }
    5823:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    5827:	e8 24 09 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                if(!stdin_valid || !stdout_valid || !stderr_valid)
    582c:	f6 85 0b ff ff ff 01 	test   BYTE PTR [rbp-0xf5],0x1
    5833:	74 12                	je     5847 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6e7>
    5835:	f6 85 ff fe ff ff 01 	test   BYTE PTR [rbp-0x101],0x1
    583c:	74 09                	je     5847 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6e7>
    583e:	f6 85 e7 fe ff ff 01 	test   BYTE PTR [rbp-0x119],0x1
    5845:	75 6c                	jne    58b3 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x753>
                    terminal.print_error("Unable to redirect child stdin, stdout and stderr\r\n");
    5847:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    584e:	48 8d 35 87 b8 00 00 	lea    rsi,[rip+0xb887]        # 110dc <_IO_stdin_used+0xdc>
    5855:	31 c0                	xor    eax,eax
    5857:	e8 f4 3a 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    585c:	eb 00                	jmp    585e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6fe>
                    fclose(stdin);
    585e:	48 8b 05 5b 17 01 00 	mov    rax,QWORD PTR [rip+0x1175b]        # 16fc0 <stdin@GLIBC_2.2.5>
    5865:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5868:	e8 13 ed ff ff       	call   4580 <fclose@plt>
    586d:	eb 00                	jmp    586f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x70f>
                    fclose(stdout);
    586f:	48 8b 05 22 17 01 00 	mov    rax,QWORD PTR [rip+0x11722]        # 16f98 <stdout@GLIBC_2.2.5>
    5876:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5879:	e8 02 ed ff ff       	call   4580 <fclose@plt>
    587e:	eb 00                	jmp    5880 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x720>
                    fclose(stderr);
    5880:	48 8b 05 49 17 01 00 	mov    rax,QWORD PTR [rip+0x11749]        # 16fd0 <stderr@GLIBC_2.2.5>
    5887:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    588a:	e8 f1 ec ff ff       	call   4580 <fclose@plt>
    588f:	eb 00                	jmp    5891 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x731>
                    _exit(1);
    5891:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5898:	00 00 
    589a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    589e:	48 39 c8             	cmp    rax,rcx
    58a1:	0f 85 54 02 00 00    	jne    5afb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    58a7:	bf 01 00 00 00       	mov    edi,0x1
    58ac:	e8 0f ef ff ff       	call   47c0 <_exit@plt>
    58b1:	eb 00                	jmp    58b3 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x753>
                int res = execve(paths[i].c_str(), arguments, __environ);
    58b3:	48 8b b5 18 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe8]
    58ba:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    58be:	e8 ad 0e 00 00       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    58c3:	48 89 c7             	mov    rdi,rax
    58c6:	e8 05 06 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    58cb:	48 89 c7             	mov    rdi,rax
    58ce:	48 8b b5 10 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf0]
    58d5:	48 8b 05 c4 16 01 00 	mov    rax,QWORD PTR [rip+0x116c4]        # 16fa0 <__environ@GLIBC_2.2.5>
    58dc:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    58df:	e8 0c ef ff ff       	call   47f0 <execve@plt>
    58e4:	89 85 cc fe ff ff    	mov    DWORD PTR [rbp-0x134],eax
                fclose(stdin);
    58ea:	48 8b 05 cf 16 01 00 	mov    rax,QWORD PTR [rip+0x116cf]        # 16fc0 <stdin@GLIBC_2.2.5>
    58f1:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    58f4:	e8 87 ec ff ff       	call   4580 <fclose@plt>
    58f9:	eb 00                	jmp    58fb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x79b>
                fclose(stdout);
    58fb:	48 8b 05 96 16 01 00 	mov    rax,QWORD PTR [rip+0x11696]        # 16f98 <stdout@GLIBC_2.2.5>
    5902:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5905:	e8 76 ec ff ff       	call   4580 <fclose@plt>
    590a:	eb 00                	jmp    590c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ac>
                fclose(stderr);
    590c:	48 8b 05 bd 16 01 00 	mov    rax,QWORD PTR [rip+0x116bd]        # 16fd0 <stderr@GLIBC_2.2.5>
    5913:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5916:	e8 65 ec ff ff       	call   4580 <fclose@plt>
    591b:	eb 00                	jmp    591d <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7bd>
                _exit(res);
    591d:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    5923:	89 85 64 fe ff ff    	mov    DWORD PTR [rbp-0x19c],eax
    5929:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5930:	00 00 
    5932:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5936:	48 39 c8             	cmp    rax,rcx
    5939:	0f 85 bc 01 00 00    	jne    5afb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    593f:	8b bd 64 fe ff ff    	mov    edi,DWORD PTR [rbp-0x19c]
    5945:	e8 76 ee ff ff       	call   47c0 <_exit@plt>
    594a:	eb 00                	jmp    594c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ec>
    594c:	48 8d bd 64 ff ff ff 	lea    rdi,[rbp-0x9c]
                wait(&status);
    5953:	e8 f8 ec ff ff       	call   4650 <wait@plt>
    5958:	eb 00                	jmp    595a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7fa>
                terminal.enable_raw_mode();
    595a:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    5961:	e8 3a 37 00 00       	call   90a0 <_ZN10TerminalIO15enable_raw_modeEv>
    5966:	eb 00                	jmp    5968 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x808>
    5968:	eb 00                	jmp    596a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80a>
    596a:	eb 00                	jmp    596c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80c>
            for(size_t i = 0; i < args.size(); i++)
    596c:	48 c7 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],0x0
    5973:	00 00 00 00 
    5977:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
    597e:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5985:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    598c:	e8 ef 04 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    5991:	48 89 c1             	mov    rcx,rax
    5994:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    599b:	48 39 c8             	cmp    rax,rcx
    599e:	73 41                	jae    59e1 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x881>
                delete[] arguments[i];
    59a0:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    59a7:	48 8b 8d c0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x140]
    59ae:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    59b2:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    59b9:	48 83 f8 00          	cmp    rax,0x0
    59bd:	74 0c                	je     59cb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x86b>
    59bf:	48 8b bd 50 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b0]
    59c6:	e8 a5 ec ff ff       	call   4670 <_ZdaPv@plt>
            }
    59cb:	eb 00                	jmp    59cd <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x86d>
            for(size_t i = 0; i < args.size(); i++)
    59cd:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
    59d4:	48 83 c0 01          	add    rax,0x1
    59d8:	48 89 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rax
    59df:	eb 96                	jmp    5977 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x817>
            delete[] arguments;
    59e1:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    59e8:	48 89 85 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rax
    59ef:	48 83 f8 00          	cmp    rax,0x0
    59f3:	74 0c                	je     5a01 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8a1>
    59f5:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    59fc:	e8 6f ec ff ff       	call   4670 <_ZdaPv@plt>
            return status;
    5a01:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    5a07:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
    5a0d:	c7 85 bc fe ff ff 01 	mov    DWORD PTR [rbp-0x144],0x1
    5a14:	00 00 00 
    5a17:	eb 77                	jmp    5a90 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x930>
    }
    5a19:	eb 00                	jmp    5a1b <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8bb>
    for(size_t i = 0; i < paths.size(); i++)
    5a1b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    5a22:	48 83 c0 01          	add    rax,0x1
    5a26:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    5a2d:	e9 5d f9 ff ff       	jmp    538f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x22f>
    terminal.print_error("Unknown command '%s'\r\n", args[0].c_str());
    5a32:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    5a39:	48 89 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],rax
    5a40:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    5a47:	31 c0                	xor    eax,eax
    5a49:	89 85 44 fe ff ff    	mov    DWORD PTR [rbp-0x1bc],eax
    5a4f:	89 c6                	mov    esi,eax
    5a51:	e8 4a 04 00 00       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5a56:	48 89 c7             	mov    rdi,rax
    5a59:	e8 72 04 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5a5e:	48 8b bd 38 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1c8]
    5a65:	48 89 c2             	mov    rdx,rax
    5a68:	8b 85 44 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1bc]
    5a6e:	48 8d 35 9b b6 00 00 	lea    rsi,[rip+0xb69b]        # 11110 <_IO_stdin_used+0x110>
    5a75:	e8 d6 38 00 00       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    5a7a:	eb 00                	jmp    5a7c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x91c>
    return -1;
    5a7c:	c7 85 60 ff ff ff ff 	mov    DWORD PTR [rbp-0xa0],0xffffffff
    5a83:	ff ff ff 
    5a86:	c7 85 bc fe ff ff 01 	mov    DWORD PTR [rbp-0x144],0x1
    5a8d:	00 00 00 
    5a90:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
}
    5a94:	e8 67 0b 00 00       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5a99:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    5a9f:	89 85 34 fe ff ff    	mov    DWORD PTR [rbp-0x1cc],eax
    5aa5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5aac:	00 00 
    5aae:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5ab2:	48 39 c8             	cmp    rax,rcx
    5ab5:	75 44                	jne    5afb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    5ab7:	8b 85 34 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1cc]
    5abd:	48 81 c4 e0 01 00 00 	add    rsp,0x1e0
    5ac4:	5d                   	pop    rbp
    5ac5:	c3                   	ret
    5ac6:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5aca:	e8 31 0b 00 00       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5acf:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    5ad6:	48 89 85 28 fe ff ff 	mov    QWORD PTR [rbp-0x1d8],rax
    5add:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5ae4:	00 00 
    5ae6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5aea:	48 39 c8             	cmp    rax,rcx
    5aed:	75 0c                	jne    5afb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    5aef:	48 8b bd 28 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1d8]
    5af6:	e8 85 e9 ff ff       	call   4480 <_Unwind_Resume@plt>
    5afb:	e8 d0 ea ff ff       	call   45d0 <__stack_chk_fail@plt>

0000000000005b00 <_ZL13get_file_pathB5cxx11P8_IO_FILE>:
{
    5b00:	55                   	push   rbp
    5b01:	48 89 e5             	mov    rbp,rsp
    5b04:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    5b0b:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    5b12:	48 89 f8             	mov    rax,rdi
    5b15:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    5b1c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5b23:	00 00 
    5b25:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5b29:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    5b30:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    int file_no = fileno(handle);
    5b37:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    5b3e:	e8 6d ea ff ff       	call   45b0 <fileno@plt>
    5b43:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    if(file_no == -1)
    5b49:	83 bd 1c ff ff ff ff 	cmp    DWORD PTR [rbp-0xe4],0xffffffff
    5b50:	75 5e                	jne    5bb0 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0xb0>
    5b52:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5b59:	48 8d 55 d7          	lea    rdx,[rbp-0x29]
    5b5d:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    5b64:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    5b6b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    5b6f:	31 c0                	xor    eax,eax
    5b71:	89 c6                	mov    esi,eax
        return NULL;
    5b73:	e8 28 05 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5b78:	eb 00                	jmp    5b7a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x7a>
    5b7a:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    5b7e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    5b85:	e9 96 02 00 00       	jmp    5e20 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x320>
    5b8a:	f3 0f 1e fa          	endbr64
    5b8e:	48 89 c1             	mov    rcx,rax
}
    5b91:	89 d0                	mov    eax,edx
    5b93:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5b9a:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5ba0:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    5ba4:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
        return NULL;
    5bab:	e9 92 02 00 00       	jmp    5e42 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x342>
    std::string proclink;
    5bb0:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5bb4:	e8 c7 08 00 00       	call   6480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    int buffer_size = std::snprintf(proclink.data(), 0, "/proc/self/fd/%d", file_no);
    5bb9:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5bbd:	e8 1e 33 00 00       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    5bc2:	48 89 c7             	mov    rdi,rax
    5bc5:	8b 8d 1c ff ff ff    	mov    ecx,DWORD PTR [rbp-0xe4]
    5bcb:	31 c0                	xor    eax,eax
    5bcd:	89 c6                	mov    esi,eax
    5bcf:	48 8d 15 e6 b5 00 00 	lea    rdx,[rip+0xb5e6]        # 111bc <_IO_stdin_used+0x1bc>
    5bd6:	b0 00                	mov    al,0x0
    5bd8:	e8 b3 eb ff ff       	call   4790 <snprintf@plt>
    5bdd:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    if(buffer_size < 0)
    5be3:	83 bd 08 ff ff ff 00 	cmp    DWORD PTR [rbp-0xf8],0x0
    5bea:	7d 6b                	jge    5c57 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x157>
    5bec:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5bf3:	48 8d 55 d6          	lea    rdx,[rbp-0x2a]
    5bf7:	48 89 95 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdx
    5bfe:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    5c05:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
        return "";
    5c09:	48 8d 35 39 b8 00 00 	lea    rsi,[rip+0xb839]        # 11449 <_IO_stdin_used+0x449>
    5c10:	e8 8b 04 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5c15:	eb 00                	jmp    5c17 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x117>
    5c17:	48 8d 45 d6          	lea    rax,[rbp-0x2a]
    5c1b:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    5c22:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5c29:	00 00 00 
    5c2c:	e9 d9 01 00 00       	jmp    5e0a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5c31:	f3 0f 1e fa          	endbr64
    5c35:	48 89 c1             	mov    rcx,rax
}
    5c38:	89 d0                	mov    eax,edx
    5c3a:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5c41:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5c47:	48 8d 45 d6          	lea    rax,[rbp-0x2a]
    5c4b:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
        return "";
    5c52:	e9 be 01 00 00       	jmp    5e15 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    proclink.reserve(buffer_size / sizeof(char));
    5c57:	48 63 b5 08 ff ff ff 	movsxd rsi,DWORD PTR [rbp-0xf8]
    5c5e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5c62:	e8 99 32 00 00       	call   8f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    5c67:	eb 00                	jmp    5c69 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x169>
    buffer_size = std::snprintf(proclink.data(), buffer_size, "/proc/self/fd/%d", file_no);
    5c69:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5c6d:	e8 6e 32 00 00       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    5c72:	48 89 c7             	mov    rdi,rax
    5c75:	48 63 b5 08 ff ff ff 	movsxd rsi,DWORD PTR [rbp-0xf8]
    5c7c:	8b 8d 1c ff ff ff    	mov    ecx,DWORD PTR [rbp-0xe4]
    5c82:	48 8d 15 33 b5 00 00 	lea    rdx,[rip+0xb533]        # 111bc <_IO_stdin_used+0x1bc>
    5c89:	b0 00                	mov    al,0x0
    5c8b:	e8 00 eb ff ff       	call   4790 <snprintf@plt>
    5c90:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    if(buffer_size < 0)
    5c96:	83 bd 08 ff ff ff 00 	cmp    DWORD PTR [rbp-0xf8],0x0
    5c9d:	0f 8d 83 00 00 00    	jge    5d26 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x226>
    5ca3:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5caa:	48 8d 55 d5          	lea    rdx,[rbp-0x2b]
    5cae:	48 89 95 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rdx
    5cb5:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    5cbc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
        return "";
    5cc0:	48 8d 35 82 b7 00 00 	lea    rsi,[rip+0xb782]        # 11449 <_IO_stdin_used+0x449>
    5cc7:	e8 d4 03 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5ccc:	eb 00                	jmp    5cce <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x1ce>
    5cce:	48 8d 45 d5          	lea    rax,[rbp-0x2b]
    5cd2:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    5cd9:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5ce0:	00 00 00 
    5ce3:	e9 22 01 00 00       	jmp    5e0a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5ce8:	f3 0f 1e fa          	endbr64
    5cec:	48 89 c1             	mov    rcx,rax
}
    5cef:	89 d0                	mov    eax,edx
    5cf1:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5cf8:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5cfe:	e9 12 01 00 00       	jmp    5e15 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    5d03:	f3 0f 1e fa          	endbr64
    5d07:	48 89 c1             	mov    rcx,rax
    5d0a:	89 d0                	mov    eax,edx
    5d0c:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5d13:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5d19:	48 8d 45 d5          	lea    rax,[rbp-0x2b]
    5d1d:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
        return "";
    5d21:	e9 ef 00 00 00       	jmp    5e15 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    char* res = realpath(proclink.c_str(), NULL);
    5d26:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5d2a:	e8 a1 01 00 00       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5d2f:	48 89 c7             	mov    rdi,rax
    5d32:	31 c0                	xor    eax,eax
    5d34:	89 c6                	mov    esi,eax
    5d36:	e8 65 e7 ff ff       	call   44a0 <realpath@plt>
    5d3b:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    if(res == NULL)
    5d42:	48 83 bd f8 fe ff ff 	cmp    QWORD PTR [rbp-0x108],0x0
    5d49:	00 
    5d4a:	75 5f                	jne    5dab <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x2ab>
    5d4c:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5d53:	48 8d 55 d4          	lea    rdx,[rbp-0x2c]
    5d57:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
    5d5e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    5d65:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
        return "";
    5d69:	48 8d 35 d9 b6 00 00 	lea    rsi,[rip+0xb6d9]        # 11449 <_IO_stdin_used+0x449>
    5d70:	e8 2b 03 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5d75:	eb 00                	jmp    5d77 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x277>
    5d77:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
    5d7b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    5d7f:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5d86:	00 00 00 
    5d89:	eb 7f                	jmp    5e0a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5d8b:	f3 0f 1e fa          	endbr64
    5d8f:	48 89 c1             	mov    rcx,rax
}
    5d92:	89 d0                	mov    eax,edx
    5d94:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5d9b:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5da1:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
    5da5:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
        return "";
    5da9:	eb 6a                	jmp    5e15 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    5dab:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    return res;
    5db2:	48 8b b5 f8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x108]
    5db9:	48 8d 55 d3          	lea    rdx,[rbp-0x2d]
    5dbd:	48 89 95 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rdx
    5dc4:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    5dcb:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    5dcf:	e8 cc 02 00 00       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5dd4:	eb 00                	jmp    5dd6 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x2d6>
    5dd6:	48 8d 45 d3          	lea    rax,[rbp-0x2d]
    5dda:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    5dde:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5de5:	00 00 00 
    5de8:	eb 20                	jmp    5e0a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5dea:	f3 0f 1e fa          	endbr64
    5dee:	48 89 c1             	mov    rcx,rax
}
    5df1:	89 d0                	mov    eax,edx
    5df3:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5dfa:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5e00:	48 8d 45 d3          	lea    rax,[rbp-0x2d]
    5e04:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    return res;
    5e08:	eb 0b                	jmp    5e15 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
}
    5e0a:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5e0e:	e8 3d 03 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5e13:	eb 0b                	jmp    5e20 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x320>
    5e15:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5e19:	e8 32 03 00 00       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5e1e:	eb 22                	jmp    5e42 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x342>
    5e20:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5e27:	00 00 
    5e29:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e2d:	48 39 c8             	cmp    rax,rcx
    5e30:	75 3c                	jne    5e6e <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x36e>
    5e32:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    5e39:	48 81 c4 20 01 00 00 	add    rsp,0x120
    5e40:	5d                   	pop    rbp
    5e41:	c3                   	ret
        return NULL;
    5e42:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    5e49:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
    5e50:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5e57:	00 00 
    5e59:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e5d:	48 39 c8             	cmp    rax,rcx
    5e60:	75 0c                	jne    5e6e <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x36e>
    5e62:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    5e69:	e8 12 e6 ff ff       	call   4480 <_Unwind_Resume@plt>
    5e6e:	e8 5d e7 ff ff       	call   45d0 <__stack_chk_fail@plt>
    5e73:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5e7a:	00 00 00 
    5e7d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>:
      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5e80:	f3 0f 1e fa          	endbr64
    5e84:	55                   	push   rbp
    5e85:	48 89 e5             	mov    rbp,rsp
    5e88:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5e8c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e90:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    5e94:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    5e97:	48 29 c8             	sub    rax,rcx
    5e9a:	48 c1 f8 05          	sar    rax,0x5
    5e9e:	5d                   	pop    rbp
    5e9f:	c3                   	ret

0000000000005ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
       *  see at().)
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const_reference
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      {
    5ea0:	f3 0f 1e fa          	endbr64
    5ea4:	55                   	push   rbp
    5ea5:	48 89 e5             	mov    rbp,rsp
    5ea8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5eac:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5eb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
    5eb4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5eb7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    5ebb:	48 c1 e1 05          	shl    rcx,0x5
    5ebf:	48 01 c8             	add    rax,rcx
    5ec2:	5d                   	pop    rbp
    5ec3:	c3                   	ret
    5ec4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5ecb:	00 00 00 
    5ece:	66 90                	xchg   ax,ax

0000000000005ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
       *  happen.
      */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const _CharT*
      c_str() const _GLIBCXX_NOEXCEPT
      { return _M_data(); }
    5ed0:	f3 0f 1e fa          	endbr64
    5ed4:	55                   	push   rbp
    5ed5:	48 89 e5             	mov    rbp,rsp
    5ed8:	48 83 ec 10          	sub    rsp,0x10
    5edc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5ee0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    5ee4:	e8 d7 09 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5ee9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    5eed:	eb 00                	jmp    5eef <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv+0x1f>
    5eef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5ef3:	48 83 c4 10          	add    rsp,0x10
    5ef7:	5d                   	pop    rbp
    5ef8:	c3                   	ret
    5ef9:	f3 0f 1e fa          	endbr64
    5efd:	48 89 c7             	mov    rdi,rax
    5f00:	e8 db 09 00 00       	call   68e0 <__clang_call_terminate>
    5f05:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5f0c:	00 00 00 
    5f0f:	90                   	nop

0000000000005f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>:
      {
    5f10:	f3 0f 1e fa          	endbr64
    5f14:	55                   	push   rbp
    5f15:	48 89 e5             	mov    rbp,rsp
    5f18:	48 81 ec b0 00 00 00 	sub    rsp,0xb0
    5f1f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5f26:	00 00 
    5f28:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5f2c:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    5f30:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    5f34:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    5f38:	48 89 bd 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdi
    5f3f:	48 89 f8             	mov    rax,rdi
    5f42:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
      : _M_dataplus(_M_local_data(),
    5f49:	e8 b2 09 00 00       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    5f4e:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
    5f55:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5f59:	e8 d2 09 00 00       	call   6930 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    5f5e:	48 8b bd 70 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x90]
    5f65:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    5f6c:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    5f70:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    5f74:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    [[__gnu__::__always_inline__]]
    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    { return _Base_type::select_on_container_copy_construction(__a); }
    5f78:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5f7c:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    5f80:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
       *  @return @c __rhs
      */
      [[__gnu__::__always_inline__]]
      static _GLIBCXX20_CONSTEXPR allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
      { return __rhs; }
    5f84:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5f88:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    5f8c:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    5f90:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
      allocator() _GLIBCXX_NOTHROW { }

      __attribute__((__always_inline__))
      _GLIBCXX20_CONSTEXPR
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
      : __allocator_base<_Tp>(__a) { }
    5f94:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f98:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    5f9c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      : _M_dataplus(_M_local_data(),
    5fa0:	e8 ab 09 00 00       	call   6950 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    5fa5:	eb 00                	jmp    5fa7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x97>
    5fa7:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    5fab:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
	_M_construct(__str._M_data(), __str._M_data() + __str.length(),
    5faf:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5fb3:	e8 08 09 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5fb8:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    5fbf:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5fc3:	e8 f8 08 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5fc8:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    5fcf:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5fd3:	e8 a8 00 00 00       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5fd8:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    5fdf:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    5fe6:	48 8b b5 60 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa0]
    5fed:	48 01 c2             	add    rdx,rax
    5ff0:	e8 9b 09 00 00       	call   6990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
    5ff5:	eb 00                	jmp    5ff7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0xe7>
      }
    5ff7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5ffe:	00 00 
    6000:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6004:	48 39 c8             	cmp    rax,rcx
    6007:	75 68                	jne    6071 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x161>
    6009:	48 81 c4 b0 00 00 00 	add    rsp,0xb0
    6010:	5d                   	pop    rbp
    6011:	c3                   	ret
    6012:	f3 0f 1e fa          	endbr64
    6016:	48 89 c1             	mov    rcx,rax
    6019:	89 d0                	mov    eax,edx
    601b:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    601f:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    6022:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    6026:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
      : _M_dataplus(_M_local_data(),
    602a:	eb 1c                	jmp    6048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x138>
    602c:	f3 0f 1e fa          	endbr64
    6030:	48 8b bd 70 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x90]
    6037:	48 89 c1             	mov    rcx,rax
      }
    603a:	89 d0                	mov    eax,edx
    603c:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    6040:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    6043:	e8 98 0a 00 00       	call   6ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
      : _M_dataplus(_M_local_data(),
    6048:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    604c:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    6053:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    605a:	00 00 
    605c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6060:	48 39 c8             	cmp    rax,rcx
    6063:	75 0c                	jne    6071 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x161>
    6065:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    606c:	e8 0f e4 ff ff       	call   4480 <_Unwind_Resume@plt>
    6071:	e8 5a e5 ff ff       	call   45d0 <__stack_chk_fail@plt>
    6076:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    607d:	00 00 00 

0000000000006080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
      { return _M_string_length; }
    6080:	f3 0f 1e fa          	endbr64
    6084:	55                   	push   rbp
    6085:	48 89 e5             	mov    rbp,rsp
    6088:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    608c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6090:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    6094:	5d                   	pop    rbp
    6095:	c3                   	ret
    6096:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    609d:	00 00 00 

00000000000060a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>:
      {
    60a0:	f3 0f 1e fa          	endbr64
    60a4:	55                   	push   rbp
    60a5:	48 89 e5             	mov    rbp,rsp
    60a8:	48 83 ec 50          	sub    rsp,0x50
    60ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    60b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    60b4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    60b8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    60bc:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
      : _M_dataplus(_M_local_data(), __a)
    60c0:	e8 3b 08 00 00       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    60c5:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    60c9:	48 89 c6             	mov    rsi,rax
    60cc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    60d0:	e8 0b 10 00 00       	call   70e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>
	if (__s == 0)
    60d5:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    60da:	75 29                	jne    6105 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x65>
	  std::__throw_logic_error(__N("basic_string: "
    60dc:	48 8d 3d 5f b0 00 00 	lea    rdi,[rip+0xb05f]        # 11142 <_IO_stdin_used+0x142>
    60e3:	e8 48 e4 ff ff       	call   4530 <_ZSt19__throw_logic_errorPKc@plt>
    60e8:	eb 00                	jmp    60ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x4a>
    60ea:	f3 0f 1e fa          	endbr64
    60ee:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    60f2:	48 89 c1             	mov    rcx,rax
      }
    60f5:	89 d0                	mov    eax,edx
    60f7:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    60fb:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    60fe:	e8 dd 09 00 00       	call   6ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
    6103:	eb 3b                	jmp    6140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0xa0>
	const _CharT* __end = __s + traits_type::length(__s);
    6105:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6109:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    610d:	e8 0e 10 00 00       	call   7120 <_ZNSt11char_traitsIcE6lengthEPKc>
    6112:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    6116:	eb 00                	jmp    6118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x78>
    6118:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    611c:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
    6120:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    6124:	48 01 c8             	add    rax,rcx
    6127:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	_M_construct(__s, __end, forward_iterator_tag());
    612b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    612f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    6133:	e8 08 10 00 00       	call   7140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
    6138:	eb 00                	jmp    613a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x9a>
      }
    613a:	48 83 c4 50          	add    rsp,0x50
    613e:	5d                   	pop    rbp
    613f:	c3                   	ret
    6140:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    6144:	e8 37 e3 ff ff       	call   4480 <_Unwind_Resume@plt>
    6149:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>:
      { _M_dispose(); }
    6150:	f3 0f 1e fa          	endbr64
    6154:	55                   	push   rbp
    6155:	48 89 e5             	mov    rbp,rsp
    6158:	48 83 ec 10          	sub    rsp,0x10
    615c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6160:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6164:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6168:	e8 d3 0d 00 00       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    616d:	eb 00                	jmp    616f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev+0x1f>
    616f:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6173:	e8 68 09 00 00       	call   6ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
    6178:	48 83 c4 10          	add    rsp,0x10
    617c:	5d                   	pop    rbp
    617d:	c3                   	ret
    617e:	f3 0f 1e fa          	endbr64
    6182:	48 89 c7             	mov    rdi,rax
    6185:	e8 56 07 00 00       	call   68e0 <__clang_call_terminate>
    618a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
      {
    6190:	f3 0f 1e fa          	endbr64
    6194:	55                   	push   rbp
    6195:	48 89 e5             	mov    rbp,rsp
    6198:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    619f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    61a3:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    61a7:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    61ab:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
	const bool __equal_allocs = _Alloc_traits::_S_always_equal()
    61af:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    61b3:	e8 c8 0d 00 00       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    61b8:	88 45 b7             	mov    BYTE PTR [rbp-0x49],al
    61bb:	eb 00                	jmp    61bd <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2d>
    61bd:	8a 45 b7             	mov    al,BYTE PTR [rbp-0x49]
	    && !__equal_allocs)
    61c0:	a8 01                	test   al,0x1
    61c2:	75 3d                	jne    6201 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    61c4:	eb 00                	jmp    61c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x36>
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    61c6:	b0 01                	mov    al,0x1
    61c8:	a8 01                	test   al,0x1
    61ca:	75 35                	jne    6201 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    61cc:	eb 00                	jmp    61ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x3e>
    61ce:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_destroy(_M_allocated_capacity);
    61d2:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    61d6:	e8 05 0e 00 00       	call   6fe0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
    61db:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_data(_M_local_data());
    61df:	e8 1c 07 00 00       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    61e4:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    61e8:	48 89 c6             	mov    rsi,rax
    61eb:	e8 30 09 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    61f0:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    61f4:	31 c0                	xor    eax,eax
    61f6:	89 c6                	mov    esi,eax
	    _M_set_length(0);
    61f8:	e8 93 0a 00 00       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    61fd:	eb 00                	jmp    61ff <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x6f>
	  }
    61ff:	eb 00                	jmp    6201 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    6201:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
    6205:	e8 d6 0b 00 00       	call   6de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    620a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    620e:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6212:	e8 c9 0b 00 00       	call   6de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6217:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    621b:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    621f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__str._M_is_local())
    6223:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6227:	e8 54 0d 00 00       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    622c:	88 45 9f             	mov    BYTE PTR [rbp-0x61],al
    622f:	eb 00                	jmp    6231 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xa1>
    6231:	8a 45 9f             	mov    al,BYTE PTR [rbp-0x61]
    6234:	a8 01                	test   al,0x1
    6236:	75 02                	jne    623a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xaa>
    6238:	eb 6e                	jmp    62a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x118>
    623a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
	    if (__builtin_expect(std::__addressof(__str) != this, true))
    623e:	48 39 45 d0          	cmp    QWORD PTR [rbp-0x30],rax
    6242:	74 5f                	je     62a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x113>
		if (__str.size())
    6244:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6248:	e8 e3 10 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    624d:	48 83 f8 00          	cmp    rax,0x0
    6251:	74 37                	je     628a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xfa>
    6253:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
		  this->_S_copy(_M_data(), __str._M_data(), __str.size());
    6257:	e8 64 06 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    625c:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    6260:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6264:	e8 57 06 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6269:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    626d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6271:	e8 ba 10 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    6276:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    627a:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    627e:	48 89 c2             	mov    rdx,rax
    6281:	e8 da 0b 00 00       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    6286:	eb 00                	jmp    6288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xf8>
    6288:	eb 00                	jmp    628a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xfa>
		_M_set_length(__str.size());
    628a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    628e:	e8 9d 10 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    6293:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    6297:	48 89 c6             	mov    rsi,rax
    629a:	e8 f1 09 00 00       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    629f:	eb 00                	jmp    62a1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x111>
	      }
    62a1:	eb 00                	jmp    62a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x113>
	  }
    62a3:	e9 ca 00 00 00       	jmp    6372 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e2>
    62a8:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    pointer __data = nullptr;
    62ac:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    62b3:	00 
	    if (!_M_is_local())
    62b4:	e8 c7 0c 00 00       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    62b9:	88 45 87             	mov    BYTE PTR [rbp-0x79],al
    62bc:	eb 00                	jmp    62be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x12e>
    62be:	8a 45 87             	mov    al,BYTE PTR [rbp-0x79]
    62c1:	a8 01                	test   al,0x1
    62c3:	75 1e                	jne    62e3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x153>
    62c5:	eb 00                	jmp    62c7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x137>
    62c7:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
		    __data = _M_data();
    62cb:	e8 f0 05 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    62d0:	48 89 c1             	mov    rcx,rax
    62d3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    62d7:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
		    __capacity = _M_allocated_capacity;
    62db:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    62df:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	    _M_data(__str._M_data());
    62e3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    62e7:	e8 d4 05 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    62ec:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    62f0:	48 89 c6             	mov    rsi,rax
    62f3:	e8 28 08 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_length(__str.length());
    62f8:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    62fc:	e8 7f fd ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    6301:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    6305:	48 89 c6             	mov    rsi,rax
    6308:	e8 13 0c 00 00       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
    630d:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_capacity(__str._M_allocated_capacity);
    6311:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6315:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    6319:	e8 f2 08 00 00       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	    if (__data)
    631e:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    6323:	74 1c                	je     6341 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1b1>
		__str._M_data(__data);
    6325:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6329:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    632d:	e8 ee 07 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
		__str._M_capacity(__capacity);
    6332:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6336:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    633a:	e8 d1 08 00 00       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	      }
    633f:	eb 2f                	jmp    6370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e0>
	      __str._M_data(__str._M_use_local_data());
    6341:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6345:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    634c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6350:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6354:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6358:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return _M_local_data();
    635c:	e8 9f 05 00 00       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6361:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    6368:	48 89 c6             	mov    rsi,rax
	      __str._M_data(__str._M_use_local_data());
    636b:	e8 b0 07 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    6370:	eb 00                	jmp    6372 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e2>
	__str.clear();
    6372:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6376:	e8 d5 0f 00 00       	call   7350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>
    637b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
	return *this;
    637f:	48 81 c4 90 00 00 00 	add    rsp,0x90
    6386:	5d                   	pop    rbp
    6387:	c3                   	ret
    6388:	f3 0f 1e fa          	endbr64
    638c:	48 89 c7             	mov    rdi,rax
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    638f:	e8 4c 05 00 00       	call   68e0 <__clang_call_terminate>
    6394:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    639b:	00 00 00 
    639e:	66 90                	xchg   ax,ax

00000000000063a0 <_Z14allocate_arrayIPcEPT_m>:
#include <cstdio>
#include <cstdlib>

template<class T>
T* allocate_array(std::size_t len)
{
    63a0:	f3 0f 1e fa          	endbr64
    63a4:	55                   	push   rbp
    63a5:	48 89 e5             	mov    rbp,rsp
    63a8:	48 83 ec 10          	sub    rsp,0x10
    63ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   T* res = new T[len];
    63b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63b4:	b9 08 00 00 00       	mov    ecx,0x8
    63b9:	48 f7 e1             	mul    rcx
    63bc:	48 89 c7             	mov    rdi,rax
    63bf:	0f 90 c1             	seto   cl
    63c2:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    63c9:	f6 c1 01             	test   cl,0x1
    63cc:	48 0f 45 f8          	cmovne rdi,rax
    63d0:	e8 6b e0 ff ff       	call   4440 <_Znam@plt>
    63d5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   if(res == NULL)
    63d9:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    63de:	75 22                	jne    6402 <_Z14allocate_arrayIPcEPT_m+0x62>
   {
        fprintf(stderr, "Error: Unable to allocate memory\r\n");
    63e0:	48 8b 05 e9 0b 01 00 	mov    rax,QWORD PTR [rip+0x10be9]        # 16fd0 <stderr@GLIBC_2.2.5>
    63e7:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    63ea:	48 8d 35 dc ad 00 00 	lea    rsi,[rip+0xaddc]        # 111cd <_IO_stdin_used+0x1cd>
    63f1:	b0 00                	mov    al,0x0
    63f3:	e8 d8 e2 ff ff       	call   46d0 <fprintf@plt>
        exit(-1);
    63f8:	bf ff ff ff ff       	mov    edi,0xffffffff
    63fd:	e8 2e e2 ff ff       	call   4630 <exit@plt>
   }
   return res;
    6402:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6406:	48 83 c4 10          	add    rsp,0x10
    640a:	5d                   	pop    rbp
    640b:	c3                   	ret
    640c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006410 <_Z14allocate_arrayIcEPT_m>:
{
    6410:	f3 0f 1e fa          	endbr64
    6414:	55                   	push   rbp
    6415:	48 89 e5             	mov    rbp,rsp
    6418:	48 83 ec 10          	sub    rsp,0x10
    641c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   T* res = new T[len];
    6420:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6424:	e8 17 e0 ff ff       	call   4440 <_Znam@plt>
    6429:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   if(res == NULL)
    642d:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    6432:	75 22                	jne    6456 <_Z14allocate_arrayIcEPT_m+0x46>
        fprintf(stderr, "Error: Unable to allocate memory\r\n");
    6434:	48 8b 05 95 0b 01 00 	mov    rax,QWORD PTR [rip+0x10b95]        # 16fd0 <stderr@GLIBC_2.2.5>
    643b:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    643e:	48 8d 35 88 ad 00 00 	lea    rsi,[rip+0xad88]        # 111cd <_IO_stdin_used+0x1cd>
    6445:	b0 00                	mov    al,0x0
    6447:	e8 84 e2 ff ff       	call   46d0 <fprintf@plt>
        exit(-1);
    644c:	bf ff ff ff ff       	mov    edi,0xffffffff
    6451:	e8 da e1 ff ff       	call   4630 <exit@plt>
   return res;
    6456:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    645a:	48 83 c4 10          	add    rsp,0x10
    645e:	5d                   	pop    rbp
    645f:	c3                   	ret

0000000000006460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>:
      vector() = default;
    6460:	f3 0f 1e fa          	endbr64
    6464:	55                   	push   rbp
    6465:	48 89 e5             	mov    rbp,rsp
    6468:	48 83 ec 10          	sub    rsp,0x10
    646c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6470:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6474:	e8 17 0f 00 00       	call   7390 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    6479:	48 83 c4 10          	add    rsp,0x10
    647d:	5d                   	pop    rbp
    647e:	c3                   	ret
    647f:	90                   	nop

0000000000006480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>:
      {
    6480:	f3 0f 1e fa          	endbr64
    6484:	55                   	push   rbp
    6485:	48 89 e5             	mov    rbp,rsp
    6488:	48 83 ec 40          	sub    rsp,0x40
    648c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6493:	00 00 
    6495:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6499:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    649d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    64a1:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
      : _M_dataplus(_M_local_data())
    64a5:	e8 56 04 00 00       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    64aa:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    64ae:	48 89 c6             	mov    rsi,rax
    64b1:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    64b5:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    64b9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    64bd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    64c1:	e8 8a 04 00 00       	call   6950 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    64c6:	eb 00                	jmp    64c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x48>
    64c8:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    64cc:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    64d0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    64d4:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    64d8:	31 c0                	xor    eax,eax
    64da:	89 c6                	mov    esi,eax
	_M_set_length(0);
    64dc:	e8 af 07 00 00       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    64e1:	eb 00                	jmp    64e3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x63>
      }
    64e3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    64ea:	00 00 
    64ec:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    64f0:	48 39 c8             	cmp    rax,rcx
    64f3:	75 12                	jne    6507 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x87>
    64f5:	48 83 c4 40          	add    rsp,0x40
    64f9:	5d                   	pop    rbp
    64fa:	c3                   	ret
    64fb:	f3 0f 1e fa          	endbr64
    64ff:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data())
    6502:	e8 d9 03 00 00       	call   68e0 <__clang_call_terminate>
    6507:	e8 c4 e0 ff ff       	call   45d0 <__stack_chk_fail@plt>
    650c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>:
#else
      void
#endif
      vector<_Tp, _Alloc>::
      emplace_back(_Args&&... __args)
      {
    6510:	f3 0f 1e fa          	endbr64
    6514:	55                   	push   rbp
    6515:	48 89 e5             	mov    rbp,rsp
    6518:	48 83 ec 30          	sub    rsp,0x30
    651c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    6520:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    6524:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    6528:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    652c:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    6530:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
    6534:	74 37                	je     656d <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_+0x5d>
    6536:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    653a:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
				     std::forward<_Args>(__args)...);
    653e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6542:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6546:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    654a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    654e:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6552:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6556:	e8 25 11 00 00       	call   7680 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>
    655b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
	    ++this->_M_impl._M_finish;
    655f:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    6563:	48 83 c1 20          	add    rcx,0x20
    6567:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
    656b:	eb 0d                	jmp    657a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_+0x6a>
    656d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	else
	  _M_realloc_append(std::forward<_Args>(__args)...);
    6571:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    6575:	e8 66 0e 00 00       	call   73e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_>
    657a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
#if __cplusplus > 201402L
	return back();
    657e:	e8 8d 10 00 00       	call   7610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    6583:	48 83 c4 30          	add    rsp,0x30
    6587:	5d                   	pop    rbp
    6588:	c3                   	ret
    6589:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
      { return this->assign(__s); }
    6590:	f3 0f 1e fa          	endbr64
    6594:	55                   	push   rbp
    6595:	48 89 e5             	mov    rbp,rsp
    6598:	48 83 ec 10          	sub    rsp,0x10
    659c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    65a4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    65a8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    65ac:	e8 6f 1a 00 00       	call   8020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    65b1:	48 83 c4 10          	add    rsp,0x10
    65b5:	5d                   	pop    rbp
    65b6:	c3                   	ret
    65b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    65be:	00 00 

00000000000065c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
      {
    65c0:	f3 0f 1e fa          	endbr64
    65c4:	55                   	push   rbp
    65c5:	48 89 e5             	mov    rbp,rsp
    65c8:	48 83 ec 20          	sub    rsp,0x20
    65cc:	40 88 f0             	mov    al,sil
    65cf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65d3:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    65d6:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    65da:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	this->push_back(__c);
    65de:	0f be 75 f7          	movsx  esi,BYTE PTR [rbp-0x9]
    65e2:	e8 69 1f 00 00       	call   8550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
    65e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	return *this;
    65eb:	48 83 c4 20          	add    rsp,0x20
    65ef:	5d                   	pop    rbp
    65f0:	c3                   	ret
    65f1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    65f8:	00 00 00 
    65fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
      {
    6600:	f3 0f 1e fa          	endbr64
    6604:	55                   	push   rbp
    6605:	48 89 e5             	mov    rbp,rsp
    6608:	48 83 ec 40          	sub    rsp,0x40
    660c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    6610:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    6614:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6618:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    661b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    661f:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    6623:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
		      _M_get_Tp_allocator());
    6627:	e8 d4 13 00 00       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    662c:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    6630:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    6634:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6638:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    663c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    __attribute__((__always_inline__)) _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
	     allocator<_Tp>&)
    {
      std::_Destroy(__first, __last);
    6640:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6644:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6648:	e8 13 20 00 00       	call   8660 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    664d:	eb 00                	jmp    664f <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x4f>
    }
    664f:	eb 00                	jmp    6651 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x51>
    6651:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      }
    6655:	e8 b6 1f 00 00       	call   8610 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    665a:	48 83 c4 40          	add    rsp,0x40
    665e:	5d                   	pop    rbp
    665f:	c3                   	ret
    6660:	f3 0f 1e fa          	endbr64
    6664:	48 89 c7             	mov    rdi,rax
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6667:	e8 74 02 00 00       	call   68e0 <__clang_call_terminate>
    666c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>:
      {
    6670:	f3 0f 1e fa          	endbr64
    6674:	55                   	push   rbp
    6675:	48 89 e5             	mov    rbp,rsp
    6678:	48 83 ec 20          	sub    rsp,0x20
    667c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6680:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6684:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6688:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	__glibcxx_assert(__pos <= size());
    668c:	eb 00                	jmp    668e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x1e>
    668e:	eb 00                	jmp    6690 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x20>
    6690:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return _M_data()[__pos];
    6694:	e8 27 02 00 00       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6699:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    669d:	48 83 c4 20          	add    rsp,0x20
    66a1:	5d                   	pop    rbp
    66a2:	c3                   	ret
    66a3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    66aa:	00 00 00 
    66ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000066b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_>:
      {
    66b0:	f3 0f 1e fa          	endbr64
    66b4:	55                   	push   rbp
    66b5:	48 89 e5             	mov    rbp,rsp
    66b8:	48 83 ec 30          	sub    rsp,0x30
    66bc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    66c0:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    66c4:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    66c8:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    66cc:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    66d0:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
    66d4:	74 37                	je     670d <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_+0x5d>
    66d6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    66da:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
				     std::forward<_Args>(__args)...);
    66de:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    66e2:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    66e6:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    66ea:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    66ee:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    66f2:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    66f6:	e8 b5 22 00 00       	call   89b0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>
    66fb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
	    ++this->_M_impl._M_finish;
    66ff:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    6703:	48 83 c1 20          	add    rcx,0x20
    6707:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  }
    670b:	eb 0d                	jmp    671a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_+0x6a>
    670d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	  _M_realloc_append(std::forward<_Args>(__args)...);
    6711:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    6715:	e8 66 20 00 00       	call   8780 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_>
    671a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	return back();
    671e:	e8 ed 0e 00 00       	call   7610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    6723:	48 83 c4 30          	add    rsp,0x30
    6727:	5d                   	pop    rbp
    6728:	c3                   	ret
    6729:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>:
      {
    6730:	f3 0f 1e fa          	endbr64
    6734:	55                   	push   rbp
    6735:	48 89 e5             	mov    rbp,rsp
    6738:	48 83 ec 20          	sub    rsp,0x20
    673c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6740:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6744:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6748:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	constexpr bool __move_storage =
    674c:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
    6750:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6754:	e8 37 23 00 00       	call   8a90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>
    6759:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return *this;
    675d:	48 83 c4 20          	add    rsp,0x20
    6761:	5d                   	pop    rbp
    6762:	c3                   	ret
    6763:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    676a:	00 00 00 
    676d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
      {
    6770:	f3 0f 1e fa          	endbr64
    6774:	55                   	push   rbp
    6775:	48 89 e5             	mov    rbp,rsp
    6778:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    677c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6780:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	return *(this->_M_impl._M_start + __n);
    6784:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6787:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    678b:	48 c1 e1 05          	shl    rcx,0x5
    678f:	48 01 c8             	add    rax,rcx
    6792:	5d                   	pop    rbp
    6793:	c3                   	ret
    6794:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    679b:	00 00 00 
    679e:	66 90                	xchg   ax,ax

00000000000067a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
      {
    67a0:	f3 0f 1e fa          	endbr64
    67a4:	55                   	push   rbp
    67a5:	48 89 e5             	mov    rbp,rsp
    67a8:	48 83 ec 20          	sub    rsp,0x20
    67ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67b4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	__glibcxx_assert(!empty());
    67b8:	eb 00                	jmp    67ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x1a>
    67ba:	eb 00                	jmp    67bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x1c>
    67bc:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	return operator[](this->size() - 1);
    67c0:	e8 6b 0b 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    67c5:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    67c9:	48 89 c6             	mov    rsi,rax
    67cc:	48 ff ce             	dec    rsi
    67cf:	e8 5c 25 00 00       	call   8d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    67d4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    67d8:	eb 00                	jmp    67da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x3a>
    67da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    67de:	48 83 c4 20          	add    rsp,0x20
    67e2:	5d                   	pop    rbp
    67e3:	c3                   	ret
    67e4:	f3 0f 1e fa          	endbr64
    67e8:	48 89 c7             	mov    rdi,rax
    67eb:	e8 f0 00 00 00       	call   68e0 <__clang_call_terminate>

00000000000067f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
      { return this->append(__str); }
    67f0:	f3 0f 1e fa          	endbr64
    67f4:	55                   	push   rbp
    67f5:	48 89 e5             	mov    rbp,rsp
    67f8:	48 83 ec 10          	sub    rsp,0x10
    67fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6800:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6804:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6808:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    680c:	e8 5f 25 00 00       	call   8d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
    6811:	48 83 c4 10          	add    rsp,0x10
    6815:	5d                   	pop    rbp
    6816:	c3                   	ret
    6817:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    681e:	00 00 

0000000000006820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    {
    6820:	f3 0f 1e fa          	endbr64
    6824:	55                   	push   rbp
    6825:	48 89 e5             	mov    rbp,rsp
    6828:	48 83 ec 40          	sub    rsp,0x40
    682c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6830:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      return __lhs.size() == __rhs.size()
    6834:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6838:	e8 f3 0a 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    683d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6841:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6845:	e8 e6 0a 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    684a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    684e:	48 89 c2             	mov    rdx,rax
    6851:	31 c0                	xor    eax,eax
    6853:	48 39 d1             	cmp    rcx,rdx
    6856:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
	       && !_Traits::compare(__lhs.data(), __rhs.data(), __lhs.size());
    6859:	75 46                	jne    68a1 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_+0x81>
    685b:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    685f:	e8 bc 27 00 00       	call   9020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    6864:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    6868:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    686c:	e8 af 27 00 00       	call   9020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    6871:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    6875:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6879:	e8 b2 0a 00 00       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    687e:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    6882:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    6886:	48 89 c2             	mov    rdx,rax
    6889:	e8 42 27 00 00       	call   8fd0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    688e:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    6891:	eb 00                	jmp    6893 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_+0x73>
    6893:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    6896:	83 f8 00             	cmp    eax,0x0
    6899:	0f 95 c0             	setne  al
    689c:	34 ff                	xor    al,0xff
    689e:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
    68a1:	8a 45 ef             	mov    al,BYTE PTR [rbp-0x11]
      return __lhs.size() == __rhs.size()
    68a4:	24 01                	and    al,0x1
    68a6:	48 83 c4 40          	add    rsp,0x40
    68aa:	5d                   	pop    rbp
    68ab:	c3                   	ret
    68ac:	f3 0f 1e fa          	endbr64
    68b0:	48 89 c7             	mov    rdi,rax
	       && !_Traits::compare(__lhs.data(), __rhs.data(), __lhs.size());
    68b3:	e8 28 00 00 00       	call   68e0 <__clang_call_terminate>
    68b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    68bf:	00 

00000000000068c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      { return _M_dataplus._M_p; }
    68c0:	f3 0f 1e fa          	endbr64
    68c4:	55                   	push   rbp
    68c5:	48 89 e5             	mov    rbp,rsp
    68c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    68cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68d0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    68d3:	5d                   	pop    rbp
    68d4:	c3                   	ret
    68d5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    68dc:	00 00 00 
    68df:	90                   	nop

00000000000068e0 <__clang_call_terminate>:
    68e0:	f3 0f 1e fa          	endbr64
    68e4:	55                   	push   rbp
    68e5:	48 89 e5             	mov    rbp,rsp
    68e8:	e8 d3 db ff ff       	call   44c0 <__cxa_begin_catch@plt>
    68ed:	e8 9e db ff ff       	call   4490 <_ZSt9terminatev@plt>
    68f2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    68f9:	00 00 00 
    68fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      {
    6900:	f3 0f 1e fa          	endbr64
    6904:	55                   	push   rbp
    6905:	48 89 e5             	mov    rbp,rsp
    6908:	48 83 ec 10          	sub    rsp,0x10
    690c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6910:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    6914:	48 83 c7 10          	add    rdi,0x10
    6918:	e8 e3 01 00 00       	call   6b00 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
    691d:	48 83 c4 10          	add    rsp,0x10
    6921:	5d                   	pop    rbp
    6922:	c3                   	ret
    6923:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    692a:	00 00 00 
    692d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006930 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      { return _M_dataplus; }
    6930:	f3 0f 1e fa          	endbr64
    6934:	55                   	push   rbp
    6935:	48 89 e5             	mov    rbp,rsp
    6938:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    693c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6940:	5d                   	pop    rbp
    6941:	c3                   	ret
    6942:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6949:	00 00 00 
    694c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006950 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>:
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6950:	f3 0f 1e fa          	endbr64
    6954:	55                   	push   rbp
    6955:	48 89 e5             	mov    rbp,rsp
    6958:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    695c:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    6960:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    6964:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6968:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    696c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6970:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    6974:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6978:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    697c:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6980:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    6984:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    6988:	48 89 08             	mov    QWORD PTR [rax],rcx
    698b:	5d                   	pop    rbp
    698c:	c3                   	ret
    698d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      _GLIBCXX20_CONSTEXPR
      void
      basic_string<_CharT, _Traits, _Alloc>::
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
    6990:	f3 0f 1e fa          	endbr64
    6994:	55                   	push   rbp
    6995:	48 89 e5             	mov    rbp,rsp
    6998:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    699f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69a6:	00 00 
    69a8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69ac:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    69b0:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    69b4:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    69b8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    69bc:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    69c0:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    69c4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    69c8:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    69cc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
    69d0:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    69d4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    69d8:	48 8d 55 f0          	lea    rdx,[rbp-0x10]
    69dc:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    69e0:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    69e4:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return __last - __first;
    69e8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    69ec:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    69f0:	48 29 c8             	sub    rax,rcx
    69f3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax

	if (__dnew > size_type(_S_local_capacity))
    69f7:	48 83 7d e8 0f       	cmp    QWORD PTR [rbp-0x18],0xf
    69fc:	76 2c                	jbe    6a2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9a>
    69fe:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
    6a02:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    6a06:	31 c0                	xor    eax,eax
    6a08:	89 c2                	mov    edx,eax
    6a0a:	e8 31 01 00 00       	call   6b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    6a0f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    6a13:	48 89 c6             	mov    rsi,rax
    6a16:	e8 05 01 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    6a1b:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_capacity(__dnew);
    6a1f:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6a23:	e8 e8 01 00 00       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  }
    6a28:	eb 08                	jmp    6a32 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa2>
    6a2a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    6a2e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    6a32:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    6a36:	48 8d 7d e0          	lea    rdi,[rbp-0x20]

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }

	  basic_string* _M_guarded;
	} __guard(this);
    6a3a:	e8 f1 01 00 00       	call   6c30 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardC2EPS4_>
    6a3f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]

	this->_S_copy_chars(_M_data(), __beg, __end);
    6a43:	e8 78 fe ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6a48:	48 89 c7             	mov    rdi,rax
    6a4b:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    6a4f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    6a53:	e8 f8 01 00 00       	call   6c50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
    6a58:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]

	__guard._M_guarded = 0;
    6a5c:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    6a63:	00 

	_M_set_length(__dnew);
    6a64:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6a68:	e8 23 02 00 00       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    6a6d:	eb 00                	jmp    6a6f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xdf>
    6a6f:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    6a73:	e8 88 02 00 00       	call   6d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>
    6a78:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a7f:	00 00 
    6a81:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6a85:	48 39 c8             	cmp    rax,rcx
    6a88:	75 4b                	jne    6ad5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x145>
    6a8a:	48 81 c4 90 00 00 00 	add    rsp,0x90
    6a91:	5d                   	pop    rbp
    6a92:	c3                   	ret
    6a93:	f3 0f 1e fa          	endbr64
    6a97:	48 89 c1             	mov    rcx,rax
    6a9a:	89 d0                	mov    eax,edx
    6a9c:	48 89 4d 90          	mov    QWORD PTR [rbp-0x70],rcx
    6aa0:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    6aa3:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    6aa7:	e8 54 02 00 00       	call   6d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>
    6aac:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    6ab0:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    6ab7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6abe:	00 00 
    6ac0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6ac4:	48 39 c8             	cmp    rax,rcx
    6ac7:	75 0c                	jne    6ad5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x145>
    6ac9:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    6ad0:	e8 ab d9 ff ff       	call   4480 <_Unwind_Resume@plt>
    6ad5:	e8 f6 da ff ff       	call   45d0 <__stack_chk_fail@plt>
    6ada:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    6ae0:	f3 0f 1e fa          	endbr64
    6ae4:	55                   	push   rbp
    6ae5:	48 89 e5             	mov    rbp,rsp
    6ae8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6aec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6af0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6af4:	5d                   	pop    rbp
    6af5:	c3                   	ret
    6af6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6afd:	00 00 00 

0000000000006b00 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
      { return std::addressof(__r); }
    6b00:	f3 0f 1e fa          	endbr64
    6b04:	55                   	push   rbp
    6b05:	48 89 e5             	mov    rbp,rsp
    6b08:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6b0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6b10:	5d                   	pop    rbp
    6b11:	c3                   	ret
    6b12:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6b19:	00 00 00 
    6b1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      { _M_dataplus._M_p = __p; }
    6b20:	f3 0f 1e fa          	endbr64
    6b24:	55                   	push   rbp
    6b25:	48 89 e5             	mov    rbp,rsp
    6b28:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6b2c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6b30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6b34:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6b38:	48 89 08             	mov    QWORD PTR [rax],rcx
    6b3b:	5d                   	pop    rbp
    6b3c:	c3                   	ret
    6b3d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    {
    6b40:	f3 0f 1e fa          	endbr64
    6b44:	55                   	push   rbp
    6b45:	48 89 e5             	mov    rbp,rsp
    6b48:	48 83 ec 30          	sub    rsp,0x30
    6b4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6b50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6b54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    6b58:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6b5c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
      if (__capacity > max_size())
    6b60:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b64:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b67:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6b6b:	e8 d0 01 00 00       	call   6d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6b70:	48 89 c1             	mov    rcx,rax
    6b73:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6b77:	48 39 c8             	cmp    rax,rcx
    6b7a:	76 0c                	jbe    6b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x48>
	std::__throw_length_error(__N("basic_string::_M_create"));
    6b7c:	48 8d 3d a7 a5 00 00 	lea    rdi,[rip+0xa5a7]        # 1112a <_IO_stdin_used+0x12a>
    6b83:	e8 88 d9 ff ff       	call   4510 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    6b88:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b8c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b8f:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    6b93:	76 56                	jbe    6beb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6b95:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b99:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b9c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6ba0:	48 d1 e1             	shl    rcx,1
    6ba3:	48 39 c8             	cmp    rax,rcx
    6ba6:	73 43                	jae    6beb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6ba8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	  __capacity = 2 * __old_capacity;
    6bac:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6bb0:	48 d1 e1             	shl    rcx,1
    6bb3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6bb7:	48 89 08             	mov    QWORD PTR [rax],rcx
	  if (__capacity > max_size())
    6bba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6bbe:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6bc1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    6bc5:	e8 76 01 00 00       	call   6d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6bca:	48 89 c1             	mov    rcx,rax
    6bcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6bd1:	48 39 c8             	cmp    rax,rcx
    6bd4:	76 13                	jbe    6be9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa9>
    6bd6:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	    __capacity = max_size();
    6bda:	e8 61 01 00 00       	call   6d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6bdf:	48 89 c1             	mov    rcx,rax
    6be2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6be6:	48 89 08             	mov    QWORD PTR [rax],rcx
	}
    6be9:	eb 00                	jmp    6beb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6beb:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
      return _S_allocate(_M_get_allocator(), __capacity + 1);
    6bef:	e8 ec 01 00 00       	call   6de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6bf4:	48 89 c7             	mov    rdi,rax
    6bf7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6bfb:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    6bfe:	48 83 c6 01          	add    rsi,0x1
    6c02:	e8 79 01 00 00       	call   6d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_S_allocateERS3_m>
    6c07:	48 83 c4 30          	add    rsp,0x30
    6c0b:	5d                   	pop    rbp
    6c0c:	c3                   	ret
    6c0d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      { _M_allocated_capacity = __capacity; }
    6c10:	f3 0f 1e fa          	endbr64
    6c14:	55                   	push   rbp
    6c15:	48 89 e5             	mov    rbp,rsp
    6c18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6c1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6c24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6c28:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    6c2c:	5d                   	pop    rbp
    6c2d:	c3                   	ret
    6c2e:	66 90                	xchg   ax,ax

0000000000006c30 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardC2EPS4_>:
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    6c30:	f3 0f 1e fa          	endbr64
    6c34:	55                   	push   rbp
    6c35:	48 89 e5             	mov    rbp,rsp
    6c38:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6c3c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6c44:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6c48:	48 89 08             	mov    QWORD PTR [rax],rcx
    6c4b:	5d                   	pop    rbp
    6c4c:	c3                   	ret
    6c4d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006c50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
      { _S_copy(__p, __k1, __k2 - __k1); }
    6c50:	f3 0f 1e fa          	endbr64
    6c54:	55                   	push   rbp
    6c55:	48 89 e5             	mov    rbp,rsp
    6c58:	48 83 ec 20          	sub    rsp,0x20
    6c5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6c60:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c64:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    6c68:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6c6c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6c70:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6c74:	48 29 f2             	sub    rdx,rsi
    6c77:	e8 e4 01 00 00       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    6c7c:	eb 00                	jmp    6c7e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x2e>
    6c7e:	48 83 c4 20          	add    rsp,0x20
    6c82:	5d                   	pop    rbp
    6c83:	c3                   	ret
    6c84:	f3 0f 1e fa          	endbr64
    6c88:	48 89 c7             	mov    rdi,rax
    6c8b:	e8 50 fc ff ff       	call   68e0 <__clang_call_terminate>

0000000000006c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      {
    6c90:	f3 0f 1e fa          	endbr64
    6c94:	55                   	push   rbp
    6c95:	48 89 e5             	mov    rbp,rsp
    6c98:	48 83 ec 30          	sub    rsp,0x30
    6c9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6ca3:	00 00 
    6ca5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6ca9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6cad:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6cb1:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    6cb5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	_M_length(__n);
    6cb9:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    6cbd:	e8 5e 02 00 00       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
    6cc2:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	traits_type::assign(_M_data()[__n], _CharT());
    6cc6:	e8 f5 fb ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6ccb:	48 89 c7             	mov    rdi,rax
    6cce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6cd2:	48 01 c7             	add    rdi,rax
    6cd5:	c6 45 f7 00          	mov    BYTE PTR [rbp-0x9],0x0
    6cd9:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    6cdd:	e8 ce 01 00 00       	call   6eb0 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    6ce2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6ce9:	00 00 
    6ceb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cef:	48 39 c8             	cmp    rax,rcx
    6cf2:	75 06                	jne    6cfa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm+0x6a>
    6cf4:	48 83 c4 30          	add    rsp,0x30
    6cf8:	5d                   	pop    rbp
    6cf9:	c3                   	ret
    6cfa:	e8 d1 d8 ff ff       	call   45d0 <__stack_chk_fail@plt>
    6cff:	90                   	nop

0000000000006d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>:
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    6d00:	f3 0f 1e fa          	endbr64
    6d04:	55                   	push   rbp
    6d05:	48 89 e5             	mov    rbp,rsp
    6d08:	48 83 ec 10          	sub    rsp,0x10
    6d0c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6d10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6d14:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6d18:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    6d1c:	74 10                	je     6d2e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    6d1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6d22:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    6d25:	e8 16 02 00 00       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    6d2a:	eb 00                	jmp    6d2c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2c>
    6d2c:	eb 00                	jmp    6d2e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    6d2e:	48 83 c4 10          	add    rsp,0x10
    6d32:	5d                   	pop    rbp
    6d33:	c3                   	ret
    6d34:	f3 0f 1e fa          	endbr64
    6d38:	48 89 c7             	mov    rdi,rax
    6d3b:	e8 a0 fb ff ff       	call   68e0 <__clang_call_terminate>

0000000000006d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    6d40:	f3 0f 1e fa          	endbr64
    6d44:	55                   	push   rbp
    6d45:	48 89 e5             	mov    rbp,rsp
    6d48:	48 83 ec 10          	sub    rsp,0x10
    6d4c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6d50:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6d54:	e8 d7 fb ff ff       	call   6930 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6d59:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6d5d:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    6d64:	48 83 e8 01          	sub    rax,0x1
    6d68:	48 d1 e8             	shr    rax,1
    6d6b:	48 83 c4 10          	add    rsp,0x10
    6d6f:	5d                   	pop    rbp
    6d70:	c3                   	ret
    6d71:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6d78:	00 00 00 
    6d7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_S_allocateERS3_m>:
      {
    6d80:	f3 0f 1e fa          	endbr64
    6d84:	55                   	push   rbp
    6d85:	48 89 e5             	mov    rbp,rsp
    6d88:	48 83 ec 40          	sub    rsp,0x40
    6d8c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    6d90:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
	pointer __p = _Alloc_traits::allocate(__a, __n);
    6d94:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    6d98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6d9c:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    6da0:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      { return __a.allocate(__n); }
    6da4:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6da8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6dac:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    6db0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6db4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
	      std::__throw_bad_array_new_length();
	    return static_cast<_Tp*>(::operator new(__n));
	  }

	return __allocator_base<_Tp>::allocate(__n, 0);
    6db8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6dbc:	31 c0                	xor    eax,eax
    6dbe:	89 c2                	mov    edx,eax
    6dc0:	e8 3b 00 00 00       	call   6e00 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    6dc5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	return __p;
    6dc9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6dcd:	48 83 c4 40          	add    rsp,0x40
    6dd1:	5d                   	pop    rbp
    6dd2:	c3                   	ret
    6dd3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6dda:	00 00 00 
    6ddd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      { return _M_dataplus; }
    6de0:	f3 0f 1e fa          	endbr64
    6de4:	55                   	push   rbp
    6de5:	48 89 e5             	mov    rbp,rsp
    6de8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6dec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6df0:	5d                   	pop    rbp
    6df1:	c3                   	ret
    6df2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6df9:	00 00 00 
    6dfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006e00 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      _GLIBCXX_NODISCARD _Tp*
      allocate(size_type __n, const void* = static_cast<const void*>(0))
      {
    6e00:	f3 0f 1e fa          	endbr64
    6e04:	55                   	push   rbp
    6e05:	48 89 e5             	mov    rbp,rsp
    6e08:	48 83 ec 20          	sub    rsp,0x20
    6e0c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6e10:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    6e14:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    6e18:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3308. std::allocator<void>().allocate(n)
	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
#endif

	if (__builtin_expect(__n > this->_M_max_size(), false))
    6e1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6e20:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    6e24:	48 b9 ff ff ff ff ff 	movabs rcx,0x7fffffffffffffff
    6e2b:	ff ff 7f 
    6e2e:	48 39 c8             	cmp    rax,rcx
    6e31:	76 11                	jbe    6e44 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x44>
	  {
	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
	    // 3190. allocator::allocate sometimes returns too little storage
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6e33:	48 83 7d e8 ff       	cmp    QWORD PTR [rbp-0x18],0xffffffffffffffff
    6e38:	76 05                	jbe    6e3f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x3f>
	      std::__throw_bad_array_new_length();
    6e3a:	e8 11 d7 ff ff       	call   4550 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6e3f:	e8 6c d6 ff ff       	call   44b0 <_ZSt17__throw_bad_allocv@plt>
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
							   __al));
	  }
#endif
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6e44:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    6e48:	48 c1 e7 00          	shl    rdi,0x0
    6e4c:	e8 3f d7 ff ff       	call   4590 <_Znwm@plt>
    6e51:	48 83 c4 20          	add    rsp,0x20
    6e55:	5d                   	pop    rbp
    6e56:	c3                   	ret
    6e57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    6e5e:	00 00 

0000000000006e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      {
    6e60:	f3 0f 1e fa          	endbr64
    6e64:	55                   	push   rbp
    6e65:	48 89 e5             	mov    rbp,rsp
    6e68:	48 83 ec 20          	sub    rsp,0x20
    6e6c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6e70:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6e74:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	if (__n == 1)
    6e78:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    6e7d:	75 0f                	jne    6e8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x2e>
	  traits_type::assign(*__d, *__s);
    6e7f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6e83:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6e87:	e8 24 00 00 00       	call   6eb0 <_ZNSt11char_traitsIcE6assignERcRKc>
    6e8c:	eb 11                	jmp    6e9f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x3f>
	  traits_type::copy(__d, __s, __n);
    6e8e:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6e92:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6e96:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6e9a:	e8 31 00 00 00       	call   6ed0 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    6e9f:	48 83 c4 20          	add    rsp,0x20
    6ea3:	5d                   	pop    rbp
    6ea4:	c3                   	ret
    6ea5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6eac:	00 00 00 
    6eaf:	90                   	nop

0000000000006eb0 <_ZNSt11char_traitsIcE6assignERcRKc>:
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      {
    6eb0:	f3 0f 1e fa          	endbr64
    6eb4:	55                   	push   rbp
    6eb5:	48 89 e5             	mov    rbp,rsp
    6eb8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6ebc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
	  std::construct_at(__builtin_addressof(__c1), __c2);
	else
#endif
	__c1 = __c2;
    6ec0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6ec4:	8a 08                	mov    cl,BYTE PTR [rax]
    6ec6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6eca:	88 08                	mov    BYTE PTR [rax],cl
      }
    6ecc:	5d                   	pop    rbp
    6ecd:	c3                   	ret
    6ece:	66 90                	xchg   ax,ax

0000000000006ed0 <_ZNSt11char_traitsIcE4copyEPcPKcm>:
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      {
    6ed0:	f3 0f 1e fa          	endbr64
    6ed4:	55                   	push   rbp
    6ed5:	48 89 e5             	mov    rbp,rsp
    6ed8:	48 83 ec 30          	sub    rsp,0x30
    6edc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6ee0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    6ee4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    6ee8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    6eed:	75 0a                	jne    6ef9 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x29>
	  return __s1;
    6eef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6ef3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6ef7:	eb 1d                	jmp    6f16 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x46>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6ef9:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6efd:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    6f01:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6f05:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6f09:	e8 52 d6 ff ff       	call   4560 <memcpy@plt>
    6f0e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6f12:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    6f16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6f1a:	48 83 c4 30          	add    rsp,0x30
    6f1e:	5d                   	pop    rbp
    6f1f:	c3                   	ret

0000000000006f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      { _M_string_length = __length; }
    6f20:	f3 0f 1e fa          	endbr64
    6f24:	55                   	push   rbp
    6f25:	48 89 e5             	mov    rbp,rsp
    6f28:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6f2c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6f30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6f34:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6f38:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    6f3c:	5d                   	pop    rbp
    6f3d:	c3                   	ret
    6f3e:	66 90                	xchg   ax,ax

0000000000006f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      {
    6f40:	f3 0f 1e fa          	endbr64
    6f44:	55                   	push   rbp
    6f45:	48 89 e5             	mov    rbp,rsp
    6f48:	48 83 ec 10          	sub    rsp,0x10
    6f4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6f50:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6f54:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
	if (!_M_is_local())
    6f58:	e8 23 00 00 00       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    6f5d:	a8 01                	test   al,0x1
    6f5f:	75 0d                	jne    6f6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x2e>
    6f61:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	  _M_destroy(_M_allocated_capacity);
    6f65:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    6f69:	e8 72 00 00 00       	call   6fe0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    6f6e:	48 83 c4 10          	add    rsp,0x10
    6f72:	5d                   	pop    rbp
    6f73:	c3                   	ret
    6f74:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6f7b:	00 00 00 
    6f7e:	66 90                	xchg   ax,ax

0000000000006f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      {
    6f80:	f3 0f 1e fa          	endbr64
    6f84:	55                   	push   rbp
    6f85:	48 89 e5             	mov    rbp,rsp
    6f88:	48 83 ec 20          	sub    rsp,0x20
    6f8c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6f90:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6f94:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	if (_M_data() == _M_local_data())
    6f98:	e8 23 f9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6f9d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    6fa1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6fa5:	e8 b6 00 00 00       	call   7060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6faa:	48 89 c1             	mov    rcx,rax
    6fad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6fb1:	48 39 c8             	cmp    rax,rcx
    6fb4:	75 11                	jne    6fc7 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x47>
    6fb6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    if (_M_string_length > _S_local_capacity)
    6fba:	48 83 78 08 0f       	cmp    QWORD PTR [rax+0x8],0xf
    6fbf:	76 00                	jbe    6fc1 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x41>
	    return true;
    6fc1:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
    6fc5:	eb 04                	jmp    6fcb <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x4b>
	return false;
    6fc7:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
      }
    6fcb:	8a 45 ff             	mov    al,BYTE PTR [rbp-0x1]
    6fce:	24 01                	and    al,0x1
    6fd0:	48 83 c4 20          	add    rsp,0x20
    6fd4:	5d                   	pop    rbp
    6fd5:	c3                   	ret
    6fd6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6fdd:	00 00 00 

0000000000006fe0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6fe0:	f3 0f 1e fa          	endbr64
    6fe4:	55                   	push   rbp
    6fe5:	48 89 e5             	mov    rbp,rsp
    6fe8:	48 83 ec 50          	sub    rsp,0x50
    6fec:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6ff0:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    6ff4:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    6ff8:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    6ffc:	e8 df fd ff ff       	call   6de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    7001:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    7005:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7009:	e8 b2 f8 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    700e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7012:	48 89 c1             	mov    rcx,rax
    7015:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    7019:	48 83 c0 01          	add    rax,0x1
    701d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7021:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    7025:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    7029:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    702d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7031:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7035:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    7039:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    703d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7041:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	if (std::__is_constant_evaluated())
	  {
	    ::operator delete(__p);
	    return;
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    7045:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7049:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    704d:	e8 5e 00 00 00       	call   70b0 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    7052:	eb 00                	jmp    7054 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm+0x74>
    7054:	48 83 c4 50          	add    rsp,0x50
    7058:	5d                   	pop    rbp
    7059:	c3                   	ret
    705a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      {
    7060:	f3 0f 1e fa          	endbr64
    7064:	55                   	push   rbp
    7065:	48 89 e5             	mov    rbp,rsp
    7068:	48 83 ec 10          	sub    rsp,0x10
    706c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7070:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    7074:	48 83 c7 10          	add    rdi,0x10
    7078:	e8 13 00 00 00       	call   7090 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
    707d:	48 83 c4 10          	add    rsp,0x10
    7081:	5d                   	pop    rbp
    7082:	c3                   	ret
    7083:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    708a:	00 00 00 
    708d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007090 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
    7090:	f3 0f 1e fa          	endbr64
    7094:	55                   	push   rbp
    7095:	48 89 e5             	mov    rbp,rsp
    7098:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    709c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    70a0:	5d                   	pop    rbp
    70a1:	c3                   	ret
    70a2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    70a9:	00 00 00 
    70ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000070b0 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
      {
    70b0:	f3 0f 1e fa          	endbr64
    70b4:	55                   	push   rbp
    70b5:	48 89 e5             	mov    rbp,rsp
    70b8:	48 83 ec 20          	sub    rsp,0x20
    70bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    70c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    70c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    70c8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    70cc:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    70d0:	48 c1 e6 00          	shl    rsi,0x0
    70d4:	e8 c7 d4 ff ff       	call   45a0 <_ZdlPvm@plt>
      }
    70d9:	48 83 c4 20          	add    rsp,0x20
    70dd:	5d                   	pop    rbp
    70de:	c3                   	ret
    70df:	90                   	nop

00000000000070e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>:
	: allocator_type(__a), _M_p(__dat) { }
    70e0:	f3 0f 1e fa          	endbr64
    70e4:	55                   	push   rbp
    70e5:	48 89 e5             	mov    rbp,rsp
    70e8:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    70ec:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    70f0:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    70f4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    70f8:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    70fc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7100:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7104:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      : __allocator_base<_Tp>(__a) { }
    7108:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    710c:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    7110:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    7114:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    7118:	48 89 08             	mov    QWORD PTR [rax],rcx
    711b:	5d                   	pop    rbp
    711c:	c3                   	ret
    711d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007120 <_ZNSt11char_traitsIcE6lengthEPKc>:
      {
    7120:	f3 0f 1e fa          	endbr64
    7124:	55                   	push   rbp
    7125:	48 89 e5             	mov    rbp,rsp
    7128:	48 83 ec 10          	sub    rsp,0x10
    712c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return __builtin_strlen(__s);
    7130:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7134:	e8 97 d3 ff ff       	call   44d0 <strlen@plt>
    7139:	48 83 c4 10          	add    rsp,0x10
    713d:	5d                   	pop    rbp
    713e:	c3                   	ret
    713f:	90                   	nop

0000000000007140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      {
    7140:	f3 0f 1e fa          	endbr64
    7144:	55                   	push   rbp
    7145:	48 89 e5             	mov    rbp,rsp
    7148:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    714f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7156:	00 00 
    7158:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    715c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    7160:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    7164:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    7168:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    716c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    7170:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    7174:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7178:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    717c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      return std::__distance(__first, __last,
    7180:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7184:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    7188:	48 8d 55 f0          	lea    rdx,[rbp-0x10]
    718c:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    7190:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    7194:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return __last - __first;
    7198:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    719c:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    71a0:	48 29 c8             	sub    rax,rcx
    71a3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	if (__dnew > size_type(_S_local_capacity))
    71a7:	48 83 7d e8 0f       	cmp    QWORD PTR [rbp-0x18],0xf
    71ac:	76 2c                	jbe    71da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9a>
    71ae:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_data(_M_create(__dnew, size_type(0)));
    71b2:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    71b6:	31 c0                	xor    eax,eax
    71b8:	89 c2                	mov    edx,eax
    71ba:	e8 81 f9 ff ff       	call   6b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    71bf:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    71c3:	48 89 c6             	mov    rsi,rax
    71c6:	e8 55 f9 ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    71cb:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_capacity(__dnew);
    71cf:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    71d3:	e8 38 fa ff ff       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  }
    71d8:	eb 08                	jmp    71e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa2>
    71da:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    71de:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    71e2:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    71e6:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
	} __guard(this);
    71ea:	e8 a1 00 00 00       	call   7290 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_>
    71ef:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	this->_S_copy_chars(_M_data(), __beg, __end);
    71f3:	e8 c8 f6 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    71f8:	48 89 c7             	mov    rdi,rax
    71fb:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    71ff:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    7203:	e8 a8 00 00 00       	call   72b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
    7208:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	__guard._M_guarded = 0;
    720c:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    7213:	00 
	_M_set_length(__dnew);
    7214:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7218:	e8 73 fa ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    721d:	eb 00                	jmp    721f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xdf>
    721f:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    7223:	e8 c8 00 00 00       	call   72f0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>
    7228:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    722f:	00 00 
    7231:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7235:	48 39 c8             	cmp    rax,rcx
    7238:	75 4b                	jne    7285 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x145>
    723a:	48 81 c4 90 00 00 00 	add    rsp,0x90
    7241:	5d                   	pop    rbp
    7242:	c3                   	ret
    7243:	f3 0f 1e fa          	endbr64
    7247:	48 89 c1             	mov    rcx,rax
    724a:	89 d0                	mov    eax,edx
    724c:	48 89 4d 90          	mov    QWORD PTR [rbp-0x70],rcx
    7250:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    7253:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    7257:	e8 94 00 00 00       	call   72f0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>
    725c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    7260:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    7267:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    726e:	00 00 
    7270:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7274:	48 39 c8             	cmp    rax,rcx
    7277:	75 0c                	jne    7285 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x145>
    7279:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    7280:	e8 fb d1 ff ff       	call   4480 <_Unwind_Resume@plt>
    7285:	e8 46 d3 ff ff       	call   45d0 <__stack_chk_fail@plt>
    728a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007290 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_>:
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    7290:	f3 0f 1e fa          	endbr64
    7294:	55                   	push   rbp
    7295:	48 89 e5             	mov    rbp,rsp
    7298:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    729c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    72a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72a4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    72a8:	48 89 08             	mov    QWORD PTR [rax],rcx
    72ab:	5d                   	pop    rbp
    72ac:	c3                   	ret
    72ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000072b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      { _S_copy(__p, __k1, __k2 - __k1); }
    72b0:	f3 0f 1e fa          	endbr64
    72b4:	55                   	push   rbp
    72b5:	48 89 e5             	mov    rbp,rsp
    72b8:	48 83 ec 20          	sub    rsp,0x20
    72bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    72c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    72c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    72c8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    72cc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    72d0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    72d4:	48 29 f2             	sub    rdx,rsi
    72d7:	e8 84 fb ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    72dc:	eb 00                	jmp    72de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x2e>
    72de:	48 83 c4 20          	add    rsp,0x20
    72e2:	5d                   	pop    rbp
    72e3:	c3                   	ret
    72e4:	f3 0f 1e fa          	endbr64
    72e8:	48 89 c7             	mov    rdi,rax
    72eb:	e8 f0 f5 ff ff       	call   68e0 <__clang_call_terminate>

00000000000072f0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>:
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    72f0:	f3 0f 1e fa          	endbr64
    72f4:	55                   	push   rbp
    72f5:	48 89 e5             	mov    rbp,rsp
    72f8:	48 83 ec 10          	sub    rsp,0x10
    72fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7300:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7304:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7308:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    730c:	74 10                	je     731e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    730e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7312:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    7315:	e8 26 fc ff ff       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    731a:	eb 00                	jmp    731c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2c>
    731c:	eb 00                	jmp    731e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    731e:	48 83 c4 10          	add    rsp,0x10
    7322:	5d                   	pop    rbp
    7323:	c3                   	ret
    7324:	f3 0f 1e fa          	endbr64
    7328:	48 89 c7             	mov    rdi,rax
    732b:	e8 b0 f5 ff ff       	call   68e0 <__clang_call_terminate>

0000000000007330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      { return _M_string_length; }
    7330:	f3 0f 1e fa          	endbr64
    7334:	55                   	push   rbp
    7335:	48 89 e5             	mov    rbp,rsp
    7338:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    733c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7340:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7344:	5d                   	pop    rbp
    7345:	c3                   	ret
    7346:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    734d:	00 00 00 

0000000000007350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>:
      { _M_set_length(0); }
    7350:	f3 0f 1e fa          	endbr64
    7354:	55                   	push   rbp
    7355:	48 89 e5             	mov    rbp,rsp
    7358:	48 83 ec 10          	sub    rsp,0x10
    735c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7360:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7364:	31 c0                	xor    eax,eax
    7366:	89 c6                	mov    esi,eax
    7368:	e8 23 f9 ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    736d:	eb 00                	jmp    736f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv+0x1f>
    736f:	48 83 c4 10          	add    rsp,0x10
    7373:	5d                   	pop    rbp
    7374:	c3                   	ret
    7375:	f3 0f 1e fa          	endbr64
    7379:	48 89 c7             	mov    rdi,rax
    737c:	e8 5f f5 ff ff       	call   68e0 <__clang_call_terminate>
    7381:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7388:	00 00 00 
    738b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007390 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>:
      _Vector_base() = default;
    7390:	f3 0f 1e fa          	endbr64
    7394:	55                   	push   rbp
    7395:	48 89 e5             	mov    rbp,rsp
    7398:	48 83 ec 10          	sub    rsp,0x10
    739c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    73a0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    73a4:	e8 07 00 00 00       	call   73b0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2EvQ26is_default_constructible_vIN9__gnu_cxx14__alloc_traitsIT0_NSB_10value_typeEE6rebindIT_E5otherEE>
    73a9:	48 83 c4 10          	add    rsp,0x10
    73ad:	5d                   	pop    rbp
    73ae:	c3                   	ret
    73af:	90                   	nop

00000000000073b0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2EvQ26is_default_constructible_vIN9__gnu_cxx14__alloc_traitsIT0_NSB_10value_typeEE6rebindIT_E5otherEE>:
	{ }
    73b0:	f3 0f 1e fa          	endbr64
    73b4:	55                   	push   rbp
    73b5:	48 89 e5             	mov    rbp,rsp
    73b8:	48 83 ec 20          	sub    rsp,0x20
    73bc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    73c0:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    73c4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    73c8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    73cc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    73d0:	e8 eb 18 00 00       	call   8cc0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
	{ }
    73d5:	48 83 c4 20          	add    rsp,0x20
    73d9:	5d                   	pop    rbp
    73da:	c3                   	ret
    73db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000073e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_>:
  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    _M_realloc_append(const _Tp& __x)
#endif
    {
    73e0:	f3 0f 1e fa          	endbr64
    73e4:	55                   	push   rbp
    73e5:	48 89 e5             	mov    rbp,rsp
    73e8:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    73ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73f6:	00 00 
    73f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73fc:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    7400:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    7404:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    7408:	48 89 bd 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdi
      const size_type __len = _M_check_len(1u, "vector::_M_realloc_append");
    740f:	be 01 00 00 00       	mov    esi,0x1
    7414:	48 8d 15 59 9d 00 00 	lea    rdx,[rip+0x9d59]        # 11174 <_IO_stdin_used+0x174>
    741b:	e8 90 02 00 00       	call   76b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>
    7420:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      if (__len <= 0)
    7424:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    7429:	77 00                	ja     742b <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x4b>
    742b:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
	__builtin_unreachable ();
      pointer __old_start = this->_M_impl._M_start;
    7432:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    7435:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      pointer __old_finish = this->_M_impl._M_finish;
    7439:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    743d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
      const size_type __elems = end() - begin();
    7441:	e8 ea 03 00 00       	call   7830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    7446:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    744d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7451:	e8 3a 04 00 00       	call   7890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    7456:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    745a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    745e:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    7462:	e8 79 03 00 00       	call   77e0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>
    7467:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    746e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      pointer __new_start(this->_M_allocate(__len));
    7472:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    7476:	e8 75 04 00 00       	call   78f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    747b:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    7482:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      pointer __new_finish(__new_start);
    7486:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    748a:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
      private:
	_Guard(const _Guard&);
      };

      {
	_Guard __guard(__new_start, __len, _M_impl);
    7491:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    7495:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    7499:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    749d:	e8 be 04 00 00       	call   7960 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>
	// [res.on.arguments]).

	// If this throws, the existing elements are unchanged.
#if __cplusplus >= 201103L
	_Alloc_traits::construct(this->_M_impl,
				 std::__to_address(__new_start + __elems),
    74a2:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    74a6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    74aa:	48 c1 e0 05          	shl    rax,0x5
    74ae:	48 01 c7             	add    rdi,rax
    74b1:	e8 ea 04 00 00       	call   79a0 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>
    74b6:	48 8b 95 60 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa0]
    74bd:	48 89 c1             	mov    rcx,rax
				 std::forward<_Args>(__args)...);
    74c0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    74c4:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    74c8:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    74cc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    74d0:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    74d4:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    74d8:	e8 a3 01 00 00       	call   7680 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>
    74dd:	eb 00                	jmp    74df <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0xff>
	}
    74df:	eb 00                	jmp    74e1 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x101>
    74e1:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]

#if __cplusplus >= 201103L
	if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	  {
	    // Relocation cannot throw.
	    __new_finish = _S_relocate(__old_start, __old_finish,
    74e8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    74ec:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    74f3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    74f7:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
				       __new_start, _M_get_Tp_allocator());
    74fe:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    7502:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    7509:	e8 f2 04 00 00       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    750e:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    7515:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
    751c:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    7523:	48 89 c1             	mov    rcx,rax
	    __new_finish = _S_relocate(__old_start, __old_finish,
    7526:	e8 95 04 00 00       	call   79c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>
    752b:	48 89 c1             	mov    rcx,rax
    752e:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    7535:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	    ++__new_finish;
    753c:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    7543:	48 83 c1 20          	add    rcx,0x20
    7547:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx

	    // New storage has been fully initialized, destroy the old elements.
	    __guard_elts._M_first = __old_start;
	    __guard_elts._M_last = __old_finish;
	  }
	__guard._M_storage = __old_start;
    754e:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    7552:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	__guard._M_len = this->_M_impl._M_end_of_storage - __old_start;
    7556:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    755a:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    755e:	48 29 c8             	sub    rax,rcx
    7561:	48 c1 f8 05          	sar    rax,0x5
    7565:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7569:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
      }
    756d:	e8 ae 04 00 00       	call   7a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>
    7572:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
      // deallocate should be called before assignments to _M_impl,
      // to avoid call-clobbering

      this->_M_impl._M_start = __new_start;
    7579:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    757d:	48 89 08             	mov    QWORD PTR [rax],rcx
      this->_M_impl._M_finish = __new_finish;
    7580:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    7587:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      this->_M_impl._M_end_of_storage = __new_start + __len;
    758b:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    758f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    7593:	48 c1 e2 05          	shl    rdx,0x5
    7597:	48 01 d1             	add    rcx,rdx
    759a:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    }
    759e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75a5:	00 00 
    75a7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    75ab:	48 39 c8             	cmp    rax,rcx
    75ae:	75 54                	jne    7604 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x224>
    75b0:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    75b7:	5d                   	pop    rbp
    75b8:	c3                   	ret
    75b9:	f3 0f 1e fa          	endbr64
    75bd:	48 89 c1             	mov    rcx,rax
    75c0:	89 d0                	mov    eax,edx
    75c2:	48 89 8d 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rcx
    75c9:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
      }
    75cf:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    75d3:	e8 48 04 00 00       	call   7a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>
    75d8:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    75df:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    75e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75ed:	00 00 
    75ef:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    75f3:	48 39 c8             	cmp    rax,rcx
    75f6:	75 0c                	jne    7604 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x224>
    75f8:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    75ff:	e8 7c ce ff ff       	call   4480 <_Unwind_Resume@plt>
    7604:	e8 c7 cf ff ff       	call   45d0 <__stack_chk_fail@plt>
    7609:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000007610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>:
       *  element of the %vector.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      reference
      back() _GLIBCXX_NOEXCEPT
      {
    7610:	f3 0f 1e fa          	endbr64
    7614:	55                   	push   rbp
    7615:	48 89 e5             	mov    rbp,rsp
    7618:	48 83 ec 30          	sub    rsp,0x30
    761c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7623:	00 00 
    7625:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7629:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    762d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	__glibcxx_requires_nonempty();
	return *(end() - 1);
    7631:	e8 fa 01 00 00       	call   7830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    7636:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    763a:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    763e:	be 01 00 00 00       	mov    esi,0x1
    7643:	e8 48 09 00 00       	call   7f90 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl>
    7648:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    764c:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7650:	e8 ab 09 00 00       	call   8000 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    7655:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7659:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7660:	00 00 
    7662:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7666:	48 39 c8             	cmp    rax,rcx
    7669:	75 0a                	jne    7675 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv+0x65>
    766b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    766f:	48 83 c4 30          	add    rsp,0x30
    7673:	5d                   	pop    rbp
    7674:	c3                   	ret
    7675:	e8 56 cf ff ff       	call   45d0 <__stack_chk_fail@plt>
    767a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007680 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>:
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    7680:	f3 0f 1e fa          	endbr64
    7684:	55                   	push   rbp
    7685:	48 89 e5             	mov    rbp,rsp
    7688:	48 83 ec 20          	sub    rsp,0x20
    768c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7690:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7694:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7698:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    769c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    76a0:	e8 6b e8 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    76a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    76a9:	48 83 c4 20          	add    rsp,0x20
    76ad:	5d                   	pop    rbp
    76ae:	c3                   	ret
    76af:	90                   	nop

00000000000076b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>:

      // Called by _M_fill_insert, _M_insert_aux etc.
      _GLIBCXX20_CONSTEXPR
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
    76b0:	f3 0f 1e fa          	endbr64
    76b4:	55                   	push   rbp
    76b5:	48 89 e5             	mov    rbp,rsp
    76b8:	48 83 ec 70          	sub    rsp,0x70
    76bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    76c3:	00 00 
    76c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    76c9:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    76cd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    76d1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    76d5:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    76d9:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
	if (max_size() - size() < __n)
    76dd:	e8 ae 03 00 00       	call   7a90 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    76e2:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    76e6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    76ea:	e8 91 e7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    76ef:	48 89 c1             	mov    rcx,rax
    76f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    76f6:	48 29 c8             	sub    rax,rcx
    76f9:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    76fd:	73 27                	jae    7726 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x76>
	  __throw_length_error(__N(__s));
    76ff:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7703:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7707:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    770e:	00 00 
    7710:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7714:	48 39 c8             	cmp    rax,rcx
    7717:	0f 85 b3 00 00 00    	jne    77d0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x120>
    771d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    7721:	e8 ea cd ff ff       	call   4510 <_ZSt20__throw_length_errorPKc@plt>
    7726:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]

	const size_type __len = size() + (std::max)(size(), __n);
    772a:	e8 51 e7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    772f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7733:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7737:	e8 44 e7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    773c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7740:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    7744:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    7748:	e8 73 03 00 00       	call   7ac0 <_ZSt3maxImERKT_S2_S2_>
    774d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7751:	48 89 c1             	mov    rcx,rax
    7754:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7758:	48 03 01             	add    rax,QWORD PTR [rcx]
    775b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    775f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7763:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7767:	e8 14 e7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    776c:	48 89 c1             	mov    rcx,rax
    776f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    7773:	48 39 c8             	cmp    rax,rcx
    7776:	72 1d                	jb     7795 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xe5>
    7778:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    777c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7780:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    7784:	e8 07 03 00 00       	call   7a90 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    7789:	48 89 c1             	mov    rcx,rax
    778c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    7790:	48 39 c8             	cmp    rax,rcx
    7793:	76 0f                	jbe    77a4 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xf4>
    7795:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7799:	e8 f2 02 00 00       	call   7a90 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    779e:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    77a2:	eb 08                	jmp    77ac <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xfc>
    77a4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    77a8:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    77ac:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    77b0:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    77b4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    77bb:	00 00 
    77bd:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    77c1:	48 39 c8             	cmp    rax,rcx
    77c4:	75 0a                	jne    77d0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x120>
    77c6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    77ca:	48 83 c4 70          	add    rsp,0x70
    77ce:	5d                   	pop    rbp
    77cf:	c3                   	ret
    77d0:	e8 fb cd ff ff       	call   45d0 <__stack_chk_fail@plt>
    77d5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    77dc:	00 00 00 
    77df:	90                   	nop

00000000000077e0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>:
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    77e0:	f3 0f 1e fa          	endbr64
    77e4:	55                   	push   rbp
    77e5:	48 89 e5             	mov    rbp,rsp
    77e8:	48 83 ec 20          	sub    rsp,0x20
    77ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    77f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    77f4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    77f8:	e8 f3 03 00 00       	call   7bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    77fd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7800:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7804:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7808:	e8 e3 03 00 00       	call   7bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    780d:	48 89 c1             	mov    rcx,rax
    7810:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7814:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    7817:	48 29 c8             	sub    rax,rcx
    781a:	48 c1 f8 05          	sar    rax,0x5
    781e:	48 83 c4 20          	add    rsp,0x20
    7822:	5d                   	pop    rbp
    7823:	c3                   	ret
    7824:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    782b:	00 00 00 
    782e:	66 90                	xchg   ax,ax

0000000000007830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      { return iterator(this->_M_impl._M_finish); }
    7830:	f3 0f 1e fa          	endbr64
    7834:	55                   	push   rbp
    7835:	48 89 e5             	mov    rbp,rsp
    7838:	48 83 ec 20          	sub    rsp,0x20
    783c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7843:	00 00 
    7845:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7849:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    784d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7851:	48 83 c6 08          	add    rsi,0x8
    7855:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7859:	e8 b2 03 00 00       	call   7c10 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    785e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7862:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    7866:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    786d:	00 00 
    786f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7873:	48 39 c8             	cmp    rax,rcx
    7876:	75 0a                	jne    7882 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv+0x52>
    7878:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    787c:	48 83 c4 20          	add    rsp,0x20
    7880:	5d                   	pop    rbp
    7881:	c3                   	ret
    7882:	e8 49 cd ff ff       	call   45d0 <__stack_chk_fail@plt>
    7887:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    788e:	00 00 

0000000000007890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      { return iterator(this->_M_impl._M_start); }
    7890:	f3 0f 1e fa          	endbr64
    7894:	55                   	push   rbp
    7895:	48 89 e5             	mov    rbp,rsp
    7898:	48 83 ec 20          	sub    rsp,0x20
    789c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    78a3:	00 00 
    78a5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    78a9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    78ad:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    78b1:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    78b5:	e8 56 03 00 00       	call   7c10 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    78ba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    78be:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    78c2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    78c9:	00 00 
    78cb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    78cf:	48 39 c8             	cmp    rax,rcx
    78d2:	75 0a                	jne    78de <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv+0x4e>
    78d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    78d8:	48 83 c4 20          	add    rsp,0x20
    78dc:	5d                   	pop    rbp
    78dd:	c3                   	ret
    78de:	e8 ed cc ff ff       	call   45d0 <__stack_chk_fail@plt>
    78e3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    78ea:	00 00 00 
    78ed:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000078f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
      {
    78f0:	f3 0f 1e fa          	endbr64
    78f4:	55                   	push   rbp
    78f5:	48 89 e5             	mov    rbp,rsp
    78f8:	48 83 ec 40          	sub    rsp,0x40
    78fc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7900:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    7904:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7908:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    790c:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    7911:	74 37                	je     794a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x5a>
    7913:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    7917:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    791b:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    791f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      { return __a.allocate(__n); }
    7923:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7927:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    792b:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    792f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7933:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return __allocator_base<_Tp>::allocate(__n, 0);
    7937:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    793b:	31 c0                	xor    eax,eax
    793d:	89 c2                	mov    edx,eax
    793f:	e8 ec 02 00 00       	call   7c30 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>
    7944:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    7948:	eb 08                	jmp    7952 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x62>
    794a:	31 c0                	xor    eax,eax
    794c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    7950:	eb 00                	jmp    7952 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x62>
    7952:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    7956:	48 83 c4 40          	add    rsp,0x40
    795a:	5d                   	pop    rbp
    795b:	c3                   	ret
    795c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007960 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>:
	{ }
    7960:	f3 0f 1e fa          	endbr64
    7964:	55                   	push   rbp
    7965:	48 89 e5             	mov    rbp,rsp
    7968:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    796c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7970:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7974:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7978:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_storage(__s), _M_len(__l), _M_alloc(__a)
    797c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7980:	48 89 08             	mov    QWORD PTR [rax],rcx
    7983:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7987:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    798b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    798f:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	{ }
    7993:	5d                   	pop    rbp
    7994:	c3                   	ret
    7995:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    799c:	00 00 00 
    799f:	90                   	nop

00000000000079a0 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>:
    using __ptr_rebind = typename pointer_traits<_Ptr>::template rebind<_Tp>;

  template<typename _Tp>
    constexpr _Tp*
    __to_address(_Tp* __ptr) noexcept
    {
    79a0:	f3 0f 1e fa          	endbr64
    79a4:	55                   	push   rbp
    79a5:	48 89 e5             	mov    rbp,rsp
    79a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      static_assert(!std::is_function<_Tp>::value, "not a function pointer");
      return __ptr;
    79ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79b0:	5d                   	pop    rbp
    79b1:	c3                   	ret
    79b2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    79b9:	00 00 00 
    79bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000079c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>:
      {
    79c0:	f3 0f 1e fa          	endbr64
    79c4:	55                   	push   rbp
    79c5:	48 89 e5             	mov    rbp,rsp
    79c8:	48 83 ec 20          	sub    rsp,0x20
    79cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79d0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    79d4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    79d8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
	return std::__relocate_a(__first, __last, __result, __alloc);
    79dc:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    79e0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    79e4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    79e8:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    79ec:	e8 9f 02 00 00       	call   7c90 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>
    79f1:	48 83 c4 20          	add    rsp,0x20
    79f5:	5d                   	pop    rbp
    79f6:	c3                   	ret
    79f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    79fe:	00 00 

0000000000007a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      { return this->_M_impl; }
    7a00:	f3 0f 1e fa          	endbr64
    7a04:	55                   	push   rbp
    7a05:	48 89 e5             	mov    rbp,rsp
    7a08:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a10:	5d                   	pop    rbp
    7a11:	c3                   	ret
    7a12:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7a19:	00 00 00 
    7a1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>:
	{
    7a20:	f3 0f 1e fa          	endbr64
    7a24:	55                   	push   rbp
    7a25:	48 89 e5             	mov    rbp,rsp
    7a28:	48 83 ec 40          	sub    rsp,0x40
    7a2c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    7a30:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7a34:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (_M_storage)
    7a38:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    7a3c:	74 48                	je     7a86 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
    7a3e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
	      deallocate(_M_alloc, _M_storage, _M_len);
    7a42:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    7a46:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    7a49:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a4d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7a51:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    7a55:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    7a59:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7a5d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7a61:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7a65:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    7a69:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    7a6d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7a71:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	__allocator_base<_Tp>::deallocate(__p, __n);
    7a75:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7a79:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7a7d:	e8 de 04 00 00       	call   7f60 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    7a82:	eb 00                	jmp    7a84 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x64>
	    __gnu_cxx::__alloc_traits<_Tp_alloc_type>::
    7a84:	eb 00                	jmp    7a86 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
	}
    7a86:	48 83 c4 40          	add    rsp,0x40
    7a8a:	5d                   	pop    rbp
    7a8b:	c3                   	ret
    7a8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007a90 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>:
      { return _S_max_size(_M_get_Tp_allocator()); }
    7a90:	f3 0f 1e fa          	endbr64
    7a94:	55                   	push   rbp
    7a95:	48 89 e5             	mov    rbp,rsp
    7a98:	48 83 ec 10          	sub    rsp,0x10
    7a9c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7aa0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7aa4:	e8 e7 00 00 00       	call   7b90 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    7aa9:	48 89 c7             	mov    rdi,rax
    7aac:	e8 4f 00 00 00       	call   7b00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>
    7ab1:	48 83 c4 10          	add    rsp,0x10
    7ab5:	5d                   	pop    rbp
    7ab6:	c3                   	ret
    7ab7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    7abe:	00 00 

0000000000007ac0 <_ZSt3maxImERKT_S2_S2_>:
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    {
    7ac0:	f3 0f 1e fa          	endbr64
    7ac4:	55                   	push   rbp
    7ac5:	48 89 e5             	mov    rbp,rsp
    7ac8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7acc:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    7ad0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7ad4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7ad7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7adb:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    7ade:	73 0a                	jae    7aea <_ZSt3maxImERKT_S2_S2_+0x2a>
	return __b;
    7ae0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ae4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ae8:	eb 08                	jmp    7af2 <_ZSt3maxImERKT_S2_S2_+0x32>
      return __a;
    7aea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7aee:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    }
    7af2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7af6:	5d                   	pop    rbp
    7af7:	c3                   	ret
    7af8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7aff:	00 

0000000000007b00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>:
	return __n;
      }

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
      {
    7b00:	f3 0f 1e fa          	endbr64
    7b04:	55                   	push   rbp
    7b05:	48 89 e5             	mov    rbp,rsp
    7b08:	48 83 ec 40          	sub    rsp,0x40
    7b0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7b13:	00 00 
    7b15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b19:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7b1d:	48 b8 ff ff ff ff ff 	movabs rax,0x3ffffffffffffff
    7b24:	ff ff 03 
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    7b27:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7b2b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7b2f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    7b33:	48 b8 ff ff ff ff ff 	movabs rax,0x7ffffffffffffff
    7b3a:	ff ff 07 
    7b3d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7b41:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7b45:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
	return (std::min)(__diffmax, __allocmax);
    7b49:	e8 62 00 00 00       	call   7bb0 <_ZSt3minImERKT_S2_S2_>
    7b4e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7b52:	eb 00                	jmp    7b54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_+0x54>
    7b54:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7b58:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b5b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7b5f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7b66:	00 00 
    7b68:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7b6c:	48 39 c8             	cmp    rax,rcx
    7b6f:	75 16                	jne    7b87 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_+0x87>
    7b71:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7b75:	48 83 c4 40          	add    rsp,0x40
    7b79:	5d                   	pop    rbp
    7b7a:	c3                   	ret
    7b7b:	f3 0f 1e fa          	endbr64
    7b7f:	48 89 c7             	mov    rdi,rax
    7b82:	e8 59 ed ff ff       	call   68e0 <__clang_call_terminate>
    7b87:	e8 44 ca ff ff       	call   45d0 <__stack_chk_fail@plt>
    7b8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007b90 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      { return this->_M_impl; }
    7b90:	f3 0f 1e fa          	endbr64
    7b94:	55                   	push   rbp
    7b95:	48 89 e5             	mov    rbp,rsp
    7b98:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ba0:	5d                   	pop    rbp
    7ba1:	c3                   	ret
    7ba2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7ba9:	00 00 00 
    7bac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007bb0 <_ZSt3minImERKT_S2_S2_>:
    {
    7bb0:	f3 0f 1e fa          	endbr64
    7bb4:	55                   	push   rbp
    7bb5:	48 89 e5             	mov    rbp,rsp
    7bb8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7bbc:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
      if (__b < __a)
    7bc0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bc4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7bc7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7bcb:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    7bce:	73 0a                	jae    7bda <_ZSt3minImERKT_S2_S2_+0x2a>
	return __b;
    7bd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bd4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7bd8:	eb 08                	jmp    7be2 <_ZSt3minImERKT_S2_S2_+0x32>
      return __a;
    7bda:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7bde:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    }
    7be2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be6:	5d                   	pop    rbp
    7be7:	c3                   	ret
    7be8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7bef:	00 

0000000000007bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      { return _M_current; }
    7bf0:	f3 0f 1e fa          	endbr64
    7bf4:	55                   	push   rbp
    7bf5:	48 89 e5             	mov    rbp,rsp
    7bf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bfc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c00:	5d                   	pop    rbp
    7c01:	c3                   	ret
    7c02:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7c09:	00 00 00 
    7c0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007c10 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>:
      : _M_current(__i) { }
    7c10:	f3 0f 1e fa          	endbr64
    7c14:	55                   	push   rbp
    7c15:	48 89 e5             	mov    rbp,rsp
    7c18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7c20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7c28:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    7c2b:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c2e:	5d                   	pop    rbp
    7c2f:	c3                   	ret

0000000000007c30 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>:
      {
    7c30:	f3 0f 1e fa          	endbr64
    7c34:	55                   	push   rbp
    7c35:	48 89 e5             	mov    rbp,rsp
    7c38:	48 83 ec 20          	sub    rsp,0x20
    7c3c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7c40:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    7c44:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7c48:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7c4c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c50:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    7c54:	48 b9 ff ff ff ff ff 	movabs rcx,0x3ffffffffffffff
    7c5b:	ff ff 03 
    7c5e:	48 39 c8             	cmp    rax,rcx
    7c61:	76 1a                	jbe    7c7d <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7c63:	48 b8 ff ff ff ff ff 	movabs rax,0x7ffffffffffffff
    7c6a:	ff ff 07 
    7c6d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    7c71:	76 05                	jbe    7c78 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    7c73:	e8 d8 c8 ff ff       	call   4550 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7c78:	e8 33 c8 ff ff       	call   44b0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7c7d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    7c81:	48 c1 e7 05          	shl    rdi,0x5
    7c85:	e8 06 c9 ff ff       	call   4590 <_Znwm@plt>
    7c8a:	48 83 c4 20          	add    rsp,0x20
    7c8e:	5d                   	pop    rbp
    7c8f:	c3                   	ret

0000000000007c90 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
    7c90:	f3 0f 1e fa          	endbr64
    7c94:	55                   	push   rbp
    7c95:	48 89 e5             	mov    rbp,rsp
    7c98:	48 83 ec 30          	sub    rsp,0x30
    7c9c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ca0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ca4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7ca8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      return std::__relocate_a_1(std::__niter_base(__first),
    7cac:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7cb0:	e8 ab 00 00 00       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7cb5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
				 std::__niter_base(__last),
    7cb9:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7cbd:	e8 9e 00 00 00       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7cc2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
				 std::__niter_base(__result), __alloc);
    7cc6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    7cca:	e8 91 00 00 00       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7ccf:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    7cd3:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    7cd7:	48 89 c2             	mov    rdx,rax
    7cda:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
      return std::__relocate_a_1(std::__niter_base(__first),
    7cde:	e8 0d 00 00 00       	call   7cf0 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>
    7ce3:	48 83 c4 30          	add    rsp,0x30
    7ce7:	5d                   	pop    rbp
    7ce8:	c3                   	ret
    7ce9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000007cf0 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>:
    {
    7cf0:	f3 0f 1e fa          	endbr64
    7cf4:	55                   	push   rbp
    7cf5:	48 89 e5             	mov    rbp,rsp
    7cf8:	48 83 ec 30          	sub    rsp,0x30
    7cfc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7d04:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7d08:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      _ForwardIterator __cur = __result;
    7d0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d10:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      for (; __first != __last; ++__first, (void)++__cur)
    7d14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d18:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    7d1c:	74 2b                	je     7d49 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_+0x59>
	std::__relocate_object_a(std::__addressof(*__cur),
    7d1e:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
				 std::__addressof(*__first), __alloc);
    7d22:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7d26:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
	std::__relocate_object_a(std::__addressof(*__cur),
    7d2a:	e8 51 00 00 00       	call   7d80 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    7d2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d33:	48 83 c0 20          	add    rax,0x20
    7d37:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7d3b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7d3f:	48 83 c0 20          	add    rax,0x20
    7d43:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7d47:	eb cb                	jmp    7d14 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_+0x24>
      return __cur;
    7d49:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7d4d:	48 83 c4 30          	add    rsp,0x30
    7d51:	5d                   	pop    rbp
    7d52:	c3                   	ret
    7d53:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7d5a:	00 00 00 
    7d5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    7d60:	f3 0f 1e fa          	endbr64
    7d64:	55                   	push   rbp
    7d65:	48 89 e5             	mov    rbp,rsp
    7d68:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d70:	5d                   	pop    rbp
    7d71:	c3                   	ret
    7d72:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7d79:	00 00 00 
    7d7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007d80 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_>:
    {
    7d80:	f3 0f 1e fa          	endbr64
    7d84:	55                   	push   rbp
    7d85:	48 89 e5             	mov    rbp,rsp
    7d88:	48 83 ec 40          	sub    rsp,0x40
    7d8c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    7d90:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    7d94:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
      __traits::construct(__alloc, __dest, std::move(*__orig));
    7d98:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    7d9c:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    7da0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7da4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7da8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7dac:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    7db0:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    7db4:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    7db8:	e8 33 00 00 00       	call   7df0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS7_DpOS8_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    7dbd:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    7dc1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7dc5:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    7dc9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  std::destroy_at(__p);
    7dcd:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7dd1:	e8 6a 01 00 00       	call   7f40 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
    7dd6:	eb 0c                	jmp    7de4 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_+0x64>
    7dd8:	f3 0f 1e fa          	endbr64
    7ddc:	48 89 c7             	mov    rdi,rax
    7ddf:	e8 fc ea ff ff       	call   68e0 <__clang_call_terminate>
    }
    7de4:	48 83 c4 40          	add    rsp,0x40
    7de8:	5d                   	pop    rbp
    7de9:	c3                   	ret
    7dea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007df0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS7_DpOS8_>:
    7df0:	f3 0f 1e fa          	endbr64
    7df4:	55                   	push   rbp
    7df5:	48 89 e5             	mov    rbp,rsp
    7df8:	48 83 ec 20          	sub    rsp,0x20
    7dfc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e04:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7e08:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e0c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7e10:	e8 0b 00 00 00       	call   7e20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>
    7e15:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e19:	48 83 c4 20          	add    rsp,0x20
    7e1d:	5d                   	pop    rbp
    7e1e:	c3                   	ret
    7e1f:	90                   	nop

0000000000007e20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>:
      {
    7e20:	f3 0f 1e fa          	endbr64
    7e24:	55                   	push   rbp
    7e25:	48 89 e5             	mov    rbp,rsp
    7e28:	48 83 ec 60          	sub    rsp,0x60
    7e2c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    7e30:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    7e34:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    7e38:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    7e3c:	e8 bf ea ff ff       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    7e41:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7e45:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e49:	e8 92 ef ff ff       	call   6de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    7e4e:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7e52:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    7e56:	48 89 c2             	mov    rdx,rax
    7e59:	e8 f2 ea ff ff       	call   6950 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    7e5e:	eb 00                	jmp    7e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x40>
	if (__str._M_is_local())
    7e60:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e64:	e8 17 f1 ff ff       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    7e69:	88 45 c7             	mov    BYTE PTR [rbp-0x39],al
    7e6c:	eb 00                	jmp    7e6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x4e>
    7e6e:	8a 45 c7             	mov    al,BYTE PTR [rbp-0x39]
    7e71:	a8 01                	test   al,0x1
    7e73:	75 02                	jne    7e77 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x57>
    7e75:	eb 3b                	jmp    7eb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x92>
    7e77:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7e7b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    7e7f:	48 83 c0 10          	add    rax,0x10
    7e83:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7e87:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7e8b:	48 83 c0 10          	add    rax,0x10
    7e8f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
			      __str.length() + 1);
    7e93:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e97:	e8 e4 e1 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    7e9c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    7ea0:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    7ea4:	48 89 c2             	mov    rdx,rax
    7ea7:	48 83 c2 01          	add    rdx,0x1
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    7eab:	e8 20 f0 ff ff       	call   6ed0 <_ZNSt11char_traitsIcE4copyEPcPKcm>
	  }
    7eb0:	eb 26                	jmp    7ed8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0xb8>
	    _M_data(__str._M_data());
    7eb2:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7eb6:	e8 05 ea ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    7ebb:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7ebf:	48 89 c6             	mov    rsi,rax
    7ec2:	e8 59 ec ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    7ec7:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	    _M_capacity(__str._M_allocated_capacity);
    7ecb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7ecf:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    7ed3:	e8 38 ed ff ff       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    7ed8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7edc:	e8 9f e1 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    7ee1:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7ee5:	48 89 c6             	mov    rsi,rax
    7ee8:	e8 33 f0 ff ff       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_use_local_data());
    7eed:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7ef1:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7ef5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7ef9:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7efd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return _M_local_data();
    7f01:	e8 fa e9 ff ff       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    7f06:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    7f0a:	48 89 c6             	mov    rsi,rax
	__str._M_data(__str._M_use_local_data());
    7f0d:	e8 0e ec ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    7f12:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7f16:	31 c0                	xor    eax,eax
    7f18:	89 c6                	mov    esi,eax
    7f1a:	e8 71 ed ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    7f1f:	eb 00                	jmp    7f21 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x101>
      }
    7f21:	48 83 c4 60          	add    rsp,0x60
    7f25:	5d                   	pop    rbp
    7f26:	c3                   	ret
    7f27:	f3 0f 1e fa          	endbr64
    7f2b:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    7f2e:	e8 ad e9 ff ff       	call   68e0 <__clang_call_terminate>
    7f33:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7f3a:	00 00 00 
    7f3d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007f40 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    {
    7f40:	f3 0f 1e fa          	endbr64
    7f44:	55                   	push   rbp
    7f45:	48 89 e5             	mov    rbp,rsp
    7f48:	48 83 ec 10          	sub    rsp,0x10
    7f4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	__location->~_Tp();
    7f50:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7f54:	e8 f7 e1 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    }
    7f59:	48 83 c4 10          	add    rsp,0x10
    7f5d:	5d                   	pop    rbp
    7f5e:	c3                   	ret
    7f5f:	90                   	nop

0000000000007f60 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>:
      {
    7f60:	f3 0f 1e fa          	endbr64
    7f64:	55                   	push   rbp
    7f65:	48 89 e5             	mov    rbp,rsp
    7f68:	48 83 ec 20          	sub    rsp,0x20
    7f6c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7f70:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7f74:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7f78:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7f7c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7f80:	48 c1 e6 05          	shl    rsi,0x5
    7f84:	e8 17 c6 ff ff       	call   45a0 <_ZdlPvm@plt>
      }
    7f89:	48 83 c4 20          	add    rsp,0x20
    7f8d:	5d                   	pop    rbp
    7f8e:	c3                   	ret
    7f8f:	90                   	nop

0000000000007f90 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl>:
      { return __normal_iterator(_M_current - __n); }
    7f90:	f3 0f 1e fa          	endbr64
    7f94:	55                   	push   rbp
    7f95:	48 89 e5             	mov    rbp,rsp
    7f98:	48 83 ec 30          	sub    rsp,0x30
    7f9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7fa3:	00 00 
    7fa5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7fa9:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    7fad:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    7fb1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7fb5:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7fb8:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7fbc:	48 c1 e1 05          	shl    rcx,0x5
    7fc0:	48 29 c8             	sub    rax,rcx
    7fc3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7fc7:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7fcb:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    7fcf:	e8 3c fc ff ff       	call   7c10 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    7fd4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7fd8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7fdc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7fe3:	00 00 
    7fe5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7fe9:	48 39 c8             	cmp    rax,rcx
    7fec:	75 0a                	jne    7ff8 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl+0x68>
    7fee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7ff2:	48 83 c4 30          	add    rsp,0x30
    7ff6:	5d                   	pop    rbp
    7ff7:	c3                   	ret
    7ff8:	e8 d3 c5 ff ff       	call   45d0 <__stack_chk_fail@plt>
    7ffd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000008000 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      { return *_M_current; }
    8000:	f3 0f 1e fa          	endbr64
    8004:	55                   	push   rbp
    8005:	48 89 e5             	mov    rbp,rsp
    8008:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    800c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8010:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8013:	5d                   	pop    rbp
    8014:	c3                   	ret
    8015:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    801c:	00 00 00 
    801f:	90                   	nop

0000000000008020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
      {
    8020:	f3 0f 1e fa          	endbr64
    8024:	55                   	push   rbp
    8025:	48 89 e5             	mov    rbp,rsp
    8028:	48 83 ec 30          	sub    rsp,0x30
    802c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8030:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8034:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8038:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	return _M_replace(size_type(0), this->size(), __s,
    803c:	e8 ef f2 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8041:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8045:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8049:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
			  traits_type::length(__s));
    804d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8051:	e8 ca f0 ff ff       	call   7120 <_ZNSt11char_traitsIcE6lengthEPKc>
    8056:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    805a:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    805e:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8062:	49 89 c0             	mov    r8,rax
	return _M_replace(size_type(0), this->size(), __s,
    8065:	31 c0                	xor    eax,eax
    8067:	89 c6                	mov    esi,eax
    8069:	e8 12 00 00 00       	call   8080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    806e:	48 83 c4 30          	add    rsp,0x30
    8072:	5d                   	pop    rbp
    8073:	c3                   	ret
    8074:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    807b:	00 00 00 
    807e:	66 90                	xchg   ax,ax

0000000000008080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
    8080:	f3 0f 1e fa          	endbr64
    8084:	55                   	push   rbp
    8085:	48 89 e5             	mov    rbp,rsp
    8088:	48 83 ec 60          	sub    rsp,0x60
    808c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8090:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8094:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8098:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    809c:	4c 89 45 d8          	mov    QWORD PTR [rbp-0x28],r8
    80a0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    80a4:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    80a8:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    80ac:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    80b0:	48 8d 0d d7 90 00 00 	lea    rcx,[rip+0x90d7]        # 1118e <_IO_stdin_used+0x18e>
    80b7:	e8 14 01 00 00       	call   81d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    80bc:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]

      const size_type __old_size = this->size();
    80c0:	e8 6b f2 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    80c5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    80c9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      const size_type __new_size = __old_size + __len2 - __len1;
    80cd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    80d1:	48 03 45 d8          	add    rax,QWORD PTR [rbp-0x28]
    80d5:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    80d9:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax

      if (__new_size <= this->capacity())
    80dd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    80e1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    80e5:	e8 46 01 00 00       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    80ea:	48 89 c1             	mov    rcx,rax
    80ed:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    80f1:	48 39 c8             	cmp    rax,rcx
    80f4:	0f 87 97 00 00 00    	ja     8191 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x111>
    80fa:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	{
	  pointer __p = this->_M_data() + __pos;
    80fe:	e8 bd e7 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8103:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    8107:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    810b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax

	  const size_type __how_much = __old_size - __pos - __len1;
    810f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8113:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    8117:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    811b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	      _S_copy(this->_M_data(), __newp, __new_size);
	      this->_M_get_allocator().deallocate(__newp, __new_size);
	    }
	  else
#endif
	  if (__builtin_expect(_M_disjunct(__s), true))
    811f:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8123:	e8 68 01 00 00       	call   8290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    8128:	a8 01                	test   al,0x1
    812a:	75 02                	jne    812e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xae>
    812c:	eb 44                	jmp    8172 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xf2>
	    {
	      if (__how_much && __len1 != __len2)
    812e:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    8133:	74 23                	je     8158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xd8>
    8135:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8139:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
    813d:	74 19                	je     8158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xd8>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    813f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8143:	48 03 7d d8          	add    rdi,QWORD PTR [rbp-0x28]
    8147:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    814b:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    814f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    8153:	e8 e8 01 00 00       	call   8340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    8158:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    815d:	74 11                	je     8170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xf0>
		this->_S_copy(__p, __s, __len2);
    815f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8163:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8167:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    816b:	e8 f0 ec ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	    }
    8170:	eb 1d                	jmp    818f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x10f>
    8172:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	  else
	    _M_replace_cold(__p, __len1, __s, __len2, __how_much);
    8176:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    817a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    817e:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8182:	4c 8b 45 d8          	mov    r8,QWORD PTR [rbp-0x28]
    8186:	4c 8b 4d b8          	mov    r9,QWORD PTR [rbp-0x48]
    818a:	e8 21 c5 ff ff       	call   46b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@plt>
	}
    818f:	eb 19                	jmp    81aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x12a>
    8191:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    8195:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8199:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    819d:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    81a1:	4c 8b 45 d8          	mov    r8,QWORD PTR [rbp-0x28]
    81a5:	e8 e6 01 00 00       	call   8390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    81aa:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]

      this->_M_set_length(__new_size);
    81ae:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    81b2:	e8 d9 ea ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    81b7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
      return *this;
    81bb:	48 83 c4 60          	add    rsp,0x60
    81bf:	5d                   	pop    rbp
    81c0:	c3                   	ret
    81c1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    81c8:	00 00 00 
    81cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000081d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      {
    81d0:	f3 0f 1e fa          	endbr64
    81d4:	55                   	push   rbp
    81d5:	48 89 e5             	mov    rbp,rsp
    81d8:	48 83 ec 30          	sub    rsp,0x30
    81dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    81e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    81e4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    81e8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    81ec:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    81f0:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	if (this->max_size() - (this->size() - __n1) < __n2)
    81f4:	e8 47 eb ff ff       	call   6d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    81f9:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    81fd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8201:	e8 2a f1 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8206:	48 89 c1             	mov    rcx,rax
    8209:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    820d:	48 2b 4d f0          	sub    rcx,QWORD PTR [rbp-0x10]
    8211:	48 29 c8             	sub    rax,rcx
    8214:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    8218:	73 09                	jae    8223 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x53>
	  __throw_length_error(__N(__s));
    821a:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    821e:	e8 ed c2 ff ff       	call   4510 <_ZSt20__throw_length_errorPKc@plt>
      }
    8223:	48 83 c4 30          	add    rsp,0x30
    8227:	5d                   	pop    rbp
    8228:	c3                   	ret
    8229:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      {
    8230:	f3 0f 1e fa          	endbr64
    8234:	55                   	push   rbp
    8235:	48 89 e5             	mov    rbp,rsp
    8238:	48 83 ec 20          	sub    rsp,0x20
    823c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8240:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8244:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	return _M_is_local() ? size_type(_S_local_capacity)
    8248:	e8 33 ed ff ff       	call   6f80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    824d:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    8250:	eb 00                	jmp    8252 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x22>
    8252:	8a 45 f7             	mov    al,BYTE PTR [rbp-0x9]
    8255:	a8 01                	test   al,0x1
    8257:	75 02                	jne    825b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
    8259:	eb 0b                	jmp    8266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x36>
    825b:	b8 0f 00 00 00       	mov    eax,0xf
    8260:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8264:	eb 0c                	jmp    8272 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x42>
    8266:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	                     : _M_allocated_capacity;
    826a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    826e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8272:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return _M_is_local() ? size_type(_S_local_capacity)
    8276:	48 83 c4 20          	add    rsp,0x20
    827a:	5d                   	pop    rbp
    827b:	c3                   	ret
    827c:	f3 0f 1e fa          	endbr64
    8280:	48 89 c7             	mov    rdi,rax
    8283:	e8 58 e6 ff ff       	call   68e0 <__clang_call_terminate>
    8288:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    828f:	00 

0000000000008290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      {
    8290:	f3 0f 1e fa          	endbr64
    8294:	55                   	push   rbp
    8295:	48 89 e5             	mov    rbp,rsp
    8298:	48 83 ec 50          	sub    rsp,0x50
    829c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82a3:	00 00 
    82a5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82a9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    82ad:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    82b1:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    82b5:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	return (less<const _CharT*>()(__s, _M_data())
    82b9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    82bd:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    82c1:	e8 fa e5 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    82c6:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    82ca:	48 89 c2             	mov    rdx,rax
    82cd:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    82d1:	e8 fa 01 00 00       	call   84d0 <_ZNKSt4lessIPKcEclES1_S1_>
    82d6:	88 c1                	mov    cl,al
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    82d8:	b0 01                	mov    al,0x1
    82da:	f6 c1 01             	test   cl,0x1
    82dd:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    82e0:	75 2d                	jne    830f <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x7f>
    82e2:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    82e6:	e8 d5 e5 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    82eb:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    82ef:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    82f3:	e8 38 f0 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    82f8:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    82fc:	48 01 c6             	add    rsi,rax
    82ff:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8303:	48 8d 7d f6          	lea    rdi,[rbp-0xa]
    8307:	e8 c4 01 00 00       	call   84d0 <_ZNKSt4lessIPKcEclES1_S1_>
    830c:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    830f:	8a 45 df             	mov    al,BYTE PTR [rbp-0x21]
    8312:	88 45 bf             	mov    BYTE PTR [rbp-0x41],al
	return (less<const _CharT*>()(__s, _M_data())
    8315:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    831c:	00 00 
    831e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8322:	48 39 c8             	cmp    rax,rcx
    8325:	75 0b                	jne    8332 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0xa2>
    8327:	8a 45 bf             	mov    al,BYTE PTR [rbp-0x41]
    832a:	24 01                	and    al,0x1
    832c:	48 83 c4 50          	add    rsp,0x50
    8330:	5d                   	pop    rbp
    8331:	c3                   	ret
    8332:	e8 99 c2 ff ff       	call   45d0 <__stack_chk_fail@plt>
    8337:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    833e:	00 00 

0000000000008340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      {
    8340:	f3 0f 1e fa          	endbr64
    8344:	55                   	push   rbp
    8345:	48 89 e5             	mov    rbp,rsp
    8348:	48 83 ec 20          	sub    rsp,0x20
    834c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8350:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8354:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	if (__n == 1)
    8358:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    835d:	75 0f                	jne    836e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x2e>
	  traits_type::assign(*__d, *__s);
    835f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8363:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8367:	e8 44 eb ff ff       	call   6eb0 <_ZNSt11char_traitsIcE6assignERcRKc>
    836c:	eb 11                	jmp    837f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x3f>
	  traits_type::move(__d, __s, __n);
    836e:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8372:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8376:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    837a:	e8 81 01 00 00       	call   8500 <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    837f:	48 83 c4 20          	add    rsp,0x20
    8383:	5d                   	pop    rbp
    8384:	c3                   	ret
    8385:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    838c:	00 00 00 
    838f:	90                   	nop

0000000000008390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    {
    8390:	f3 0f 1e fa          	endbr64
    8394:	55                   	push   rbp
    8395:	48 89 e5             	mov    rbp,rsp
    8398:	48 83 ec 60          	sub    rsp,0x60
    839c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    83a3:	00 00 
    83a5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    83a9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    83ad:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    83b1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    83b5:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    83b9:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
    83bd:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    83c1:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
      const size_type __how_much = length() - __pos - __len1;
    83c5:	e8 b6 dc ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    83ca:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83ce:	48 2b 45 e0          	sub    rax,QWORD PTR [rbp-0x20]
    83d2:	48 2b 45 d8          	sub    rax,QWORD PTR [rbp-0x28]
    83d6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      size_type __new_capacity = length() + __len2 - __len1;
    83da:	e8 a1 dc ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    83df:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83e3:	48 03 45 c8          	add    rax,QWORD PTR [rbp-0x38]
    83e7:	48 2b 45 d8          	sub    rax,QWORD PTR [rbp-0x28]
    83eb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
      pointer __r = _M_create(__new_capacity, capacity());
    83ef:	e8 3c fe ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    83f4:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83f8:	48 89 c2             	mov    rdx,rax
    83fb:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    83ff:	e8 3c e7 ff ff       	call   6b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    8404:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      if (__pos)
    8408:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    840d:	74 21                	je     8430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xa0>
    840f:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
	this->_S_copy(__r, _M_data(), __pos);
    8413:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8417:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    841b:	e8 a0 e4 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8420:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    8424:	48 89 c6             	mov    rsi,rax
    8427:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    842b:	e8 30 ea ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    8430:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    8435:	74 1c                	je     8453 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xc3>
    8437:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
    843c:	74 15                	je     8453 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xc3>
	this->_S_copy(__r + __pos, __s, __len2);
    843e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    8442:	48 03 7d e0          	add    rdi,QWORD PTR [rbp-0x20]
    8446:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    844a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    844e:	e8 0d ea ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    8453:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    8458:	74 31                	je     848b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xfb>
    845a:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
	this->_S_copy(__r + __pos + __len2,
    845e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8462:	48 03 45 e0          	add    rax,QWORD PTR [rbp-0x20]
    8466:	48 03 45 c8          	add    rax,QWORD PTR [rbp-0x38]
    846a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
		      _M_data() + __pos + __len1, __how_much);
    846e:	e8 4d e4 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8473:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    8477:	48 89 c6             	mov    rsi,rax
    847a:	48 03 75 e0          	add    rsi,QWORD PTR [rbp-0x20]
    847e:	48 03 75 d8          	add    rsi,QWORD PTR [rbp-0x28]
    8482:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
	this->_S_copy(__r + __pos + __len2,
    8486:	e8 d5 e9 ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    848b:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_dispose();
    848f:	e8 ac ea ff ff       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    8494:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_data(__r);
    8498:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    849c:	e8 7f e6 ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    84a1:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_capacity(__new_capacity);
    84a5:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    84a9:	e8 62 e7 ff ff       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    84ae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84b5:	00 00 
    84b7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    84bb:	48 39 c8             	cmp    rax,rcx
    84be:	75 06                	jne    84c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x136>
    84c0:	48 83 c4 60          	add    rsp,0x60
    84c4:	5d                   	pop    rbp
    84c5:	c3                   	ret
    84c6:	e8 05 c1 ff ff       	call   45d0 <__stack_chk_fail@plt>
    84cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000084d0 <_ZNKSt4lessIPKcEclES1_S1_>:
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
      {
    84d0:	f3 0f 1e fa          	endbr64
    84d4:	55                   	push   rbp
    84d5:	48 89 e5             	mov    rbp,rsp
    84d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    84dc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    84e0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
	  return __x < __y;
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    84e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    84e8:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    84ec:	48 39 c8             	cmp    rax,rcx
    84ef:	0f 92 c0             	setb   al
    84f2:	24 01                	and    al,0x1
    84f4:	5d                   	pop    rbp
    84f5:	c3                   	ret
    84f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    84fd:	00 00 00 

0000000000008500 <_ZNSt11char_traitsIcE4moveEPcPKcm>:
      {
    8500:	f3 0f 1e fa          	endbr64
    8504:	55                   	push   rbp
    8505:	48 89 e5             	mov    rbp,rsp
    8508:	48 83 ec 30          	sub    rsp,0x30
    850c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    8510:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    8514:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    8518:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    851d:	75 0a                	jne    8529 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x29>
	  return __s1;
    851f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8523:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8527:	eb 1d                	jmp    8546 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x46>
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    8529:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    852d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8531:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    8535:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8539:	e8 72 c2 ff ff       	call   47b0 <memmove@plt>
    853e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8542:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    8546:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    854a:	48 83 c4 30          	add    rsp,0x30
    854e:	5d                   	pop    rbp
    854f:	c3                   	ret

0000000000008550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
      {
    8550:	f3 0f 1e fa          	endbr64
    8554:	55                   	push   rbp
    8555:	48 89 e5             	mov    rbp,rsp
    8558:	48 83 ec 30          	sub    rsp,0x30
    855c:	40 88 f0             	mov    al,sil
    855f:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    8566:	00 00 
    8568:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    856c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8570:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    8573:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    8577:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	const size_type __size = this->size();
    857b:	e8 b0 ed ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8580:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8584:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__size + 1 > this->capacity())
    8588:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    858c:	48 83 c0 01          	add    rax,0x1
    8590:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8594:	e8 97 fc ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8599:	48 89 c1             	mov    rcx,rax
    859c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    85a0:	48 39 c8             	cmp    rax,rcx
    85a3:	76 1a                	jbe    85bf <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x6f>
    85a5:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
    85a9:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    85ad:	31 c0                	xor    eax,eax
    85af:	89 c1                	mov    ecx,eax
    85b1:	41 b8 01 00 00 00    	mov    r8d,0x1
    85b7:	48 89 ca             	mov    rdx,rcx
    85ba:	e8 d1 fd ff ff       	call   8390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    85bf:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	traits_type::assign(this->_M_data()[__size], __c);
    85c3:	e8 f8 e2 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    85c8:	48 89 c7             	mov    rdi,rax
    85cb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    85cf:	48 01 c7             	add    rdi,rax
    85d2:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    85d6:	e8 d5 e8 ff ff       	call   6eb0 <_ZNSt11char_traitsIcE6assignERcRKc>
    85db:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	this->_M_set_length(__size + 1);
    85df:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    85e3:	48 ff c6             	inc    rsi
    85e6:	e8 a5 e6 ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    85eb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    85f2:	00 00 
    85f4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    85f8:	48 39 c8             	cmp    rax,rcx
    85fb:	75 06                	jne    8603 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0xb3>
    85fd:	48 83 c4 30          	add    rsp,0x30
    8601:	5d                   	pop    rbp
    8602:	c3                   	ret
    8603:	e8 c8 bf ff ff       	call   45d0 <__stack_chk_fail@plt>
    8608:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    860f:	00 

0000000000008610 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
      {
    8610:	f3 0f 1e fa          	endbr64
    8614:	55                   	push   rbp
    8615:	48 89 e5             	mov    rbp,rsp
    8618:	48 83 ec 10          	sub    rsp,0x10
    861c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8620:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8624:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
	_M_deallocate(_M_impl._M_start,
    8628:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    862b:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
    862f:	48 29 f2             	sub    rdx,rsi
    8632:	48 c1 fa 05          	sar    rdx,0x5
	_M_deallocate(_M_impl._M_start,
    8636:	e8 b5 00 00 00       	call   86f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    863b:	eb 00                	jmp    863d <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x2d>
    863d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      }
    8641:	e8 1a 01 00 00       	call   8760 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev>
    8646:	48 83 c4 10          	add    rsp,0x10
    864a:	5d                   	pop    rbp
    864b:	c3                   	ret
    864c:	f3 0f 1e fa          	endbr64
    8650:	48 89 c7             	mov    rdi,rax
	_M_deallocate(_M_impl._M_start,
    8653:	e8 88 e2 ff ff       	call   68e0 <__clang_call_terminate>
    8658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    865f:	00 

0000000000008660 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    {
    8660:	f3 0f 1e fa          	endbr64
    8664:	55                   	push   rbp
    8665:	48 89 e5             	mov    rbp,rsp
    8668:	48 83 ec 10          	sub    rsp,0x10
    866c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8670:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
#if __cpp_constexpr_dynamic_alloc // >= C++20
      if (std::__is_constant_evaluated())
	return std::_Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    8674:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8678:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    867c:	e8 0f 00 00 00       	call   8690 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
    8681:	48 83 c4 10          	add    rsp,0x10
    8685:	5d                   	pop    rbp
    8686:	c3                   	ret
    8687:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    868e:	00 00 

0000000000008690 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
	{
    8690:	f3 0f 1e fa          	endbr64
    8694:	55                   	push   rbp
    8695:	48 89 e5             	mov    rbp,rsp
    8698:	48 83 ec 10          	sub    rsp,0x10
    869c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    86a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
	  for (; __first != __last; ++__first)
    86a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86a8:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    86ac:	74 17                	je     86c5 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x35>
	    std::_Destroy(std::__addressof(*__first));
    86ae:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    86b2:	e8 19 00 00 00       	call   86d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    86b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86bb:	48 83 c0 20          	add    rax,0x20
    86bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86c3:	eb df                	jmp    86a4 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x14>
	}
    86c5:	48 83 c4 10          	add    rsp,0x10
    86c9:	5d                   	pop    rbp
    86ca:	c3                   	ret
    86cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000086d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    {
    86d0:	f3 0f 1e fa          	endbr64
    86d4:	55                   	push   rbp
    86d5:	48 89 e5             	mov    rbp,rsp
    86d8:	48 83 ec 10          	sub    rsp,0x10
    86dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      std::destroy_at(__pointer);
    86e0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    86e4:	e8 57 f8 ff ff       	call   7f40 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
    }
    86e9:	48 83 c4 10          	add    rsp,0x10
    86ed:	5d                   	pop    rbp
    86ee:	c3                   	ret
    86ef:	90                   	nop

00000000000086f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>:
      {
    86f0:	f3 0f 1e fa          	endbr64
    86f4:	55                   	push   rbp
    86f5:	48 89 e5             	mov    rbp,rsp
    86f8:	48 83 ec 50          	sub    rsp,0x50
    86fc:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    8700:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    8704:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    8708:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    870c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
	if (__p)
    8710:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    8715:	74 41                	je     8758 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m+0x68>
    8717:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
	  _Tr::deallocate(_M_impl, __p, __n);
    871b:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    871f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8723:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    8727:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    872b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    872f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8733:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    8737:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    873b:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    873f:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8743:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8747:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    874b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    874f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8753:	e8 08 f8 ff ff       	call   7f60 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
      }
    8758:	48 83 c4 50          	add    rsp,0x50
    875c:	5d                   	pop    rbp
    875d:	c3                   	ret
    875e:	66 90                	xchg   ax,ax

0000000000008760 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev>:
      struct _Vector_impl
    8760:	f3 0f 1e fa          	endbr64
    8764:	55                   	push   rbp
    8765:	48 89 e5             	mov    rbp,rsp
    8768:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    876c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8770:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8774:	5d                   	pop    rbp
    8775:	c3                   	ret
    8776:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    877d:	00 00 00 

0000000000008780 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_>:
    {
    8780:	f3 0f 1e fa          	endbr64
    8784:	55                   	push   rbp
    8785:	48 89 e5             	mov    rbp,rsp
    8788:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    878f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8796:	00 00 
    8798:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    879c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    87a0:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    87a4:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    87a8:	48 89 bd 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdi
      const size_type __len = _M_check_len(1u, "vector::_M_realloc_append");
    87af:	be 01 00 00 00       	mov    esi,0x1
    87b4:	48 8d 15 b9 89 00 00 	lea    rdx,[rip+0x89b9]        # 11174 <_IO_stdin_used+0x174>
    87bb:	e8 f0 ee ff ff       	call   76b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>
    87c0:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      if (__len <= 0)
    87c4:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    87c9:	77 00                	ja     87cb <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x4b>
    87cb:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
      pointer __old_start = this->_M_impl._M_start;
    87d2:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    87d5:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      pointer __old_finish = this->_M_impl._M_finish;
    87d9:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    87dd:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
      const size_type __elems = end() - begin();
    87e1:	e8 4a f0 ff ff       	call   7830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    87e6:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    87ed:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    87f1:	e8 9a f0 ff ff       	call   7890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    87f6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    87fa:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    87fe:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    8802:	e8 d9 ef ff ff       	call   77e0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>
    8807:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    880e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      pointer __new_start(this->_M_allocate(__len));
    8812:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    8816:	e8 d5 f0 ff ff       	call   78f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    881b:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    8822:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      pointer __new_finish(__new_start);
    8826:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    882a:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
	_Guard __guard(__new_start, __len, _M_impl);
    8831:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    8835:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    8839:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    883d:	e8 9e 01 00 00       	call   89e0 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>
				 std::__to_address(__new_start + __elems),
    8842:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    8846:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    884a:	48 c1 e0 05          	shl    rax,0x5
    884e:	48 01 c7             	add    rdi,rax
    8851:	e8 4a f1 ff ff       	call   79a0 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>
    8856:	48 8b 95 60 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa0]
    885d:	48 89 c1             	mov    rcx,rax
				 std::forward<_Args>(__args)...);
    8860:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8864:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    8868:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    886c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    8870:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8874:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    8878:	e8 33 01 00 00       	call   89b0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>
    887d:	eb 00                	jmp    887f <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0xff>
	}
    887f:	eb 00                	jmp    8881 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x101>
    8881:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
	    __new_finish = _S_relocate(__old_start, __old_finish,
    8888:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    888c:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8893:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    8897:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
				       __new_start, _M_get_Tp_allocator());
    889e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    88a2:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    88a9:	e8 52 f1 ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    88ae:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    88b5:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
    88bc:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    88c3:	48 89 c1             	mov    rcx,rax
	    __new_finish = _S_relocate(__old_start, __old_finish,
    88c6:	e8 f5 f0 ff ff       	call   79c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>
    88cb:	48 89 c1             	mov    rcx,rax
    88ce:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    88d5:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	    ++__new_finish;
    88dc:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    88e3:	48 83 c1 20          	add    rcx,0x20
    88e7:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	__guard._M_storage = __old_start;
    88ee:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    88f2:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	__guard._M_len = this->_M_impl._M_end_of_storage - __old_start;
    88f6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88fa:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    88fe:	48 29 c8             	sub    rax,rcx
    8901:	48 c1 f8 05          	sar    rax,0x5
    8905:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8909:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
      }
    890d:	e8 0e 01 00 00       	call   8a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>
    8912:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
      this->_M_impl._M_start = __new_start;
    8919:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    891d:	48 89 08             	mov    QWORD PTR [rax],rcx
      this->_M_impl._M_finish = __new_finish;
    8920:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    8927:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      this->_M_impl._M_end_of_storage = __new_start + __len;
    892b:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    892f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    8933:	48 c1 e2 05          	shl    rdx,0x5
    8937:	48 01 d1             	add    rcx,rdx
    893a:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    }
    893e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8945:	00 00 
    8947:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    894b:	48 39 c8             	cmp    rax,rcx
    894e:	75 54                	jne    89a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x224>
    8950:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    8957:	5d                   	pop    rbp
    8958:	c3                   	ret
    8959:	f3 0f 1e fa          	endbr64
    895d:	48 89 c1             	mov    rcx,rax
    8960:	89 d0                	mov    eax,edx
    8962:	48 89 8d 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rcx
    8969:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
      }
    896f:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    8973:	e8 a8 00 00 00       	call   8a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>
    8978:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    897f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8986:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    898d:	00 00 
    898f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8993:	48 39 c8             	cmp    rax,rcx
    8996:	75 0c                	jne    89a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x224>
    8998:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    899f:	e8 dc ba ff ff       	call   4480 <_Unwind_Resume@plt>
    89a4:	e8 27 bc ff ff       	call   45d0 <__stack_chk_fail@plt>
    89a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000089b0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>:
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    89b0:	f3 0f 1e fa          	endbr64
    89b4:	55                   	push   rbp
    89b5:	48 89 e5             	mov    rbp,rsp
    89b8:	48 83 ec 20          	sub    rsp,0x20
    89bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    89c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    89c4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    89c8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    89cc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    89d0:	e8 3b d5 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    89d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89d9:	48 83 c4 20          	add    rsp,0x20
    89dd:	5d                   	pop    rbp
    89de:	c3                   	ret
    89df:	90                   	nop

00000000000089e0 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>:
	{ }
    89e0:	f3 0f 1e fa          	endbr64
    89e4:	55                   	push   rbp
    89e5:	48 89 e5             	mov    rbp,rsp
    89e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    89ec:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    89f0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    89f4:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    89f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_storage(__s), _M_len(__l), _M_alloc(__a)
    89fc:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8a00:	48 89 08             	mov    QWORD PTR [rax],rcx
    8a03:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8a07:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    8a0b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8a0f:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	{ }
    8a13:	5d                   	pop    rbp
    8a14:	c3                   	ret
    8a15:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8a1c:	00 00 00 
    8a1f:	90                   	nop

0000000000008a20 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>:
	{
    8a20:	f3 0f 1e fa          	endbr64
    8a24:	55                   	push   rbp
    8a25:	48 89 e5             	mov    rbp,rsp
    8a28:	48 83 ec 40          	sub    rsp,0x40
    8a2c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    8a30:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8a34:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (_M_storage)
    8a38:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    8a3c:	74 48                	je     8a86 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
    8a3e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
	      deallocate(_M_alloc, _M_storage, _M_len);
    8a42:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8a46:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    8a49:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a4d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    8a51:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    8a55:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    8a59:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8a5d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    8a61:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8a65:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    8a69:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8a6d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8a71:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8a75:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8a79:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8a7d:	e8 de f4 ff ff       	call   7f60 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    8a82:	eb 00                	jmp    8a84 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x64>
	    __gnu_cxx::__alloc_traits<_Tp_alloc_type>::
    8a84:	eb 00                	jmp    8a86 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
	}
    8a86:	48 83 c4 40          	add    rsp,0x40
    8a8a:	5d                   	pop    rbp
    8a8b:	c3                   	ret
    8a8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008a90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>:
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      _GLIBCXX20_CONSTEXPR
      void
      _M_move_assign(vector&& __x, true_type) noexcept
      {
    8a90:	f3 0f 1e fa          	endbr64
    8a94:	55                   	push   rbp
    8a95:	48 89 e5             	mov    rbp,rsp
    8a98:	48 83 ec 70          	sub    rsp,0x70
    8a9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8aa3:	00 00 
    8aa5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8aa9:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    8aad:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    8ab1:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    8ab5:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
	vector __tmp(get_allocator());
    8ab9:	48 8d 7d df          	lea    rdi,[rbp-0x21]
    8abd:	e8 7e 00 00 00       	call   8b40 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>
    8ac2:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8ac6:	48 8d 75 df          	lea    rsi,[rbp-0x21]
    8aca:	e8 d1 00 00 00       	call   8ba0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>
    8acf:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    8ad3:	48 8d 45 df          	lea    rax,[rbp-0x21]
    8ad7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	this->_M_impl._M_swap_data(__x._M_impl);
    8adb:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    8adf:	e8 ec 00 00 00       	call   8bd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
    8ae4:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8ae8:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    8aec:	e8 df 00 00 00       	call   8bd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
    8af1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
    8af5:	e8 06 ef ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8afa:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    8afe:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    8b02:	e8 f9 ee ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8b07:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    8b0b:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    8b0f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8b13:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    8b17:	e8 e4 da ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    8b1c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8b23:	00 00 
    8b25:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8b29:	48 39 c8             	cmp    rax,rcx
    8b2c:	75 06                	jne    8b34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE+0xa4>
    8b2e:	48 83 c4 70          	add    rsp,0x70
    8b32:	5d                   	pop    rbp
    8b33:	c3                   	ret
    8b34:	e8 97 ba ff ff       	call   45d0 <__stack_chk_fail@plt>
    8b39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008b40 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>:
      { return allocator_type(_M_get_Tp_allocator()); }
    8b40:	f3 0f 1e fa          	endbr64
    8b44:	55                   	push   rbp
    8b45:	48 89 e5             	mov    rbp,rsp
    8b48:	48 83 ec 40          	sub    rsp,0x40
    8b4c:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    8b50:	48 89 f8             	mov    rax,rdi
    8b53:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8b57:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8b5b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8b5f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8b63:	e8 28 f0 ff ff       	call   7b90 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8b68:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8b6c:	48 89 c1             	mov    rcx,rax
    8b6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8b73:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8b77:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8b7b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      : __allocator_base<_Tp>(__a) { }
    8b7f:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8b83:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    8b87:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8b8b:	48 83 c4 40          	add    rsp,0x40
    8b8f:	5d                   	pop    rbp
    8b90:	c3                   	ret
    8b91:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8b98:	00 00 00 
    8b9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008ba0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>:
      : _Base(__a) { }
    8ba0:	f3 0f 1e fa          	endbr64
    8ba4:	55                   	push   rbp
    8ba5:	48 89 e5             	mov    rbp,rsp
    8ba8:	48 83 ec 10          	sub    rsp,0x10
    8bac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8bb0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8bb4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8bb8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8bbc:	e8 8f 00 00 00       	call   8c50 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>
    8bc1:	48 83 c4 10          	add    rsp,0x10
    8bc5:	5d                   	pop    rbp
    8bc6:	c3                   	ret
    8bc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8bce:	00 00 

0000000000008bd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>:
	{
    8bd0:	f3 0f 1e fa          	endbr64
    8bd4:	55                   	push   rbp
    8bd5:	48 89 e5             	mov    rbp,rsp
    8bd8:	48 83 ec 40          	sub    rsp,0x40
    8bdc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8be3:	00 00 
    8be5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8be9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8bed:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8bf1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bf5:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8bf9:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8bfd:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	  _Vector_impl_data __tmp;
    8c01:	e8 ba 00 00 00       	call   8cc0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
    8c06:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    8c0a:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	  __tmp._M_copy_data(*this);
    8c0e:	e8 dd 00 00 00       	call   8cf0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
    8c13:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  _M_copy_data(__x);
    8c17:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    8c1b:	e8 d0 00 00 00       	call   8cf0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
    8c20:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
	  __x._M_copy_data(__tmp);
    8c24:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8c28:	e8 c3 00 00 00       	call   8cf0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	}
    8c2d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8c34:	00 00 
    8c36:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8c3a:	48 39 c8             	cmp    rax,rcx
    8c3d:	75 06                	jne    8c45 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_+0x75>
    8c3f:	48 83 c4 40          	add    rsp,0x40
    8c43:	5d                   	pop    rbp
    8c44:	c3                   	ret
    8c45:	e8 86 b9 ff ff       	call   45d0 <__stack_chk_fail@plt>
    8c4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008c50 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>:
      : _M_impl(__a) { }
    8c50:	f3 0f 1e fa          	endbr64
    8c54:	55                   	push   rbp
    8c55:	48 89 e5             	mov    rbp,rsp
    8c58:	48 83 ec 10          	sub    rsp,0x10
    8c5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8c60:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8c64:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8c68:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8c6c:	e8 0f 00 00 00       	call   8c80 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_>
    8c71:	48 83 c4 10          	add    rsp,0x10
    8c75:	5d                   	pop    rbp
    8c76:	c3                   	ret
    8c77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8c7e:	00 00 

0000000000008c80 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_>:
	{ }
    8c80:	f3 0f 1e fa          	endbr64
    8c84:	55                   	push   rbp
    8c85:	48 89 e5             	mov    rbp,rsp
    8c88:	48 83 ec 30          	sub    rsp,0x30
    8c8c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8c90:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8c94:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	: _Tp_alloc_type(__a)
    8c98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8c9c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ca0:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8ca4:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8ca8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8cac:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    8cb0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8cb4:	e8 07 00 00 00       	call   8cc0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
	{ }
    8cb9:	48 83 c4 30          	add    rsp,0x30
    8cbd:	5d                   	pop    rbp
    8cbe:	c3                   	ret
    8cbf:	90                   	nop

0000000000008cc0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>:
	{ }
    8cc0:	f3 0f 1e fa          	endbr64
    8cc4:	55                   	push   rbp
    8cc5:	48 89 e5             	mov    rbp,rsp
    8cc8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8ccc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_start(), _M_finish(), _M_end_of_storage()
    8cd0:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    8cd7:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    8cde:	00 
    8cdf:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    8ce6:	00 
	{ }
    8ce7:	5d                   	pop    rbp
    8ce8:	c3                   	ret
    8ce9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008cf0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>:
	{
    8cf0:	f3 0f 1e fa          	endbr64
    8cf4:	55                   	push   rbp
    8cf5:	48 89 e5             	mov    rbp,rsp
    8cf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8cfc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	  _M_start = __x._M_start;
    8d04:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8d08:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    8d0b:	48 89 08             	mov    QWORD PTR [rax],rcx
	  _M_finish = __x._M_finish;
    8d0e:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8d12:	48 8b 49 08          	mov    rcx,QWORD PTR [rcx+0x8]
    8d16:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  _M_end_of_storage = __x._M_end_of_storage;
    8d1a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8d1e:	48 8b 49 10          	mov    rcx,QWORD PTR [rcx+0x10]
    8d22:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	}
    8d26:	5d                   	pop    rbp
    8d27:	c3                   	ret
    8d28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    8d2f:	00 

0000000000008d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>:
      {
    8d30:	f3 0f 1e fa          	endbr64
    8d34:	55                   	push   rbp
    8d35:	48 89 e5             	mov    rbp,rsp
    8d38:	48 83 ec 20          	sub    rsp,0x20
    8d3c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8d40:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d44:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d48:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	__glibcxx_assert(__pos <= size());
    8d4c:	eb 00                	jmp    8d4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x1e>
    8d4e:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return _M_data()[__pos];
    8d52:	e8 69 db ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8d57:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    8d5b:	48 83 c4 20          	add    rsp,0x20
    8d5f:	5d                   	pop    rbp
    8d60:	c3                   	ret
    8d61:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8d68:	00 00 00 
    8d6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
      { return this->append(__str._M_data(), __str.size()); }
    8d70:	f3 0f 1e fa          	endbr64
    8d74:	55                   	push   rbp
    8d75:	48 89 e5             	mov    rbp,rsp
    8d78:	48 83 ec 20          	sub    rsp,0x20
    8d7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8d80:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d88:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8d8c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8d90:	e8 2b db ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8d95:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8d99:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8d9d:	e8 8e e5 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8da2:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    8da6:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    8daa:	48 89 c2             	mov    rdx,rax
    8dad:	e8 0e 00 00 00       	call   8dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    8db2:	48 83 c4 20          	add    rsp,0x20
    8db6:	5d                   	pop    rbp
    8db7:	c3                   	ret
    8db8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    8dbf:	00 

0000000000008dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>:
      {
    8dc0:	f3 0f 1e fa          	endbr64
    8dc4:	55                   	push   rbp
    8dc5:	48 89 e5             	mov    rbp,rsp
    8dc8:	48 83 ec 20          	sub    rsp,0x20
    8dcc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8dd0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8dd4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8dd8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8ddc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	_M_check_length(size_type(0), __n, "basic_string::append");
    8de0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8de4:	31 c0                	xor    eax,eax
    8de6:	89 c6                	mov    esi,eax
    8de8:	48 8d 0d b8 83 00 00 	lea    rcx,[rip+0x83b8]        # 111a7 <_IO_stdin_used+0x1a7>
    8def:	e8 dc f3 ff ff       	call   81d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    8df4:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return _M_append(__s, __n);
    8df8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8dfc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8e00:	e8 0b 00 00 00       	call   8e10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8e05:	48 83 c4 20          	add    rsp,0x20
    8e09:	5d                   	pop    rbp
    8e0a:	c3                   	ret
    8e0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008e10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    {
    8e10:	f3 0f 1e fa          	endbr64
    8e14:	55                   	push   rbp
    8e15:	48 89 e5             	mov    rbp,rsp
    8e18:	48 83 ec 40          	sub    rsp,0x40
    8e1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8e20:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8e24:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8e28:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8e2c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      const size_type __len = __n + this->size();
    8e30:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e34:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    8e38:	e8 f3 e4 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8e3d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8e41:	48 89 c1             	mov    rcx,rax
    8e44:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8e48:	48 01 c8             	add    rax,rcx
    8e4b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__len <= this->capacity())
    8e4f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8e53:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8e57:	e8 d4 f3 ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8e5c:	48 89 c1             	mov    rcx,rax
    8e5f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e63:	48 39 c8             	cmp    rax,rcx
    8e66:	77 33                	ja     8e9b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x8b>
	  if (__n)
    8e68:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    8e6d:	74 2a                	je     8e99 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x89>
    8e6f:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    8e73:	e8 48 da ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8e78:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8e7c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8e80:	e8 ab e4 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8e85:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8e89:	48 01 c7             	add    rdi,rax
    8e8c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8e90:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8e94:	e8 c7 df ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	}
    8e99:	eb 21                	jmp    8ebc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
    8e9b:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    8e9f:	e8 8c e4 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8ea4:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8ea8:	48 89 c6             	mov    rsi,rax
    8eab:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8eaf:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    8eb3:	31 c0                	xor    eax,eax
    8eb5:	89 c2                	mov    edx,eax
    8eb7:	e8 d4 f4 ff ff       	call   8390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    8ebc:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      this->_M_set_length(__len);
    8ec0:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8ec4:	e8 c7 dd ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    8ec9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
      return *this;
    8ecd:	48 83 c4 40          	add    rsp,0x40
    8ed1:	5d                   	pop    rbp
    8ed2:	c3                   	ret
    8ed3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8eda:	00 00 00 
    8edd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000008ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
      { return _M_data(); }
    8ee0:	f3 0f 1e fa          	endbr64
    8ee4:	55                   	push   rbp
    8ee5:	48 89 e5             	mov    rbp,rsp
    8ee8:	48 83 ec 10          	sub    rsp,0x10
    8eec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8ef0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8ef4:	e8 c7 d9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8ef9:	48 83 c4 10          	add    rsp,0x10
    8efd:	5d                   	pop    rbp
    8efe:	c3                   	ret
    8eff:	90                   	nop

0000000000008f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>:
    {
    8f00:	f3 0f 1e fa          	endbr64
    8f04:	55                   	push   rbp
    8f05:	48 89 e5             	mov    rbp,rsp
    8f08:	48 83 ec 40          	sub    rsp,0x40
    8f0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f13:	00 00 
    8f15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f19:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8f1d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8f21:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    8f25:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
      const size_type __capacity = capacity();
    8f29:	e8 02 f3 ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8f2e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__res <= __capacity)
    8f32:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f36:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    8f3a:	77 02                	ja     8f3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0x3e>
	return;
    8f3c:	eb 6a                	jmp    8fa8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0xa8>
    8f3e:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      pointer __tmp = _M_create(__res, __capacity);
    8f42:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8f46:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    8f4a:	e8 f1 db ff ff       	call   6b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    8f4f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8f53:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      this->_S_copy(__tmp, _M_data(), length() + 1);
    8f57:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f5b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8f5f:	e8 5c d9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8f64:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8f68:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8f6c:	e8 0f d1 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    8f71:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8f75:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    8f79:	48 89 c2             	mov    rdx,rax
    8f7c:	48 83 c2 01          	add    rdx,0x1
    8f80:	e8 db de ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    8f85:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_dispose();
    8f89:	e8 b2 df ff ff       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    8f8e:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_data(__tmp);
    8f92:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    8f96:	e8 85 db ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    8f9b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_capacity(__res);
    8f9f:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8fa3:	e8 68 dc ff ff       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    8fa8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8faf:	00 00 
    8fb1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8fb5:	48 39 c8             	cmp    rax,rcx
    8fb8:	75 06                	jne    8fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0xc0>
    8fba:	48 83 c4 40          	add    rsp,0x40
    8fbe:	5d                   	pop    rbp
    8fbf:	c3                   	ret
    8fc0:	e8 0b b6 ff ff       	call   45d0 <__stack_chk_fail@plt>
    8fc5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8fcc:	00 00 00 
    8fcf:	90                   	nop

0000000000008fd0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      {
    8fd0:	f3 0f 1e fa          	endbr64
    8fd4:	55                   	push   rbp
    8fd5:	48 89 e5             	mov    rbp,rsp
    8fd8:	48 83 ec 20          	sub    rsp,0x20
    8fdc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    8fe0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    8fe4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    8fe8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    8fed:	75 09                	jne    8ff8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x28>
	  return 0;
    8fef:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8ff6:	eb 14                	jmp    900c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x3c>
	return __builtin_memcmp(__s1, __s2, __n);
    8ff8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8ffc:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    9000:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    9004:	e8 d7 b4 ff ff       	call   44e0 <memcmp@plt>
    9009:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
      }
    900c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    900f:	48 83 c4 20          	add    rsp,0x20
    9013:	5d                   	pop    rbp
    9014:	c3                   	ret
    9015:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    901c:	00 00 00 
    901f:	90                   	nop

0000000000009020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
      { return _M_data(); }
    9020:	f3 0f 1e fa          	endbr64
    9024:	55                   	push   rbp
    9025:	48 89 e5             	mov    rbp,rsp
    9028:	48 83 ec 10          	sub    rsp,0x10
    902c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9030:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9034:	e8 87 d8 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9039:	48 83 c4 10          	add    rsp,0x10
    903d:	5d                   	pop    rbp
    903e:	c3                   	ret
    903f:	90                   	nop

0000000000009040 <_ZN10TerminalIOC1Ev>:
    bool special;
    char value;
};

TerminalIO::TerminalIO()
{
    9040:	f3 0f 1e fa          	endbr64
    9044:	55                   	push   rbp
    9045:	48 89 e5             	mov    rbp,rsp
    9048:	48 83 ec 10          	sub    rsp,0x10
    904c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9050:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    9054:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    if(tcgetattr(STDIN_FILENO, &original_state) == -1)
    9058:	31 ff                	xor    edi,edi
    905a:	e8 81 b5 ff ff       	call   45e0 <tcgetattr@plt>
    905f:	83 f8 ff             	cmp    eax,0xffffffff
    9062:	75 22                	jne    9086 <_ZN10TerminalIOC1Ev+0x46>
    {
        fprintf(stderr, "Unable to get terminal attributes\r\n");
    9064:	48 8b 05 65 df 00 00 	mov    rax,QWORD PTR [rip+0xdf65]        # 16fd0 <stderr@GLIBC_2.2.5>
    906b:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    906e:	48 8d 35 7b 81 00 00 	lea    rsi,[rip+0x817b]        # 111f0 <_IO_stdin_used+0x1f0>
    9075:	b0 00                	mov    al,0x0
    9077:	e8 54 b6 ff ff       	call   46d0 <fprintf@plt>
        exit(1);
    907c:	bf 01 00 00 00       	mov    edi,0x1
    9081:	e8 aa b5 ff ff       	call   4630 <exit@plt>
    9086:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    }
    enable_raw_mode();
    908a:	e8 11 00 00 00       	call   90a0 <_ZN10TerminalIO15enable_raw_modeEv>
}
    908f:	48 83 c4 10          	add    rsp,0x10
    9093:	5d                   	pop    rbp
    9094:	c3                   	ret
    9095:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    909c:	00 00 00 00 

00000000000090a0 <_ZN10TerminalIO15enable_raw_modeEv>:
}

// https://viewsourcecode.org/snaptoken/kilo/ for entering raw mode
// and handling user input in raw mode
void TerminalIO::enable_raw_mode()
{
    90a0:	f3 0f 1e fa          	endbr64
    90a4:	55                   	push   rbp
    90a5:	48 89 e5             	mov    rbp,rsp
    90a8:	48 83 ec 50          	sub    rsp,0x50
    90ac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    90b3:	00 00 
    90b5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    90b9:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    struct termios raw;
    raw.c_lflag &= ~(ECHO | ICANON | IEXTEN | ISIG);
    90bd:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    90c0:	25 f4 7f ff ff       	and    eax,0xffff7ff4
    90c5:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    raw.c_iflag &= ~(ICRNL | IXON | BRKINT | INPCK | ISTRIP);
    90c8:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
    90cb:	25 cd fa ff ff       	and    eax,0xfffffacd
    90d0:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    raw.c_oflag &= ~(OPOST);
    90d3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    90d6:	83 e0 fe             	and    eax,0xfffffffe
    90d9:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    raw.c_cflag |= (CS8);
    90dc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    90df:	83 c8 30             	or     eax,0x30
    90e2:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw) == -1)
    90e5:	31 ff                	xor    edi,edi
    90e7:	be 02 00 00 00       	mov    esi,0x2
    90ec:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    90f0:	e8 6b b5 ff ff       	call   4660 <tcsetattr@plt>
    90f5:	83 f8 ff             	cmp    eax,0xffffffff
    90f8:	75 22                	jne    911c <_ZN10TerminalIO15enable_raw_modeEv+0x7c>
    {
        std::fprintf(stderr, "Unable to enter raw mode\r\n");
    90fa:	48 8b 05 cf de 00 00 	mov    rax,QWORD PTR [rip+0xdecf]        # 16fd0 <stderr@GLIBC_2.2.5>
    9101:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    9104:	48 8d 35 35 81 00 00 	lea    rsi,[rip+0x8135]        # 11240 <_IO_stdin_used+0x240>
    910b:	b0 00                	mov    al,0x0
    910d:	e8 be b5 ff ff       	call   46d0 <fprintf@plt>
        exit(1);
    9112:	bf 01 00 00 00       	mov    edi,0x1
    9117:	e8 14 b5 ff ff       	call   4630 <exit@plt>
    }
}
    911c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9123:	00 00 
    9125:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9129:	48 39 c8             	cmp    rax,rcx
    912c:	75 06                	jne    9134 <_ZN10TerminalIO15enable_raw_modeEv+0x94>
    912e:	48 83 c4 50          	add    rsp,0x50
    9132:	5d                   	pop    rbp
    9133:	c3                   	ret
    9134:	e8 97 b4 ff ff       	call   45d0 <__stack_chk_fail@plt>
    9139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000009140 <_ZN10TerminalIOD1Ev>:
{
    9140:	f3 0f 1e fa          	endbr64
    9144:	55                   	push   rbp
    9145:	48 89 e5             	mov    rbp,rsp
    9148:	48 83 ec 10          	sub    rsp,0x10
    914c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9150:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
   disable_raw_mode(); 
    9154:	e8 17 00 00 00       	call   9170 <_ZN10TerminalIO16disable_raw_modeEv>
    9159:	eb 00                	jmp    915b <_ZN10TerminalIOD1Ev+0x1b>
}
    915b:	48 83 c4 10          	add    rsp,0x10
    915f:	5d                   	pop    rbp
    9160:	c3                   	ret
    9161:	f3 0f 1e fa          	endbr64
    9165:	48 89 c7             	mov    rdi,rax
   disable_raw_mode(); 
    9168:	e8 73 d7 ff ff       	call   68e0 <__clang_call_terminate>
    916d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009170 <_ZN10TerminalIO16disable_raw_modeEv>:
{
    9170:	f3 0f 1e fa          	endbr64
    9174:	55                   	push   rbp
    9175:	48 89 e5             	mov    rbp,rsp
    9178:	48 83 ec 10          	sub    rsp,0x10
    917c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9180:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &original_state) == -1)
    9184:	31 ff                	xor    edi,edi
    9186:	be 02 00 00 00       	mov    esi,0x2
    918b:	e8 d0 b4 ff ff       	call   4660 <tcsetattr@plt>
    9190:	83 f8 ff             	cmp    eax,0xffffffff
    9193:	75 22                	jne    91b7 <_ZN10TerminalIO16disable_raw_modeEv+0x47>
        std::fprintf(stderr, "Unable to leave raw mode\r\n");
    9195:	48 8b 05 34 de 00 00 	mov    rax,QWORD PTR [rip+0xde34]        # 16fd0 <stderr@GLIBC_2.2.5>
    919c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    919f:	48 8d 35 7f 80 00 00 	lea    rsi,[rip+0x807f]        # 11225 <_IO_stdin_used+0x225>
    91a6:	b0 00                	mov    al,0x0
    91a8:	e8 23 b5 ff ff       	call   46d0 <fprintf@plt>
        exit(1); 
    91ad:	bf 01 00 00 00       	mov    edi,0x1
    91b2:	e8 79 b4 ff ff       	call   4630 <exit@plt>
}
    91b7:	48 83 c4 10          	add    rsp,0x10
    91bb:	5d                   	pop    rbp
    91bc:	c3                   	ret
    91bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000091c0 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour>:
{
    91c0:	f3 0f 1e fa          	endbr64
    91c4:	55                   	push   rbp
    91c5:	48 89 e5             	mov    rbp,rsp
    91c8:	48 83 ec 20          	sub    rsp,0x20
    91cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    91d0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    91d4:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    std::fputs("\27[", stream);
    91d7:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    91db:	48 8d 3d 32 80 00 00 	lea    rdi,[rip+0x8032]        # 11214 <_IO_stdin_used+0x214>
    91e2:	e8 09 b4 ff ff       	call   45f0 <fputs@plt>
    int colour_val = static_cast<int>(colour);
    91e7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91ea:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    if(colour_val >= 8)
    91ed:	83 7d e8 08          	cmp    DWORD PTR [rbp-0x18],0x8
    91f1:	7c 1a                	jl     920d <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour+0x4d>
        std::fprintf(stream, "%d;1m", colour_val + 22);
    91f3:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    91f7:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    91fa:	83 c2 16             	add    edx,0x16
    91fd:	48 8d 35 13 80 00 00 	lea    rsi,[rip+0x8013]        # 11217 <_IO_stdin_used+0x217>
    9204:	b0 00                	mov    al,0x0
    9206:	e8 c5 b4 ff ff       	call   46d0 <fprintf@plt>
    }
    920b:	eb 18                	jmp    9225 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour+0x65>
        std::fprintf(stream, "%dm", colour_val + 30);
    920d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    9211:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    9214:	83 c2 1e             	add    edx,0x1e
    9217:	48 8d 35 ff 7f 00 00 	lea    rsi,[rip+0x7fff]        # 1121d <_IO_stdin_used+0x21d>
    921e:	b0 00                	mov    al,0x0
    9220:	e8 ab b4 ff ff       	call   46d0 <fprintf@plt>
    std::fflush(stdout);
    9225:	48 8b 05 6c dd 00 00 	mov    rax,QWORD PTR [rip+0xdd6c]        # 16f98 <stdout@GLIBC_2.2.5>
    922c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    922f:	e8 cc b3 ff ff       	call   4600 <fflush@plt>
}
    9234:	48 83 c4 20          	add    rsp,0x20
    9238:	5d                   	pop    rbp
    9239:	c3                   	ret
    923a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009240 <_ZN10TerminalIO17reset_text_colourEP8_IO_FILE>:
{
    9240:	f3 0f 1e fa          	endbr64
    9244:	55                   	push   rbp
    9245:	48 89 e5             	mov    rbp,rsp
    9248:	48 83 ec 10          	sub    rsp,0x10
    924c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9250:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    std::fputs("[0m", stream);
    9254:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9258:	48 8d 3d c2 7f 00 00 	lea    rdi,[rip+0x7fc2]        # 11221 <_IO_stdin_used+0x221>
    925f:	e8 8c b3 ff ff       	call   45f0 <fputs@plt>
}
    9264:	48 83 c4 10          	add    rsp,0x10
    9268:	5d                   	pop    rbp
    9269:	c3                   	ret
    926a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009270 <_ZN10TerminalIO5printEPKcz>:
{
    9270:	f3 0f 1e fa          	endbr64
    9274:	55                   	push   rbp
    9275:	48 89 e5             	mov    rbp,rsp
    9278:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    927f:	84 c0                	test   al,al
    9281:	74 29                	je     92ac <_ZN10TerminalIO5printEPKcz+0x3c>
    9283:	0f 29 85 50 ff ff ff 	movaps XMMWORD PTR [rbp-0xb0],xmm0
    928a:	0f 29 8d 60 ff ff ff 	movaps XMMWORD PTR [rbp-0xa0],xmm1
    9291:	0f 29 95 70 ff ff ff 	movaps XMMWORD PTR [rbp-0x90],xmm2
    9298:	0f 29 5d 80          	movaps XMMWORD PTR [rbp-0x80],xmm3
    929c:	0f 29 65 90          	movaps XMMWORD PTR [rbp-0x70],xmm4
    92a0:	0f 29 6d a0          	movaps XMMWORD PTR [rbp-0x60],xmm5
    92a4:	0f 29 75 b0          	movaps XMMWORD PTR [rbp-0x50],xmm6
    92a8:	0f 29 7d c0          	movaps XMMWORD PTR [rbp-0x40],xmm7
    92ac:	4c 89 8d 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],r9
    92b3:	4c 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],r8
    92ba:	48 89 8d 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rcx
    92c1:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    92c8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    92cf:	00 00 
    92d1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    92d5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    92d9:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    92dd:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    va_start(args, format);
    92e4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    92e8:	48 8d 45 10          	lea    rax,[rbp+0x10]
    92ec:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    92f0:	c7 45 e4 30 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x30
    92f7:	c7 45 e0 10 00 00 00 	mov    DWORD PTR [rbp-0x20],0x10
    std::vfprintf(stdout, format, args);
    92fe:	48 8b 05 93 dc 00 00 	mov    rax,QWORD PTR [rip+0xdc93]        # 16f98 <stdout@GLIBC_2.2.5>
    9305:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    930c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    930f:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    9313:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    9317:	e8 74 b3 ff ff       	call   4690 <vfprintf@plt>
    931c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    std::fflush(stdout);
    9323:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    9326:	e8 d5 b2 ff ff       	call   4600 <fflush@plt>
}
    932b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9332:	00 00 
    9334:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9338:	48 39 c8             	cmp    rax,rcx
    933b:	75 09                	jne    9346 <_ZN10TerminalIO5printEPKcz+0xd6>
    933d:	48 81 c4 f0 00 00 00 	add    rsp,0xf0
    9344:	5d                   	pop    rbp
    9345:	c3                   	ret
    9346:	e8 85 b2 ff ff       	call   45d0 <__stack_chk_fail@plt>
    934b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009350 <_ZN10TerminalIO11print_errorEPKcz>:
{
    9350:	f3 0f 1e fa          	endbr64
    9354:	55                   	push   rbp
    9355:	48 89 e5             	mov    rbp,rsp
    9358:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    935f:	84 c0                	test   al,al
    9361:	74 29                	je     938c <_ZN10TerminalIO11print_errorEPKcz+0x3c>
    9363:	0f 29 85 50 ff ff ff 	movaps XMMWORD PTR [rbp-0xb0],xmm0
    936a:	0f 29 8d 60 ff ff ff 	movaps XMMWORD PTR [rbp-0xa0],xmm1
    9371:	0f 29 95 70 ff ff ff 	movaps XMMWORD PTR [rbp-0x90],xmm2
    9378:	0f 29 5d 80          	movaps XMMWORD PTR [rbp-0x80],xmm3
    937c:	0f 29 65 90          	movaps XMMWORD PTR [rbp-0x70],xmm4
    9380:	0f 29 6d a0          	movaps XMMWORD PTR [rbp-0x60],xmm5
    9384:	0f 29 75 b0          	movaps XMMWORD PTR [rbp-0x50],xmm6
    9388:	0f 29 7d c0          	movaps XMMWORD PTR [rbp-0x40],xmm7
    938c:	4c 89 8d 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],r9
    9393:	4c 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],r8
    939a:	48 89 8d 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rcx
    93a1:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    93a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    93af:	00 00 
    93b1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93b5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    93b9:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    93bd:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    set_text_colour(stderr, TerminalColour::LIGHT_RED);
    93c1:	48 8b 05 08 dc 00 00 	mov    rax,QWORD PTR [rip+0xdc08]        # 16fd0 <stderr@GLIBC_2.2.5>
    93c8:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    93cf:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    93d2:	ba 09 00 00 00       	mov    edx,0x9
    93d7:	e8 e4 fd ff ff       	call   91c0 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour>
    93dc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    93e3:	48 8d 8d 20 ff ff ff 	lea    rcx,[rbp-0xe0]
    va_start(args, format);
    93ea:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    93ee:	48 8d 4d 10          	lea    rcx,[rbp+0x10]
    93f2:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    93f6:	c7 45 e4 30 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x30
    93fd:	c7 45 e0 10 00 00 00 	mov    DWORD PTR [rbp-0x20],0x10
    std::vfprintf(stderr, format, args);
    9404:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    9407:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    940b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    940f:	e8 7c b2 ff ff       	call   4690 <vfprintf@plt>
    9414:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    std::fflush(stderr);
    941b:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    941e:	e8 dd b1 ff ff       	call   4600 <fflush@plt>
}
    9423:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    942a:	00 00 
    942c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9430:	48 39 c8             	cmp    rax,rcx
    9433:	75 09                	jne    943e <_ZN10TerminalIO11print_errorEPKcz+0xee>
    9435:	48 81 c4 f0 00 00 00 	add    rsp,0xf0
    943c:	5d                   	pop    rbp
    943d:	c3                   	ret
    943e:	e8 8d b1 ff ff       	call   45d0 <__stack_chk_fail@plt>
    9443:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    944a:	84 00 00 00 00 00 

0000000000009450 <_ZN10TerminalIO8read_keyEv>:


Key TerminalIO::read_key()
{
    9450:	f3 0f 1e fa          	endbr64
    9454:	55                   	push   rbp
    9455:	48 89 e5             	mov    rbp,rsp
    9458:	48 83 ec 30          	sub    rsp,0x30
    945c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9463:	00 00 
    9465:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9469:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    int num_read;
    char c = 0;
    946d:	c6 45 f4 00          	mov    BYTE PTR [rbp-0xc],0x0
    while((num_read = read(STDIN_FILENO, &c, 1)) != 1)
    9471:	31 ff                	xor    edi,edi
    9473:	48 8d 75 f4          	lea    rsi,[rbp-0xc]
    9477:	ba 01 00 00 00       	mov    edx,0x1
    947c:	e8 5f b2 ff ff       	call   46e0 <read@plt>
    9481:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    9484:	83 f8 01             	cmp    eax,0x1
    9487:	74 4f                	je     94d8 <_ZN10TerminalIO8read_keyEv+0x88>
    {
        if(num_read == -1 && errno != EAGAIN)
    9489:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    948d:	75 2c                	jne    94bb <_ZN10TerminalIO8read_keyEv+0x6b>
    948f:	e8 bc af ff ff       	call   4450 <__errno_location@plt>
    9494:	83 38 0b             	cmp    DWORD PTR [rax],0xb
    9497:	74 22                	je     94bb <_ZN10TerminalIO8read_keyEv+0x6b>
        {
            std::fprintf(stderr, "Unable to read key input");
    9499:	48 8b 05 30 db 00 00 	mov    rax,QWORD PTR [rip+0xdb30]        # 16fd0 <stderr@GLIBC_2.2.5>
    94a0:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    94a3:	48 8d 35 b1 7d 00 00 	lea    rsi,[rip+0x7db1]        # 1125b <_IO_stdin_used+0x25b>
    94aa:	b0 00                	mov    al,0x0
    94ac:	e8 1f b2 ff ff       	call   46d0 <fprintf@plt>
            exit(1);
    94b1:	bf 01 00 00 00       	mov    edi,0x1
    94b6:	e8 75 b1 ff ff       	call   4630 <exit@plt>
        }
        if(num_read != 0)
    94bb:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    94bf:	74 11                	je     94d2 <_ZN10TerminalIO8read_keyEv+0x82>
        {
            std::printf("Num read is %d\r\n", num_read);
    94c1:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    94c4:	48 8d 3d a9 7d 00 00 	lea    rdi,[rip+0x7da9]        # 11274 <_IO_stdin_used+0x274>
    94cb:	b0 00                	mov    al,0x0
    94cd:	e8 8e af ff ff       	call   4460 <printf@plt>
        }
        c = 0;
    94d2:	c6 45 f4 00          	mov    BYTE PTR [rbp-0xc],0x0
    while((num_read = read(STDIN_FILENO, &c, 1)) != 1)
    94d6:	eb 99                	jmp    9471 <_ZN10TerminalIO8read_keyEv+0x21>
    }
    if(c == '\x1b')
    94d8:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    94dc:	83 f8 1b             	cmp    eax,0x1b
    94df:	0f 85 1b 01 00 00    	jne    9600 <_ZN10TerminalIO8read_keyEv+0x1b0>
    {
        char seq[3];
        if(read(STDIN_FILENO, &seq[0], 1) != 1)
    94e5:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    94e9:	31 ff                	xor    edi,edi
    94eb:	ba 01 00 00 00       	mov    edx,0x1
    94f0:	e8 eb b1 ff ff       	call   46e0 <read@plt>
    94f5:	48 83 f8 01          	cmp    rax,0x1
    94f9:	74 0d                	je     9508 <_ZN10TerminalIO8read_keyEv+0xb8>
        {
            return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    94fb:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    94ff:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    9503:	e9 64 01 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
        }
        if(read(STDIN_FILENO, &seq[1], 1) != 1)
    9508:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    950c:	48 83 c6 01          	add    rsi,0x1
    9510:	31 ff                	xor    edi,edi
    9512:	ba 01 00 00 00       	mov    edx,0x1
    9517:	e8 c4 b1 ff ff       	call   46e0 <read@plt>
    951c:	48 83 f8 01          	cmp    rax,0x1
    9520:	74 0d                	je     952f <_ZN10TerminalIO8read_keyEv+0xdf>
        {
            return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    9522:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9526:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    952a:	e9 3d 01 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
        }
        if(seq[0] == '[')
    952f:	0f be 45 f5          	movsx  eax,BYTE PTR [rbp-0xb]
    9533:	83 f8 5b             	cmp    eax,0x5b
    9536:	0f 85 ba 00 00 00    	jne    95f6 <_ZN10TerminalIO8read_keyEv+0x1a6>
        {
            if(seq[1] >= '0' && seq[1] <= '9')
    953c:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    9540:	83 f8 30             	cmp    eax,0x30
    9543:	7c 53                	jl     9598 <_ZN10TerminalIO8read_keyEv+0x148>
    9545:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    9549:	83 f8 39             	cmp    eax,0x39
    954c:	7f 4a                	jg     9598 <_ZN10TerminalIO8read_keyEv+0x148>
            {
                if(read(STDIN_FILENO, &seq[2], 1) != 1)
    954e:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    9552:	48 83 c6 02          	add    rsi,0x2
    9556:	31 ff                	xor    edi,edi
    9558:	ba 01 00 00 00       	mov    edx,0x1
    955d:	e8 7e b1 ff ff       	call   46e0 <read@plt>
    9562:	48 83 f8 01          	cmp    rax,0x1
    9566:	74 0d                	je     9575 <_ZN10TerminalIO8read_keyEv+0x125>
                {
                    return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    9568:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    956c:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    9570:	e9 f7 00 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                }
                if(seq[2] == '~')
    9575:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
    9579:	83 f8 7e             	cmp    eax,0x7e
    957c:	75 18                	jne    9596 <_ZN10TerminalIO8read_keyEv+0x146>
                {
                    switch(seq[1])
    957e:	8a 45 f6             	mov    al,BYTE PTR [rbp-0xa]
    9581:	2c 33                	sub    al,0x33
    9583:	75 0f                	jne    9594 <_ZN10TerminalIO8read_keyEv+0x144>
    9585:	eb 00                	jmp    9587 <_ZN10TerminalIO8read_keyEv+0x137>
                    {
                        case '3':
                        {
                            return (Key){.special = true, .value = KeyValue::KEY_DELETE};
    9587:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    958b:	c6 45 f3 06          	mov    BYTE PTR [rbp-0xd],0x6
    958f:	e9 d8 00 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                        }
                    }
                }
    9594:	eb 00                	jmp    9596 <_ZN10TerminalIO8read_keyEv+0x146>
            }
    9596:	eb 5c                	jmp    95f4 <_ZN10TerminalIO8read_keyEv+0x1a4>
            else
            {
                switch(seq[1])
    9598:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    959c:	83 c0 bf             	add    eax,0xffffffbf
    959f:	89 c1                	mov    ecx,eax
    95a1:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    95a5:	83 e8 03             	sub    eax,0x3
    95a8:	77 46                	ja     95f0 <_ZN10TerminalIO8read_keyEv+0x1a0>
    95aa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    95ae:	48 8d 0d c7 7e 00 00 	lea    rcx,[rip+0x7ec7]        # 1147c <_IO_stdin_used+0x47c>
    95b5:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    95b9:	48 01 c8             	add    rax,rcx
    95bc:	3e ff e0             	notrack jmp rax
                {
                    case 'A':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_UP};
    95bf:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95c3:	c6 45 f3 01          	mov    BYTE PTR [rbp-0xd],0x1
    95c7:	e9 a0 00 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                    }
                    case 'B':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_DOWN};
    95cc:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95d0:	c6 45 f3 02          	mov    BYTE PTR [rbp-0xd],0x2
    95d4:	e9 93 00 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                    }
                    case 'C':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_RIGHT};
    95d9:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95dd:	c6 45 f3 04          	mov    BYTE PTR [rbp-0xd],0x4
    95e1:	e9 86 00 00 00       	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                    }
                    case 'D':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_LEFT};
    95e6:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95ea:	c6 45 f3 03          	mov    BYTE PTR [rbp-0xd],0x3
    95ee:	eb 7c                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
                    }
                    default:
                    {
                        break;
    95f0:	eb 00                	jmp    95f2 <_ZN10TerminalIO8read_keyEv+0x1a2>
    95f2:	eb 00                	jmp    95f4 <_ZN10TerminalIO8read_keyEv+0x1a4>
                    }
                }
            }
        }
    95f4:	eb 00                	jmp    95f6 <_ZN10TerminalIO8read_keyEv+0x1a6>
        return (Key){.special = true, .value = KEY_INVALID};
    95f6:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95fa:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    95fe:	eb 6c                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
    }
    else if(c == 127)
    9600:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    9604:	83 f8 7f             	cmp    eax,0x7f
    9607:	75 0a                	jne    9613 <_ZN10TerminalIO8read_keyEv+0x1c3>
    {
        return (Key){.special = true, .value = KEY_BACKSPACE};
    9609:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    960d:	c6 45 f3 05          	mov    BYTE PTR [rbp-0xd],0x5
    9611:	eb 59                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
    }
    else if(c == '\n' || c == '\r')
    9613:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    9617:	83 f8 0a             	cmp    eax,0xa
    961a:	74 09                	je     9625 <_ZN10TerminalIO8read_keyEv+0x1d5>
    961c:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    9620:	83 f8 0d             	cmp    eax,0xd
    9623:	75 0a                	jne    962f <_ZN10TerminalIO8read_keyEv+0x1df>
    {
        return (Key){.special = true, .value = KEY_NEWLINE};
    9625:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9629:	c6 45 f3 07          	mov    BYTE PTR [rbp-0xd],0x7
    962d:	eb 3d                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
    }
    else if(c == '\t')
    962f:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    9633:	83 f8 09             	cmp    eax,0x9
    9636:	75 0a                	jne    9642 <_ZN10TerminalIO8read_keyEv+0x1f2>
    {
        return (Key){.special = true, .value = KEY_TAB};
    9638:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    963c:	c6 45 f3 08          	mov    BYTE PTR [rbp-0xd],0x8
    9640:	eb 2a                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
    }
    else if(!iscntrl(c))
    9642:	0f be 7d f4          	movsx  edi,BYTE PTR [rbp-0xc]
    9646:	e8 d5 b0 ff ff       	call   4720 <iscntrl@plt>
    964b:	83 f8 00             	cmp    eax,0x0
    964e:	75 0c                	jne    965c <_ZN10TerminalIO8read_keyEv+0x20c>
    {
        return (Key){.special = false, .value = c};
    9650:	c6 45 f2 00          	mov    BYTE PTR [rbp-0xe],0x0
    9654:	8a 45 f4             	mov    al,BYTE PTR [rbp-0xc]
    9657:	88 45 f3             	mov    BYTE PTR [rbp-0xd],al
    965a:	eb 10                	jmp    966c <_ZN10TerminalIO8read_keyEv+0x21c>
    965c:	eb 00                	jmp    965e <_ZN10TerminalIO8read_keyEv+0x20e>
    965e:	eb 00                	jmp    9660 <_ZN10TerminalIO8read_keyEv+0x210>
    9660:	eb 00                	jmp    9662 <_ZN10TerminalIO8read_keyEv+0x212>
    9662:	eb 00                	jmp    9664 <_ZN10TerminalIO8read_keyEv+0x214>
    }
    return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    9664:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9668:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
}
    966c:	66 8b 45 f2          	mov    ax,WORD PTR [rbp-0xe]
    9670:	66 89 45 d6          	mov    WORD PTR [rbp-0x2a],ax
    9674:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    967b:	00 00 
    967d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9681:	48 39 c8             	cmp    rax,rcx
    9684:	75 0a                	jne    9690 <_ZN10TerminalIO8read_keyEv+0x240>
    9686:	66 8b 45 d6          	mov    ax,WORD PTR [rbp-0x2a]
    968a:	48 83 c4 30          	add    rsp,0x30
    968e:	5d                   	pop    rbp
    968f:	c3                   	ret
    9690:	e8 3b af ff ff       	call   45d0 <__stack_chk_fail@plt>
    9695:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    969c:	00 00 00 00 

00000000000096a0 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE>:

std::string TerminalIO::get_line(const std::string& prompt, std::vector<std::string>& lines)
{
    96a0:	f3 0f 1e fa          	endbr64
    96a4:	55                   	push   rbp
    96a5:	48 89 e5             	mov    rbp,rsp
    96a8:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    96af:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    96b6:	48 89 f8             	mov    rax,rdi
    96b9:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    96c0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    96c7:	00 00 
    96c9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    96cd:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    96d1:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    96d5:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    96d9:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    96dd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    96e1:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    std::string current_line = "";
    96e8:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    96ec:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    96f0:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    96f4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    96f8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    96fc:	48 8d 35 46 7d 00 00 	lea    rsi,[rip+0x7d46]        # 11449 <_IO_stdin_used+0x449>
    9703:	e8 98 c9 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    9708:	eb 00                	jmp    970a <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x6a>
    970a:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    970e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    std::size_t cursor_pos = 0;
    9712:	48 c7 45 90 00 00 00 	mov    QWORD PTR [rbp-0x70],0x0
    9719:	00 
    std::size_t row = lines.size();
    971a:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    971e:	e8 5d c7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9723:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    972a:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    print("\33[2K\r");
    972e:	48 8d 35 50 7b 00 00 	lea    rsi,[rip+0x7b50]        # 11285 <_IO_stdin_used+0x285>
    9735:	31 c0                	xor    eax,eax
    9737:	e8 34 fb ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    973c:	eb 00                	jmp    973e <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x9e>
    print("%s >> ", prompt.c_str());
    973e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9742:	e8 89 c7 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9747:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    974e:	48 89 c2             	mov    rdx,rax
    9751:	48 8d 35 33 7b 00 00 	lea    rsi,[rip+0x7b33]        # 1128b <_IO_stdin_used+0x28b>
    9758:	31 c0                	xor    eax,eax
    975a:	e8 11 fb ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    975f:	eb 00                	jmp    9761 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc1>
    while(true)
    9761:	eb 00                	jmp    9763 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc3>
    9763:	eb 00                	jmp    9765 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc5>
    9765:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    {
        Key next_key = read_key();
    976c:	e8 df fc ff ff       	call   9450 <_ZN10TerminalIO8read_keyEv>
    9771:	66 89 85 66 ff ff ff 	mov    WORD PTR [rbp-0x9a],ax
    9778:	eb 00                	jmp    977a <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xda>
    977a:	66 8b 85 66 ff ff ff 	mov    ax,WORD PTR [rbp-0x9a]
    9781:	66 89 45 86          	mov    WORD PTR [rbp-0x7a],ax
        if(next_key.special)
    9785:	f6 45 86 01          	test   BYTE PTR [rbp-0x7a],0x1
    9789:	0f 84 82 02 00 00    	je     9a11 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x371>
        {
            switch(next_key.value)
    978f:	0f be 45 87          	movsx  eax,BYTE PTR [rbp-0x79]
    9793:	ff c8                	dec    eax
    9795:	89 c1                	mov    ecx,eax
    9797:	48 89 8d 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rcx
    979e:	83 e8 06             	sub    eax,0x6
    97a1:	0f 87 66 02 00 00    	ja     9a0d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36d>
    97a7:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    97ae:	48 8d 0d d7 7c 00 00 	lea    rcx,[rip+0x7cd7]        # 1148c <_IO_stdin_used+0x48c>
    97b5:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    97b9:	48 01 c8             	add    rax,rcx
    97bc:	3e ff e0             	notrack jmp rax
    97bf:	f3 0f 1e fa          	endbr64
    97c3:	48 89 c1             	mov    rcx,rax
        print("%s >> %s", prompt.c_str(), current_line.c_str());
        // https://cloudaffle.com/series/customizing-the-prompt/moving-the-cursor/ for ansi codes for moving the cursor
        print("\e[1C");
        print("\e[%zuD", current_line.length() - cursor_pos + 1);
    }
}
    97c6:	89 d0                	mov    eax,edx
    97c8:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    97cc:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    97cf:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    97d3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    std::string current_line = "";
    97d7:	e9 37 03 00 00       	jmp    9b13 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x473>
    97dc:	f3 0f 1e fa          	endbr64
    97e0:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    97e7:	48 89 c1             	mov    rcx,rax
}
    97ea:	89 d0                	mov    eax,edx
    97ec:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    97f0:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    97f3:	e8 58 c9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    97f8:	e9 16 03 00 00       	jmp    9b13 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x473>
    97fd:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos < current_line.length())
    9804:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9808:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    980f:	e8 6c c8 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9814:	48 89 c1             	mov    rcx,rax
    9817:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    981e:	48 39 c8             	cmp    rax,rcx
    9821:	73 19                	jae    983c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19c>
    9823:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        current_line.erase(cursor_pos, 1);
    982a:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    982e:	ba 01 00 00 00       	mov    edx,0x1
    9833:	e8 18 03 00 00       	call   9b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>
    9838:	eb 00                	jmp    983a <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19a>
                    }
    983a:	eb 00                	jmp    983c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19c>
                    row = lines.size();
    983c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9840:	e8 3b c6 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9845:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                    break;
    9849:	e9 c1 01 00 00       	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    984e:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos <= current_line.length() && cursor_pos > 0)
    9855:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9859:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9860:	e8 1b c8 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9865:	48 89 c1             	mov    rcx,rax
    9868:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    986f:	48 39 c8             	cmp    rax,rcx
    9872:	77 49                	ja     98bd <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x21d>
    9874:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    9879:	76 42                	jbe    98bd <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x21d>
    987b:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        current_line = current_line.erase(cursor_pos - 1, 1);
    9882:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    9886:	48 ff ce             	dec    rsi
    9889:	ba 01 00 00 00       	mov    edx,0x1
    988e:	e8 bd 02 00 00       	call   9b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>
    9893:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    989a:	eb 00                	jmp    989c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x1fc>
    989c:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    98a3:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    98aa:	e8 31 03 00 00       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    98af:	eb 00                	jmp    98b1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x211>
                        cursor_pos--;
    98b1:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    98b5:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    98b9:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    row = lines.size();
    98bd:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    98c1:	e8 ba c5 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    98c6:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                    break;
    98ca:	e9 40 01 00 00       	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(cursor_pos > 0)
    98cf:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    98d4:	76 0c                	jbe    98e2 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x242>
                        cursor_pos--;
    98d6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    98da:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    98de:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    98e2:	e9 28 01 00 00       	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    98e7:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos < current_line.length())
    98ee:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    98f2:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    98f9:	e8 82 c7 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    98fe:	48 89 c1             	mov    rcx,rax
    9901:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    9908:	48 39 c8             	cmp    rax,rcx
    990b:	73 0c                	jae    9919 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x279>
                        cursor_pos++;
    990d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9911:	48 83 c0 01          	add    rax,0x1
    9915:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    9919:	e9 f1 00 00 00       	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(row > 0 && lines.size() > 0)
    991e:	48 83 7d 88 00       	cmp    QWORD PTR [rbp-0x78],0x0
    9923:	76 48                	jbe    996d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2cd>
    9925:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9929:	e8 52 c5 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    992e:	48 83 f8 00          	cmp    rax,0x0
    9932:	76 39                	jbe    996d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2cd>
                        row--;
    9934:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    9938:	48 ff c8             	dec    rax
    993b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                        current_line = lines[row];
    993f:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9943:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    9947:	e8 24 ce ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    994c:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    9953:	48 89 c6             	mov    rsi,rax
    9956:	e8 85 02 00 00       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    995b:	eb 00                	jmp    995d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2bd>
    995d:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        cursor_pos = current_line.length();
    9964:	e8 17 c7 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9969:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    996d:	e9 9d 00 00 00       	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(lines.size() != 0 && row < lines.size() - 1)
    9972:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9976:	e8 05 c5 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    997b:	48 83 f8 00          	cmp    rax,0x0
    997f:	74 60                	je     99e1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x341>
    9981:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    9985:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    998c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9990:	e8 eb c4 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9995:	48 89 c1             	mov    rcx,rax
    9998:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    999f:	48 83 e9 01          	sub    rcx,0x1
    99a3:	48 39 c8             	cmp    rax,rcx
    99a6:	73 39                	jae    99e1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x341>
                        row++;
    99a8:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    99ac:	48 ff c0             	inc    rax
    99af:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                        current_line = lines[row];
    99b3:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    99b7:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    99bb:	e8 b0 cd ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    99c0:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    99c7:	48 89 c6             	mov    rsi,rax
    99ca:	e8 11 02 00 00       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    99cf:	eb 00                	jmp    99d1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x331>
    99d1:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        cursor_pos = current_line.length();
    99d8:	e8 a3 c6 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    99dd:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    99e1:	eb 2c                	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    99e3:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
                    print("\r\n");
    99ea:	48 8d 35 56 7a 00 00 	lea    rsi,[rip+0x7a56]        # 11447 <_IO_stdin_used+0x447>
    99f1:	31 c0                	xor    eax,eax
    99f3:	e8 78 f8 ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    99f8:	eb 00                	jmp    99fa <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x35a>
                    return current_line;
    99fa:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
}
    99fe:	f6 45 af 01          	test   BYTE PTR [rbp-0x51],0x1
    9a02:	0f 85 e9 00 00 00    	jne    9af1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x451>
    9a08:	e9 d8 00 00 00       	jmp    9ae5 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x445>
                    break;
    9a0d:	eb 00                	jmp    9a0f <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
        }
    9a0f:	eb 34                	jmp    9a45 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3a5>
    9a11:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
           current_line.insert(cursor_pos, 1, next_key.value);
    9a18:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    9a1c:	0f be 4d 87          	movsx  ecx,BYTE PTR [rbp-0x79]
    9a20:	ba 01 00 00 00       	mov    edx,0x1
    9a25:	e8 e6 01 00 00       	call   9c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc>
    9a2a:	eb 00                	jmp    9a2c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x38c>
           row = lines.size();
    9a2c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9a30:	e8 4b c4 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9a35:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
           cursor_pos++;
    9a39:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9a3d:	48 83 c0 01          	add    rax,0x1
    9a41:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    9a45:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
        print("\33[2K\r");
    9a4c:	48 8d 35 32 78 00 00 	lea    rsi,[rip+0x7832]        # 11285 <_IO_stdin_used+0x285>
    9a53:	31 c0                	xor    eax,eax
    9a55:	e8 16 f8 ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    9a5a:	eb 00                	jmp    9a5c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3bc>
        print("%s >> %s", prompt.c_str(), current_line.c_str());
    9a5c:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9a60:	e8 6b c4 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9a65:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    9a6c:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    9a73:	e8 58 c4 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9a78:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    9a7f:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
    9a86:	48 89 c1             	mov    rcx,rax
    9a89:	48 8d 35 02 78 00 00 	lea    rsi,[rip+0x7802]        # 11292 <_IO_stdin_used+0x292>
    9a90:	31 c0                	xor    eax,eax
    9a92:	e8 d9 f7 ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    9a97:	eb 00                	jmp    9a99 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3f9>
    9a99:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
        print("\e[1C");
    9aa0:	48 8d 35 f4 77 00 00 	lea    rsi,[rip+0x77f4]        # 1129b <_IO_stdin_used+0x29b>
    9aa7:	31 c0                	xor    eax,eax
    9aa9:	e8 c2 f7 ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    9aae:	eb 00                	jmp    9ab0 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x410>
    9ab0:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
        print("\e[%zuD", current_line.length() - cursor_pos + 1);
    9ab7:	e8 c4 c5 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9abc:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    9ac3:	48 89 c2             	mov    rdx,rax
    9ac6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9aca:	48 29 c2             	sub    rdx,rax
    9acd:	48 ff c2             	inc    rdx
    9ad0:	48 8d 35 c9 77 00 00 	lea    rsi,[rip+0x77c9]        # 112a0 <_IO_stdin_used+0x2a0>
    9ad7:	31 c0                	xor    eax,eax
    9ad9:	e8 92 f7 ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    9ade:	eb 00                	jmp    9ae0 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x440>
    while(true)
    9ae0:	e9 7e fc ff ff       	jmp    9763 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc3>
    9ae5:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
}
    9aec:	e8 5f c6 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    9af1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9af8:	00 00 
    9afa:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9afe:	48 39 c8             	cmp    rax,rcx
    9b01:	75 39                	jne    9b3c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x49c>
    9b03:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    9b0a:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    9b11:	5d                   	pop    rbp
    9b12:	c3                   	ret
    std::string current_line = "";
    9b13:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    9b17:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    9b1e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9b25:	00 00 
    9b27:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9b2b:	48 39 c8             	cmp    rax,rcx
    9b2e:	75 0c                	jne    9b3c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x49c>
    9b30:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    9b37:	e8 44 a9 ff ff       	call   4480 <_Unwind_Resume@plt>
    9b3c:	e8 8f aa ff ff       	call   45d0 <__stack_chk_fail@plt>
    9b41:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9b48:	00 00 00 
    9b4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>:
      {
    9b50:	f3 0f 1e fa          	endbr64
    9b54:	55                   	push   rbp
    9b55:	48 89 e5             	mov    rbp,rsp
    9b58:	48 83 ec 30          	sub    rsp,0x30
    9b5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9b60:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9b64:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9b68:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9b6c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	_M_check(__pos, "basic_string::erase");
    9b70:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9b74:	48 8d 15 2c 77 00 00 	lea    rdx,[rip+0x772c]        # 112a7 <_IO_stdin_used+0x2a7>
    9b7b:	e8 f0 00 00 00       	call   9c70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
	if (__n == npos)
    9b80:	48 83 7d e8 ff       	cmp    QWORD PTR [rbp-0x18],0xffffffffffffffff
    9b85:	75 0f                	jne    9b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x46>
    9b87:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	  this->_M_set_length(__pos);
    9b8b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9b8f:	e8 fc d0 ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    9b94:	eb 32                	jmp    9bc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x78>
	else if (__n != 0)
    9b96:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    9b9b:	74 29                	je     9bc6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x76>
    9b9d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	  this->_M_erase(__pos, _M_limit(__pos, __n));
    9ba1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9ba5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    9ba9:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9bad:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9bb1:	e8 ca 01 00 00       	call   9d80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    9bb6:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9bba:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    9bbe:	48 89 c2             	mov    rdx,rax
    9bc1:	e8 2a 01 00 00       	call   9cf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm>
    9bc6:	eb 00                	jmp    9bc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x78>
    9bc8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return *this;
    9bcc:	48 83 c4 30          	add    rsp,0x30
    9bd0:	5d                   	pop    rbp
    9bd1:	c3                   	ret
    9bd2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9bd9:	00 00 00 
    9bdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000009be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
      {
    9be0:	f3 0f 1e fa          	endbr64
    9be4:	55                   	push   rbp
    9be5:	48 89 e5             	mov    rbp,rsp
    9be8:	48 83 ec 10          	sub    rsp,0x10
    9bec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9bf0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9bf4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return this->assign(__str);
    9bf8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9bfc:	e8 ef 01 00 00       	call   9df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>
    9c01:	48 83 c4 10          	add    rsp,0x10
    9c05:	5d                   	pop    rbp
    9c06:	c3                   	ret
    9c07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9c0e:	00 00 

0000000000009c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc>:
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
    9c10:	f3 0f 1e fa          	endbr64
    9c14:	55                   	push   rbp
    9c15:	48 89 e5             	mov    rbp,rsp
    9c18:	48 83 ec 30          	sub    rsp,0x30
    9c1c:	88 c8                	mov    al,cl
    9c1e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9c22:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9c26:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9c2a:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    9c2d:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9c31:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9c35:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9c39:	48 8d 15 b2 76 00 00 	lea    rdx,[rip+0x76b2]        # 112f2 <_IO_stdin_used+0x2f2>
    9c40:	e8 2b 00 00 00       	call   9c70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    9c45:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9c49:	48 89 c6             	mov    rsi,rax
			      size_type(0), __n, __c); }
    9c4c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
    9c50:	31 c0                	xor    eax,eax
    9c52:	89 c2                	mov    edx,eax
    9c54:	44 0f be 45 e7       	movsx  r8d,BYTE PTR [rbp-0x19]
    9c59:	e8 b2 02 00 00       	call   9f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc>
    9c5e:	48 83 c4 30          	add    rsp,0x30
    9c62:	5d                   	pop    rbp
    9c63:	c3                   	ret
    9c64:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9c6b:	00 00 00 
    9c6e:	66 90                	xchg   ax,ax

0000000000009c70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      {
    9c70:	f3 0f 1e fa          	endbr64
    9c74:	55                   	push   rbp
    9c75:	48 89 e5             	mov    rbp,rsp
    9c78:	48 83 ec 40          	sub    rsp,0x40
    9c7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9c80:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9c84:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9c88:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9c8c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	if (__pos > this->size())
    9c90:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9c94:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    9c98:	e8 93 d6 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9c9d:	48 89 c1             	mov    rcx,rax
    9ca0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9ca4:	48 39 c8             	cmp    rax,rcx
    9ca7:	76 32                	jbe    9cdb <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x6b>
    9ca9:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
				   __s, __pos, this->size());
    9cad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9cb1:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9cb5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9cb9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9cbd:	e8 6e d6 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9cc2:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    9cc6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    9cca:	48 89 c1             	mov    rcx,rax
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    9ccd:	48 8d 3d e7 75 00 00 	lea    rdi,[rip+0x75e7]        # 112bb <_IO_stdin_used+0x2bb>
    9cd4:	b0 00                	mov    al,0x0
    9cd6:	e8 85 aa ff ff       	call   4760 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    9cdb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9cdf:	48 83 c4 40          	add    rsp,0x40
    9ce3:	5d                   	pop    rbp
    9ce4:	c3                   	ret
    9ce5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9cec:	00 00 00 
    9cef:	90                   	nop

0000000000009cf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm>:
    {
    9cf0:	f3 0f 1e fa          	endbr64
    9cf4:	55                   	push   rbp
    9cf5:	48 89 e5             	mov    rbp,rsp
    9cf8:	48 83 ec 30          	sub    rsp,0x30
    9cfc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9d00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9d04:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9d08:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9d0c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
      const size_type __how_much = length() - __pos - __n;
    9d10:	e8 6b c3 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9d15:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9d19:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9d1d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__how_much && __n)
    9d21:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    9d26:	74 39                	je     9d61 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm+0x71>
    9d28:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    9d2d:	74 32                	je     9d61 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm+0x71>
    9d2f:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	this->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);
    9d33:	e8 88 cb ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9d38:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9d3c:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    9d40:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9d44:	e8 77 cb ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9d49:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    9d4d:	48 89 c6             	mov    rsi,rax
    9d50:	48 03 75 f0          	add    rsi,QWORD PTR [rbp-0x10]
    9d54:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    9d58:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    9d5c:	e8 df e5 ff ff       	call   8340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    9d61:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
      _M_set_length(length() - __n);
    9d65:	e8 16 c3 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9d6a:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9d6e:	48 89 c6             	mov    rsi,rax
    9d71:	48 2b 75 e8          	sub    rsi,QWORD PTR [rbp-0x18]
    9d75:	e8 16 cf ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    }
    9d7a:	48 83 c4 30          	add    rsp,0x30
    9d7e:	5d                   	pop    rbp
    9d7f:	c3                   	ret

0000000000009d80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      {
    9d80:	f3 0f 1e fa          	endbr64
    9d84:	55                   	push   rbp
    9d85:	48 89 e5             	mov    rbp,rsp
    9d88:	48 83 ec 40          	sub    rsp,0x40
    9d8c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9d90:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9d94:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9d98:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9d9c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	const bool __testoff =  __off < this->size() - __pos;
    9da0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9da4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    9da8:	e8 83 d5 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9dad:	48 89 c1             	mov    rcx,rax
    9db0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9db4:	48 2b 4d f0          	sub    rcx,QWORD PTR [rbp-0x10]
    9db8:	48 39 c8             	cmp    rax,rcx
    9dbb:	0f 92 c0             	setb   al
    9dbe:	24 01                	and    al,0x1
    9dc0:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
	return __testoff ? __off : this->size() - __pos;
    9dc3:	f6 45 e7 01          	test   BYTE PTR [rbp-0x19],0x1
    9dc7:	74 0a                	je     9dd3 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x53>
    9dc9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9dcd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9dd1:	eb 11                	jmp    9de4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x64>
    9dd3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    9dd7:	e8 54 d5 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9ddc:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9de0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9de4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9de8:	48 83 c4 40          	add    rsp,0x40
    9dec:	5d                   	pop    rbp
    9ded:	c3                   	ret
    9dee:	66 90                	xchg   ax,ax

0000000000009df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>:
      {
    9df0:	f3 0f 1e fa          	endbr64
    9df4:	55                   	push   rbp
    9df5:	48 89 e5             	mov    rbp,rsp
    9df8:	48 83 ec 20          	sub    rsp,0x20
    9dfc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9e00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9e04:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9e08:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	this->_M_assign(__str);
    9e0c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9e10:	e8 0b 00 00 00       	call   9e20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    9e15:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	return *this;
    9e19:	48 83 c4 20          	add    rsp,0x20
    9e1d:	5d                   	pop    rbp
    9e1e:	c3                   	ret
    9e1f:	90                   	nop

0000000000009e20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
    {
    9e20:	f3 0f 1e fa          	endbr64
    9e24:	55                   	push   rbp
    9e25:	48 89 e5             	mov    rbp,rsp
    9e28:	48 83 ec 50          	sub    rsp,0x50
    9e2c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9e33:	00 00 
    9e35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9e39:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9e3d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9e41:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e45:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      if (this != std::__addressof(__str))
    9e49:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    9e4d:	0f 84 9e 00 00 00    	je     9ef1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xd1>
	  const size_type __rsize = __str.length();
    9e53:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9e57:	e8 24 c2 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9e5c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9e60:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  const size_type __capacity = capacity();
    9e64:	e8 c7 e3 ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9e69:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	  if (__rsize > __capacity)
    9e6d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e71:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    9e75:	76 40                	jbe    9eb7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x97>
    9e77:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      size_type __new_capacity = __rsize;
    9e7b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e7f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	      pointer __tmp = _M_create(__new_capacity, __capacity);
    9e83:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    9e87:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    9e8b:	e8 b0 cc ff ff       	call   6b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9e90:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9e94:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	      _M_dispose();
    9e98:	e8 a3 d0 ff ff       	call   6f40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9e9d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      _M_data(__tmp);
    9ea1:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    9ea5:	e8 76 cc ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    9eaa:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      _M_capacity(__new_capacity);
    9eae:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9eb2:	e8 59 cd ff ff       	call   6c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  if (__rsize)
    9eb7:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    9ebc:	74 26                	je     9ee4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc4>
    9ebe:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	    this->_S_copy(_M_data(), __str._M_data(), __rsize);
    9ec2:	e8 f9 c9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9ec7:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9ecb:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9ecf:	e8 ec c9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9ed4:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9ed8:	48 89 c6             	mov    rsi,rax
    9edb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    9edf:	e8 7c cf ff ff       	call   6e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    9ee4:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  _M_set_length(__rsize);
    9ee8:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    9eec:	e8 9f cd ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    }
    9ef1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ef8:	00 00 
    9efa:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9efe:	48 39 c8             	cmp    rax,rcx
    9f01:	75 06                	jne    9f09 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xe9>
    9f03:	48 83 c4 50          	add    rsp,0x50
    9f07:	5d                   	pop    rbp
    9f08:	c3                   	ret
    9f09:	e8 c2 a6 ff ff       	call   45d0 <__stack_chk_fail@plt>
    9f0e:	66 90                	xchg   ax,ax

0000000000009f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc>:
    {
    9f10:	f3 0f 1e fa          	endbr64
    9f14:	55                   	push   rbp
    9f15:	48 89 e5             	mov    rbp,rsp
    9f18:	48 83 ec 60          	sub    rsp,0x60
    9f1c:	44 88 c0             	mov    al,r8b
    9f1f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9f23:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9f27:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9f2b:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    9f2f:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    9f32:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9f36:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
      _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
    9f3a:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    9f3e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    9f42:	48 8d 0d be 73 00 00 	lea    rcx,[rip+0x73be]        # 11307 <_IO_stdin_used+0x307>
    9f49:	e8 82 e2 ff ff       	call   81d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    9f4e:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      const size_type __old_size = this->size();
    9f52:	e8 d9 d3 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9f57:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    9f5b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      const size_type __new_size = __old_size + __n2 - __n1;
    9f5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f63:	48 03 45 e0          	add    rax,QWORD PTR [rbp-0x20]
    9f67:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9f6b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      if (__new_size <= this->capacity())
    9f6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f73:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f77:	e8 b4 e2 ff ff       	call   8230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9f7c:	48 89 c1             	mov    rcx,rax
    9f7f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f83:	48 39 c8             	cmp    rax,rcx
    9f86:	77 4d                	ja     9fd5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc5>
    9f88:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	  pointer __p = this->_M_data() + __pos1;
    9f8c:	e8 2f c9 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9f91:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    9f95:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  const size_type __how_much = __old_size - __pos1 - __n1;
    9f99:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f9d:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9fa1:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9fa5:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  if (__how_much && __n1 != __n2)
    9fa9:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    9fae:	74 23                	je     9fd3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc3>
    9fb0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9fb4:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    9fb8:	74 19                	je     9fd3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc3>
	    this->_S_move(__p + __n2, __p + __n1, __how_much);
    9fba:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9fbe:	48 03 7d e0          	add    rdi,QWORD PTR [rbp-0x20]
    9fc2:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    9fc6:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    9fca:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9fce:	e8 6d e3 ff ff       	call   8340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	}
    9fd3:	eb 19                	jmp    9fee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xde>
    9fd5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	this->_M_mutate(__pos1, __n1, 0, __n2);
    9fd9:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9fdd:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9fe1:	4c 8b 45 e0          	mov    r8,QWORD PTR [rbp-0x20]
    9fe5:	31 c0                	xor    eax,eax
    9fe7:	89 c1                	mov    ecx,eax
    9fe9:	e8 a2 e3 ff ff       	call   8390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
      if (__n2)
    9fee:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    9ff3:	74 1d                	je     a012 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0x102>
    9ff5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	this->_S_assign(this->_M_data() + __pos1, __n2, __c);
    9ff9:	e8 c2 c8 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9ffe:	48 89 c7             	mov    rdi,rax
    a001:	48 03 7d f0          	add    rdi,QWORD PTR [rbp-0x10]
    a005:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    a009:	0f be 55 df          	movsx  edx,BYTE PTR [rbp-0x21]
    a00d:	e8 1e 00 00 00       	call   a030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc>
    a012:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      this->_M_set_length(__new_size);
    a016:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    a01a:	e8 71 cc ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    a01f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
      return *this;
    a023:	48 83 c4 60          	add    rsp,0x60
    a027:	5d                   	pop    rbp
    a028:	c3                   	ret
    a029:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc>:
      {
    a030:	f3 0f 1e fa          	endbr64
    a034:	55                   	push   rbp
    a035:	48 89 e5             	mov    rbp,rsp
    a038:	48 83 ec 20          	sub    rsp,0x20
    a03c:	88 d0                	mov    al,dl
    a03e:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    a045:	00 00 
    a047:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    a04b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a04f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    a053:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
	if (__n == 1)
    a056:	48 83 7d e0 01       	cmp    QWORD PTR [rbp-0x20],0x1
    a05b:	75 0f                	jne    a06c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x3c>
	  traits_type::assign(*__d, __c);
    a05d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    a061:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    a065:	e8 46 ce ff ff       	call   6eb0 <_ZNSt11char_traitsIcE6assignERcRKc>
    a06a:	eb 11                	jmp    a07d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x4d>
	  traits_type::assign(__d, __n, __c);
    a06c:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    a070:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    a074:	0f be 55 f7          	movsx  edx,BYTE PTR [rbp-0x9]
    a078:	e8 23 00 00 00       	call   a0a0 <_ZNSt11char_traitsIcE6assignEPcmc>
      }
    a07d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a084:	00 00 
    a086:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a08a:	48 39 c8             	cmp    rax,rcx
    a08d:	75 06                	jne    a095 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x65>
    a08f:	48 83 c4 20          	add    rsp,0x20
    a093:	5d                   	pop    rbp
    a094:	c3                   	ret
    a095:	e8 36 a5 ff ff       	call   45d0 <__stack_chk_fail@plt>
    a09a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a0a0 <_ZNSt11char_traitsIcE6assignEPcmc>:

      static _GLIBCXX20_CONSTEXPR char_type*
      assign(char_type* __s, size_t __n, char_type __a)
      {
    a0a0:	f3 0f 1e fa          	endbr64
    a0a4:	55                   	push   rbp
    a0a5:	48 89 e5             	mov    rbp,rsp
    a0a8:	48 83 ec 30          	sub    rsp,0x30
    a0ac:	88 d0                	mov    al,dl
    a0ae:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a0b2:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    a0b6:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
	if (__n == 0)
    a0b9:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    a0be:	75 0a                	jne    a0ca <_ZNSt11char_traitsIcE6assignEPcmc+0x2a>
	  return __s;
    a0c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a0c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a0c8:	eb 20                	jmp    a0ea <_ZNSt11char_traitsIcE6assignEPcmc+0x4a>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::assign(__s, __n, __a);
#endif
	return static_cast<char_type*>(__builtin_memset(__s, __a, __n));
    a0ca:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a0ce:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    a0d2:	0f be 45 e7          	movsx  eax,BYTE PTR [rbp-0x19]
    a0d6:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    a0da:	0f b6 f0             	movzx  esi,al
    a0dd:	e8 3e a4 ff ff       	call   4520 <memset@plt>
    a0e2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a0e6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    a0ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0ee:	48 83 c4 30          	add    rsp,0x30
    a0f2:	5d                   	pop    rbp
    a0f3:	c3                   	ret
    a0f4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a0fb:	00 00 00 
    a0fe:	66 90                	xchg   ax,ax

000000000000a100 <_ZN8TerminalC1Ev>:
#include <cstdio>
#include <sys/stat.h>
#include <flapjack_commands.h>

Terminal::Terminal() : terminal_io(), parser()
{
    a100:	f3 0f 1e fa          	endbr64
    a104:	55                   	push   rbp
    a105:	48 89 e5             	mov    rbp,rsp
    a108:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    a10f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a116:	00 00 
    a118:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a11c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    a120:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    a124:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    a128:	48 89 f8             	mov    rax,rdi
    a12b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
Terminal::Terminal() : terminal_io(), parser()
    a12f:	e8 4c c3 ff ff       	call   6480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    a134:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    a138:	48 83 c7 20          	add    rdi,0x20
    a13c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a140:	e8 fb ee ff ff       	call   9040 <_ZN10TerminalIOC1Ev>
    a145:	eb 00                	jmp    a147 <_ZN8TerminalC1Ev+0x47>
    a147:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a14b:	48 83 c7 60          	add    rdi,0x60
    a14f:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    a153:	e8 48 09 00 00       	call   aaa0 <_ZN13VarelseParserC1Ev>
    a158:	eb 00                	jmp    a15a <_ZN8TerminalC1Ev+0x5a>
    a15a:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a15e:	48 81 c7 10 02 00 00 	add    rdi,0x210
    a165:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    a169:	e8 f2 c2 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    a16e:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    a172:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    current_dir = update_current_dir(current_dir);
    a176:	e8 65 a9 ff ff       	call   4ae0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    a17b:	eb 00                	jmp    a17d <_ZN8TerminalC1Ev+0x7d>
    a17d:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a181:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    a185:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    a189:	e8 02 c0 ff ff       	call   6190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    a18e:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    a192:	e8 b9 bf ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
}
    a197:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a19e:	00 00 
    a1a0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a1a4:	48 39 c8             	cmp    rax,rcx
    a1a7:	0f 85 84 00 00 00    	jne    a231 <_ZN8TerminalC1Ev+0x131>
    a1ad:	48 81 c4 80 00 00 00 	add    rsp,0x80
    a1b4:	5d                   	pop    rbp
    a1b5:	c3                   	ret
    a1b6:	f3 0f 1e fa          	endbr64
    a1ba:	48 89 c1             	mov    rcx,rax
    a1bd:	89 d0                	mov    eax,edx
    a1bf:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a1c3:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a1c6:	eb 3d                	jmp    a205 <_ZN8TerminalC1Ev+0x105>
    a1c8:	f3 0f 1e fa          	endbr64
    a1cc:	48 89 c1             	mov    rcx,rax
    a1cf:	89 d0                	mov    eax,edx
    a1d1:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a1d5:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a1d8:	eb 22                	jmp    a1fc <_ZN8TerminalC1Ev+0xfc>
    a1da:	f3 0f 1e fa          	endbr64
    a1de:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    a1e2:	48 89 c1             	mov    rcx,rax
    a1e5:	89 d0                	mov    eax,edx
    a1e7:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a1eb:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a1ee:	e8 0d c4 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a1f3:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    a1f7:	e8 94 05 00 00       	call   a790 <_ZN13VarelseParserD2Ev>
    a1fc:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    a200:	e8 3b ef ff ff       	call   9140 <_ZN10TerminalIOD1Ev>
    a205:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    a209:	e8 42 bf ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a20e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a212:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    a216:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a21d:	00 00 
    a21f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a223:	48 39 c8             	cmp    rax,rcx
    a226:	75 09                	jne    a231 <_ZN8TerminalC1Ev+0x131>
    a228:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    a22c:	e8 4f a2 ff ff       	call   4480 <_Unwind_Resume@plt>
    a231:	e8 9a a3 ff ff       	call   45d0 <__stack_chk_fail@plt>
    a236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a23d:	00 00 00 

000000000000a240 <_ZN8Terminal11run_cmdlineEv>:

void Terminal::run_cmdline()
{
    a240:	f3 0f 1e fa          	endbr64
    a244:	55                   	push   rbp
    a245:	48 89 e5             	mov    rbp,rsp
    a248:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    a24f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a256:	00 00 
    a258:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a25c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    a260:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a264:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    a268:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    while(true)
    {
        std::string line = terminal_io.get_line(current_dir, lines);
    a26c:	48 89 d6             	mov    rsi,rdx
    a26f:	48 83 c6 20          	add    rsi,0x20
    a273:	48 89 d1             	mov    rcx,rdx
    a276:	48 81 c1 10 02 00 00 	add    rcx,0x210
    a27d:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    a281:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a285:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    a289:	e8 12 f4 ff ff       	call   96a0 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE>
    a28e:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a292:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
        lines.emplace_back(line);
    a296:	e8 75 c2 ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a29b:	eb 00                	jmp    a29d <_ZN8Terminal11run_cmdlineEv+0x5d>
    a29d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
        parser.parse(terminal_io, current_dir, lines, lines.size() - 1);
    a2a1:	48 89 f8             	mov    rax,rdi
    a2a4:	48 83 c0 60          	add    rax,0x60
    a2a8:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    a2ac:	48 89 f8             	mov    rax,rdi
    a2af:	48 83 c0 20          	add    rax,0x20
    a2b3:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    a2b7:	48 81 c7 10 02 00 00 	add    rdi,0x210
    a2be:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    a2c2:	e8 b9 bb ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    a2c7:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    a2cb:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    a2cf:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a2d3:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    a2d7:	49 89 c0             	mov    r8,rax
    a2da:	49 ff c8             	dec    r8
    a2dd:	e8 de 14 00 00       	call   b7c0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>
    a2e2:	eb 00                	jmp    a2e4 <_ZN8Terminal11run_cmdlineEv+0xa4>
    }
    a2e4:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a2e8:	e8 63 be ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    while(true)
    a2ed:	e9 76 ff ff ff       	jmp    a268 <_ZN8Terminal11run_cmdlineEv+0x28>
    a2f2:	f3 0f 1e fa          	endbr64
    a2f6:	48 89 c1             	mov    rcx,rax
}
    a2f9:	89 d0                	mov    eax,edx
    a2fb:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a2ff:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    }
    a302:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a306:	e8 45 be ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a30b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a30f:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    a313:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a31a:	00 00 
    a31c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a320:	48 39 c8             	cmp    rax,rcx
    a323:	75 09                	jne    a32e <_ZN8Terminal11run_cmdlineEv+0xee>
    a325:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    a329:	e8 52 a1 ff ff       	call   4480 <_Unwind_Resume@plt>
    a32e:	e8 9d a2 ff ff       	call   45d0 <__stack_chk_fail@plt>
    a333:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    a33a:	84 00 00 00 00 00 

000000000000a340 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Terminal::run_file(const std::string& file_name)
{
    a340:	f3 0f 1e fa          	endbr64
    a344:	55                   	push   rbp
    a345:	48 89 e5             	mov    rbp,rsp
    a348:	48 81 ec a0 01 00 00 	sub    rsp,0x1a0
    a34f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a356:	00 00 
    a358:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a35c:	48 89 bd e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rdi
    a363:	48 89 b5 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rsi
    a36a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    a371:	48 89 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],rax
    std::FILE* file = fopen(file_name.c_str(), "r");
    a378:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a37f:	e8 4c bb ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a384:	48 89 c7             	mov    rdi,rax
    a387:	48 8d 35 48 6d 00 00 	lea    rsi,[rip+0x6d48]        # 110d6 <_IO_stdin_used+0xd6>
    a38e:	e8 7d a2 ff ff       	call   4610 <fopen@plt>
    a393:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
    if(file == NULL)
    a39a:	48 83 bd d0 fe ff ff 	cmp    QWORD PTR [rbp-0x130],0x0
    a3a1:	00 
    a3a2:	75 40                	jne    a3e4 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa4>
    a3a4:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Unable to open file '%s'\r\n", file_name.c_str());
    a3ab:	48 83 c0 20          	add    rax,0x20
    a3af:	48 89 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rax
    a3b6:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a3bd:	e8 0e bb ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a3c2:	48 8b bd a8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x158]
    a3c9:	48 89 c2             	mov    rdx,rax
    a3cc:	48 8d 35 51 6f 00 00 	lea    rsi,[rip+0x6f51]        # 11324 <_IO_stdin_used+0x324>
    a3d3:	b0 00                	mov    al,0x0
    a3d5:	e8 76 ef ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        std::exit(1);
    a3da:	bf 01 00 00 00       	mov    edi,0x1
    a3df:	e8 4c a2 ff ff       	call   4630 <exit@plt>
    }
    struct stat file_state;
    if(stat(file_name.c_str(), &file_state) == -1)
    a3e4:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a3eb:	e8 e0 ba ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a3f0:	48 89 c7             	mov    rdi,rax
    a3f3:	48 8d b5 68 ff ff ff 	lea    rsi,[rbp-0x98]
    a3fa:	e8 71 a1 ff ff       	call   4570 <stat@plt>
    a3ff:	83 f8 ff             	cmp    eax,0xffffffff
    a402:	75 4c                	jne    a450 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x110>
    a404:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Unable to get size of file '%s'\r\n", file_name.c_str());
    a40b:	48 83 c0 20          	add    rax,0x20
    a40f:	48 89 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rax
    a416:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a41d:	e8 ae ba ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a422:	48 8b bd a0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x160]
    a429:	48 89 c2             	mov    rdx,rax
    a42c:	48 8d 35 0c 6f 00 00 	lea    rsi,[rip+0x6f0c]        # 1133f <_IO_stdin_used+0x33f>
    a433:	b0 00                	mov    al,0x0
    a435:	e8 16 ef ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
        fclose(file);
    a43a:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    a441:	e8 3a a1 ff ff       	call   4580 <fclose@plt>
        std::exit(1);
    a446:	bf 01 00 00 00       	mov    edi,0x1
    a44b:	e8 e0 a1 ff ff       	call   4630 <exit@plt>
    a450:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a457:	48 89 bd 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],rdi
    }
    std::string buffer;
    a45e:	e8 1d c0 ff ff       	call   6480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    a463:	48 8b bd 98 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x168]
    buffer.reserve(file_state.st_size);
    a46a:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    a46e:	e8 8d ea ff ff       	call   8f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    a473:	eb 00                	jmp    a475 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x135>
    a475:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    if(std::fread(buffer.data(), sizeof(char), file_state.st_size / sizeof(char), file) != file_state.st_size / sizeof(char))
    a47c:	e8 5f ea ff ff       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    a481:	48 89 c7             	mov    rdi,rax
    a484:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    a488:	48 8b 8d d0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x130]
    a48f:	be 01 00 00 00       	mov    esi,0x1
    a494:	e8 97 a2 ff ff       	call   4730 <fread@plt>
    a499:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    a4a0:	eb 00                	jmp    a4a2 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x162>
    a4a2:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
    a4a9:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    a4ad:	48 c1 e9 00          	shr    rcx,0x0
    a4b1:	48 39 c8             	cmp    rax,rcx
    a4b4:	74 6b                	je     a521 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e1>
    a4b6:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Error reading file '%s'\r\n", file_name.c_str());
    a4bd:	48 83 c0 20          	add    rax,0x20
    a4c1:	48 89 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rax
    a4c8:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a4cf:	e8 fc b9 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a4d4:	48 8b bd 88 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x178]
    a4db:	48 89 c2             	mov    rdx,rax
    a4de:	48 8d 35 7c 6e 00 00 	lea    rsi,[rip+0x6e7c]        # 11361 <_IO_stdin_used+0x361>
    a4e5:	31 c0                	xor    eax,eax
    a4e7:	e8 64 ee ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    a4ec:	eb 00                	jmp    a4ee <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ae>
        fclose(file);
    a4ee:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    a4f5:	e8 86 a0 ff ff       	call   4580 <fclose@plt>
    a4fa:	eb 00                	jmp    a4fc <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1bc>
        std::exit(1);
    a4fc:	bf 01 00 00 00       	mov    edi,0x1
    a501:	e8 2a a1 ff ff       	call   4630 <exit@plt>
    a506:	f3 0f 1e fa          	endbr64
    a50a:	48 89 c1             	mov    rcx,rax
    if(line.length() > 0)
    {
        lines.emplace_back(line);
    }
    parser.parse(terminal_io, current_dir, lines, 0);
}
    a50d:	89 d0                	mov    eax,edx
    a50f:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a516:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a51c:	e9 2d 02 00 00       	jmp    a74e <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40e>
    a521:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    std::vector<std::string> lines;
    a528:	e8 33 bf ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    a52d:	48 8d 95 0f ff ff ff 	lea    rdx,[rbp-0xf1]
    a534:	48 89 95 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdx
    a53b:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    a542:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    std::string line = "";
    a549:	48 8d 35 f9 6e 00 00 	lea    rsi,[rip+0x6ef9]        # 11449 <_IO_stdin_used+0x449>
    a550:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a557:	e8 44 bb ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    a55c:	eb 00                	jmp    a55e <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x21e>
    a55e:	48 8d 85 0f ff ff ff 	lea    rax,[rbp-0xf1]
    a565:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    for(std::size_t i = 0; i < buffer.length(); i++)
    a56c:	48 c7 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],0x0
    a573:	00 00 00 00 
    a577:	48 8b 85 b8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x148]
    a57e:	48 89 85 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rax
    a585:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a58c:	e8 ef ba ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a591:	48 89 c1             	mov    rcx,rax
    a594:	48 8b 85 80 fe ff ff 	mov    rax,QWORD PTR [rbp-0x180]
    a59b:	48 39 c8             	cmp    rax,rcx
    a59e:	0f 83 0e 01 00 00    	jae    a6b2 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x372>
        if(buffer[i] == '\n')
    a5a4:	48 8b b5 b8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x148]
    a5ab:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a5b2:	e8 79 e7 ff ff       	call   8d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    a5b7:	48 89 85 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rax
    a5be:	eb 00                	jmp    a5c0 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x280>
    a5c0:	48 8b 85 78 fe ff ff 	mov    rax,QWORD PTR [rbp-0x188]
    a5c7:	0f be 00             	movsx  eax,BYTE PTR [rax]
    a5ca:	83 f8 0a             	cmp    eax,0xa
    a5cd:	0f 85 90 00 00 00    	jne    a663 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x323>
            if(line.length() > 0)
    a5d3:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a5da:	e8 a1 ba ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a5df:	48 83 f8 00          	cmp    rax,0x0
    a5e3:	76 7c                	jbe    a661 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x321>
    a5e5:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a5ec:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
                lines.emplace_back(line);
    a5f3:	e8 18 bf ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a5f8:	eb 00                	jmp    a5fa <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ba>
                line = "";    
    a5fa:	48 8d 35 48 6e 00 00 	lea    rsi,[rip+0x6e48]        # 11449 <_IO_stdin_used+0x449>
    a601:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a608:	e8 83 bf ff ff       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    a60d:	eb 00                	jmp    a60f <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2cf>
            }
    a60f:	eb 50                	jmp    a661 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x321>
    a611:	f3 0f 1e fa          	endbr64
    a615:	48 89 c1             	mov    rcx,rax
}
    a618:	89 d0                	mov    eax,edx
    a61a:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a621:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a627:	48 8d 85 0f ff ff ff 	lea    rax,[rbp-0xf1]
    a62e:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    std::string line = "";
    a635:	e9 08 01 00 00       	jmp    a742 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x402>
    a63a:	f3 0f 1e fa          	endbr64
    a63e:	48 89 c1             	mov    rcx,rax
}
    a641:	89 d0                	mov    eax,edx
    a643:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a64a:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a650:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a657:	e8 f4 ba ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a65c:	e9 e1 00 00 00       	jmp    a742 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x402>
        }
    a661:	eb 36                	jmp    a699 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x359>
            line += buffer[i];
    a663:	48 8b b5 b8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x148]
    a66a:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a671:	e8 ba e6 ff ff       	call   8d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    a676:	48 89 85 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rax
    a67d:	eb 00                	jmp    a67f <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x33f>
    a67f:	48 8b 85 70 fe ff ff 	mov    rax,QWORD PTR [rbp-0x190]
    a686:	0f be 30             	movsx  esi,BYTE PTR [rax]
    a689:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a690:	e8 2b bf ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    a695:	eb 00                	jmp    a697 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x357>
    a697:	eb 00                	jmp    a699 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x359>
    }
    a699:	eb 00                	jmp    a69b <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x35b>
    for(std::size_t i = 0; i < buffer.length(); i++)
    a69b:	48 8b 85 b8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x148]
    a6a2:	48 83 c0 01          	add    rax,0x1
    a6a6:	48 89 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],rax
    a6ad:	e9 c5 fe ff ff       	jmp    a577 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x237>
    if(line.length() > 0)
    a6b2:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a6b9:	e8 c2 b9 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a6be:	48 83 f8 00          	cmp    rax,0x0
    a6c2:	76 17                	jbe    a6db <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x39b>
    a6c4:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a6cb:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
        lines.emplace_back(line);
    a6d2:	e8 39 be ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a6d7:	eb 00                	jmp    a6d9 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x399>
    }
    a6d9:	eb 00                	jmp    a6db <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x39b>
    a6db:	48 8b 95 b0 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x150]
    parser.parse(terminal_io, current_dir, lines, 0);
    a6e2:	48 89 d7             	mov    rdi,rdx
    a6e5:	48 83 c7 60          	add    rdi,0x60
    a6e9:	48 89 d6             	mov    rsi,rdx
    a6ec:	48 83 c6 20          	add    rsi,0x20
    a6f0:	31 c0                	xor    eax,eax
    a6f2:	41 89 c0             	mov    r8d,eax
    a6f5:	48 8d 8d 10 ff ff ff 	lea    rcx,[rbp-0xf0]
    a6fc:	e8 bf 10 00 00       	call   b7c0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>
    a701:	eb 00                	jmp    a703 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c3>
    a703:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
}
    a70a:	e8 41 ba ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a70f:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a716:	e8 e5 be ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a71b:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a722:	e8 29 ba ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a727:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a72e:	00 00 
    a730:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a734:	48 39 c8             	cmp    rax,rcx
    a737:	75 4d                	jne    a786 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    a739:	48 81 c4 a0 01 00 00 	add    rsp,0x1a0
    a740:	5d                   	pop    rbp
    a741:	c3                   	ret
    a742:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a749:	e8 b2 be ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a74e:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a755:	e8 f6 b9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a75a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    a761:	48 89 85 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rax
    a768:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a76f:	00 00 
    a771:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a775:	48 39 c8             	cmp    rax,rcx
    a778:	75 0c                	jne    a786 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    a77a:	48 8b bd 68 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x198]
    a781:	e8 fa 9c ff ff       	call   4480 <_Unwind_Resume@plt>
    a786:	e8 45 9e ff ff       	call   45d0 <__stack_chk_fail@plt>
    a78b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a790 <_ZN13VarelseParserD2Ev>:
#include <flapjack_io.h>
#include <terminal_streams.h>

#define NUM_REGISTERS 10

class VarelseParser
    a790:	f3 0f 1e fa          	endbr64
    a794:	55                   	push   rbp
    a795:	48 89 e5             	mov    rbp,rsp
    a798:	48 83 ec 10          	sub    rsp,0x10
    a79c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7a0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    a7a4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a7a8:	48 83 c7 70          	add    rdi,0x70
    a7ac:	e8 0f 00 00 00       	call   a7c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>
    a7b1:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a7b5:	e8 56 00 00 00       	call   a810 <_ZN14TerminalStreamD2Ev>
    a7ba:	48 83 c4 10          	add    rsp,0x10
    a7be:	5d                   	pop    rbp
    a7bf:	c3                   	ret

000000000000a7c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>:
   *
   *  @tparam  Tp  Type of element. Required to be a complete type.
   *  @tparam  Nm  Number of elements.
  */
  template<typename _Tp, std::size_t _Nm>
    struct array
    a7c0:	f3 0f 1e fa          	endbr64
    a7c4:	55                   	push   rbp
    a7c5:	48 89 e5             	mov    rbp,rsp
    a7c8:	48 83 ec 20          	sub    rsp,0x20
    a7cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7d4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    a7d8:	48 05 40 01 00 00    	add    rax,0x140
    a7de:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a7e2:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a7e6:	48 83 c7 e0          	add    rdi,0xffffffffffffffe0
    a7ea:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    a7ee:	e8 5d b9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a7f3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    a7f7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a7fb:	48 39 c8             	cmp    rax,rcx
    a7fe:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a802:	75 de                	jne    a7e2 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev+0x22>
    a804:	48 83 c4 20          	add    rsp,0x20
    a808:	5d                   	pop    rbp
    a809:	c3                   	ret
    a80a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a810 <_ZN14TerminalStreamD2Ev>:
#ifndef TERMINAL_STREAMS_H
#define TERMINAL_STREAMS_H

#include <string>

struct TerminalStream
    a810:	f3 0f 1e fa          	endbr64
    a814:	55                   	push   rbp
    a815:	48 89 e5             	mov    rbp,rsp
    a818:	48 83 ec 10          	sub    rsp,0x10
    a81c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a820:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    a824:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a828:	48 83 c7 48          	add    rdi,0x48
    a82c:	e8 1f b9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a831:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a835:	48 83 c7 20          	add    rdi,0x20
    a839:	e8 12 b9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a83e:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a842:	e8 09 b9 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a847:	48 83 c4 10          	add    rsp,0x10
    a84b:	5d                   	pop    rbp
    a84c:	c3                   	ret
    a84d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a850 <main>:
#include <terminal.h>
#include <cstdio>

int main(int argc, const char* argv[])
{
    a850:	f3 0f 1e fa          	endbr64
    a854:	55                   	push   rbp
    a855:	48 89 e5             	mov    rbp,rsp
    a858:	48 81 ec a0 02 00 00 	sub    rsp,0x2a0
    a85f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a866:	00 00 
    a868:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a86c:	c7 85 84 fd ff ff 00 	mov    DWORD PTR [rbp-0x27c],0x0
    a873:	00 00 00 
    a876:	89 bd 80 fd ff ff    	mov    DWORD PTR [rbp-0x280],edi
    a87c:	48 89 b5 78 fd ff ff 	mov    QWORD PTR [rbp-0x288],rsi
    if(argc == 0)
    a883:	83 bd 80 fd ff ff 00 	cmp    DWORD PTR [rbp-0x280],0x0
    a88a:	75 1a                	jne    a8a6 <main+0x56>
    {
        std::fprintf(stderr, "Usage: flapjack [file]\r\nNo arguments were provided when the first should be this executable\r\n");
    a88c:	48 8b 05 3d c7 00 00 	mov    rax,QWORD PTR [rip+0xc73d]        # 16fd0 <stderr@GLIBC_2.2.5>
    a893:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    a896:	48 8d 35 de 6a 00 00 	lea    rsi,[rip+0x6ade]        # 1137b <_IO_stdin_used+0x37b>
    a89d:	b0 00                	mov    al,0x0
    a89f:	e8 2c 9e ff ff       	call   46d0 <fprintf@plt>
    }
    a8a4:	eb 2d                	jmp    a8d3 <main+0x83>
    else if(argc > 2)
    a8a6:	83 bd 80 fd ff ff 02 	cmp    DWORD PTR [rbp-0x280],0x2
    a8ad:	7e 22                	jle    a8d1 <main+0x81>
    {
        std::fprintf(stderr, "Usage: %s [file]\r\n", argv[0]);
    a8af:	48 8b 05 1a c7 00 00 	mov    rax,QWORD PTR [rip+0xc71a]        # 16fd0 <stderr@GLIBC_2.2.5>
    a8b6:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    a8b9:	48 8b 85 78 fd ff ff 	mov    rax,QWORD PTR [rbp-0x288]
    a8c0:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    a8c3:	48 8d 35 0f 6b 00 00 	lea    rsi,[rip+0x6b0f]        # 113d9 <_IO_stdin_used+0x3d9>
    a8ca:	b0 00                	mov    al,0x0
    a8cc:	e8 ff 9d ff ff       	call   46d0 <fprintf@plt>
    a8d1:	eb 00                	jmp    a8d3 <main+0x83>
    }
    Terminal terminal;
    a8d3:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    a8da:	e8 21 f8 ff ff       	call   a100 <_ZN8TerminalC1Ev>
    if(argc == 1)
    a8df:	83 bd 80 fd ff ff 01 	cmp    DWORD PTR [rbp-0x280],0x1
    a8e6:	75 2e                	jne    a916 <main+0xc6>
    a8e8:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    {
        terminal.run_cmdline();
    a8ef:	e8 4c f9 ff ff       	call   a240 <_ZN8Terminal11run_cmdlineEv>
    a8f4:	eb 00                	jmp    a8f6 <main+0xa6>
    }
    a8f6:	e9 cb 00 00 00       	jmp    a9c6 <main+0x176>
    a8fb:	f3 0f 1e fa          	endbr64
    a8ff:	48 89 c1             	mov    rcx,rax
    else
    {
        terminal.run_file(argv[1]);
    }
    return 0;
}
    a902:	89 d0                	mov    eax,edx
    a904:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a90b:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
    a911:	e9 f3 00 00 00       	jmp    aa09 <main+0x1b9>
        terminal.run_file(argv[1]);
    a916:	48 8b 85 78 fd ff ff 	mov    rax,QWORD PTR [rbp-0x288]
    a91d:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    a921:	48 8d 95 af fd ff ff 	lea    rdx,[rbp-0x251]
    a928:	48 89 95 88 fd ff ff 	mov    QWORD PTR [rbp-0x278],rdx
    a92f:	48 8b 85 88 fd ff ff 	mov    rax,QWORD PTR [rbp-0x278]
    a936:	48 89 85 a0 fd ff ff 	mov    QWORD PTR [rbp-0x260],rax
    a93d:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a944:	e8 57 b7 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    a949:	eb 00                	jmp    a94b <main+0xfb>
    a94b:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    a952:	48 8d b5 b0 fd ff ff 	lea    rsi,[rbp-0x250]
    a959:	e8 e2 f9 ff ff       	call   a340 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    a95e:	eb 00                	jmp    a960 <main+0x110>
    a960:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a967:	e8 e4 b7 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a96c:	48 8d 85 af fd ff ff 	lea    rax,[rbp-0x251]
    a973:	48 89 85 90 fd ff ff 	mov    QWORD PTR [rbp-0x270],rax
    a97a:	eb 4a                	jmp    a9c6 <main+0x176>
    a97c:	f3 0f 1e fa          	endbr64
    a980:	48 89 c1             	mov    rcx,rax
}
    a983:	89 d0                	mov    eax,edx
    a985:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a98c:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
    a992:	eb 22                	jmp    a9b6 <main+0x166>
    a994:	f3 0f 1e fa          	endbr64
    a998:	48 89 c1             	mov    rcx,rax
    a99b:	89 d0                	mov    eax,edx
    a99d:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a9a4:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
        terminal.run_file(argv[1]);
    a9aa:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a9b1:	e8 9a b7 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a9b6:	48 8d 85 af fd ff ff 	lea    rax,[rbp-0x251]
    a9bd:	48 89 85 98 fd ff ff 	mov    QWORD PTR [rbp-0x268],rax
    a9c4:	eb 43                	jmp    aa09 <main+0x1b9>
    return 0;
    a9c6:	c7 85 84 fd ff ff 00 	mov    DWORD PTR [rbp-0x27c],0x0
    a9cd:	00 00 00 
    a9d0:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
}
    a9d7:	e8 74 00 00 00       	call   aa50 <_ZN8TerminalD2Ev>
    a9dc:	8b 85 84 fd ff ff    	mov    eax,DWORD PTR [rbp-0x27c]
    a9e2:	89 85 68 fd ff ff    	mov    DWORD PTR [rbp-0x298],eax
    a9e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9ef:	00 00 
    a9f1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a9f5:	48 39 c8             	cmp    rax,rcx
    a9f8:	75 47                	jne    aa41 <main+0x1f1>
    a9fa:	8b 85 68 fd ff ff    	mov    eax,DWORD PTR [rbp-0x298]
    aa00:	48 81 c4 a0 02 00 00 	add    rsp,0x2a0
    aa07:	5d                   	pop    rbp
    aa08:	c3                   	ret
    aa09:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    aa10:	e8 3b 00 00 00       	call   aa50 <_ZN8TerminalD2Ev>
    aa15:	48 8b 85 70 fd ff ff 	mov    rax,QWORD PTR [rbp-0x290]
    aa1c:	48 89 85 60 fd ff ff 	mov    QWORD PTR [rbp-0x2a0],rax
    aa23:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa2a:	00 00 
    aa2c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    aa30:	48 39 c8             	cmp    rax,rcx
    aa33:	75 0c                	jne    aa41 <main+0x1f1>
    aa35:	48 8b bd 60 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2a0]
    aa3c:	e8 3f 9a ff ff       	call   4480 <_Unwind_Resume@plt>
    aa41:	e8 8a 9b ff ff       	call   45d0 <__stack_chk_fail@plt>
    aa46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    aa4d:	00 00 00 

000000000000aa50 <_ZN8TerminalD2Ev>:
#include <string>
#include <flapjack_io.h>
#include <flapjack_parse.h>
#include <vector>

class Terminal
    aa50:	f3 0f 1e fa          	endbr64
    aa54:	55                   	push   rbp
    aa55:	48 89 e5             	mov    rbp,rsp
    aa58:	48 83 ec 10          	sub    rsp,0x10
    aa5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    aa60:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    aa64:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    aa68:	48 81 c7 10 02 00 00 	add    rdi,0x210
    aa6f:	e8 8c bb ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    aa74:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa78:	48 83 c7 60          	add    rdi,0x60
    aa7c:	e8 0f fd ff ff       	call   a790 <_ZN13VarelseParserD2Ev>
    aa81:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa85:	48 83 c7 20          	add    rdi,0x20
    aa89:	e8 b2 e6 ff ff       	call   9140 <_ZN10TerminalIOD1Ev>
    aa8e:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa92:	e8 b9 b6 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    aa97:	48 83 c4 10          	add    rsp,0x10
    aa9b:	5d                   	pop    rbp
    aa9c:	c3                   	ret
    aa9d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000aaa0 <_ZN13VarelseParserC1Ev>:
            .stdout_path = "",
            .stdout_append = false,
            .stderr_path = "",
            .stderr_append = false,
        })
{
    aaa0:	f3 0f 1e fa          	endbr64
    aaa4:	55                   	push   rbp
    aaa5:	48 89 e5             	mov    rbp,rsp
    aaa8:	48 81 ec d0 00 00 00 	sub    rsp,0xd0
    aaaf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aab6:	00 00 
    aab8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aabc:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    aac0:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    aac4:	48 89 bd 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rdi
    aacb:	48 89 f8             	mov    rax,rdi
    aace:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
VarelseParser::VarelseParser() : streams(
    aad5:	48 89 f8             	mov    rax,rdi
    aad8:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    aadf:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    aae3:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    aae7:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aaeb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
            .stdin_path = "",
    aaef:	48 8d 35 53 69 00 00 	lea    rsi,[rip+0x6953]        # 11449 <_IO_stdin_used+0x449>
    aaf6:	e8 a5 b5 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    aafb:	eb 00                	jmp    aafd <_ZN13VarelseParserC1Ev+0x5d>
    aafd:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    ab04:	c6 85 72 ff ff ff 01 	mov    BYTE PTR [rbp-0x8e],0x1
        {
    ab0b:	48 83 c7 20          	add    rdi,0x20
    ab0f:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
    ab16:	48 8d 55 f6          	lea    rdx,[rbp-0xa]
    ab1a:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    ab1e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    ab22:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
            .stdout_path = "",
    ab26:	48 8d 35 1c 69 00 00 	lea    rsi,[rip+0x691c]        # 11449 <_IO_stdin_used+0x449>
    ab2d:	e8 6e b5 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    ab32:	eb 00                	jmp    ab34 <_ZN13VarelseParserC1Ev+0x94>
    ab34:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    ab3b:	c6 85 73 ff ff ff 01 	mov    BYTE PTR [rbp-0x8d],0x1
        {
    ab42:	c6 47 40 00          	mov    BYTE PTR [rdi+0x40],0x0
    ab46:	48 83 c7 48          	add    rdi,0x48
    ab4a:	48 8d 55 f5          	lea    rdx,[rbp-0xb]
    ab4e:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    ab52:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    ab56:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
            .stderr_path = "",
    ab5a:	48 8d 35 e8 68 00 00 	lea    rsi,[rip+0x68e8]        # 11449 <_IO_stdin_used+0x449>
    ab61:	e8 3a b5 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    ab66:	eb 00                	jmp    ab68 <_ZN13VarelseParserC1Ev+0xc8>
    ab68:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ab6f:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
        {
    ab76:	c6 40 68 00          	mov    BYTE PTR [rax+0x68],0x0
    ab7a:	c6 85 73 ff ff ff 00 	mov    BYTE PTR [rbp-0x8d],0x0
    ab81:	c6 85 72 ff ff ff 00 	mov    BYTE PTR [rbp-0x8e],0x0
    ab88:	48 8d 45 f5          	lea    rax,[rbp-0xb]
    ab8c:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    ab90:	48 8d 45 f6          	lea    rax,[rbp-0xa]
    ab94:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    ab98:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    ab9c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
VarelseParser::VarelseParser() : streams(
    aba0:	48 83 c7 70          	add    rdi,0x70
    aba4:	48 89 bd 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rdi
    abab:	e8 10 1e 00 00       	call   c9c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev>
    for(std::size_t i = 0; i < registers.size(); i++)
    abb0:	48 c7 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],0x0
    abb7:	00 00 00 00 
    abbb:	48 8b 8d 58 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa8]
    abc2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    abc9:	48 83 c1 70          	add    rcx,0x70
    abcd:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    abd1:	48 83 f8 0a          	cmp    rax,0xa
    abd5:	0f 83 00 01 00 00    	jae    acdb <_ZN13VarelseParserC1Ev+0x23b>
    abdb:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    {
        registers[i] = "";
    abe2:	48 83 c7 70          	add    rdi,0x70
    abe6:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    abed:	e8 1e 1e 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    abf2:	48 89 c7             	mov    rdi,rax
    abf5:	48 8d 35 4d 68 00 00 	lea    rsi,[rip+0x684d]        # 11449 <_IO_stdin_used+0x449>
    abfc:	e8 8f b9 ff ff       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    ac01:	eb 00                	jmp    ac03 <_ZN13VarelseParserC1Ev+0x163>
    }
    ac03:	eb 00                	jmp    ac05 <_ZN13VarelseParserC1Ev+0x165>
    for(std::size_t i = 0; i < registers.size(); i++)
    ac05:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    ac0c:	48 83 c0 01          	add    rax,0x1
    ac10:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    ac17:	eb a2                	jmp    abbb <_ZN13VarelseParserC1Ev+0x11b>
    ac19:	f3 0f 1e fa          	endbr64
    ac1d:	48 89 c1             	mov    rcx,rax
}
    ac20:	89 d0                	mov    eax,edx
    ac22:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac29:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac2f:	eb 70                	jmp    aca1 <_ZN13VarelseParserC1Ev+0x201>
    ac31:	f3 0f 1e fa          	endbr64
    ac35:	48 89 c1             	mov    rcx,rax
    ac38:	89 d0                	mov    eax,edx
    ac3a:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac41:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac47:	eb 37                	jmp    ac80 <_ZN13VarelseParserC1Ev+0x1e0>
    ac49:	f3 0f 1e fa          	endbr64
    ac4d:	48 89 c1             	mov    rcx,rax
    ac50:	89 d0                	mov    eax,edx
    ac52:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac59:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac5f:	48 8d 45 f5          	lea    rax,[rbp-0xb]
    ac63:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
        (TerminalStream)
    ac67:	f6 85 73 ff ff ff 01 	test   BYTE PTR [rbp-0x8d],0x1
    ac6e:	75 02                	jne    ac72 <_ZN13VarelseParserC1Ev+0x1d2>
    ac70:	eb 0c                	jmp    ac7e <_ZN13VarelseParserC1Ev+0x1de>
    ac72:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    ac79:	e8 d2 b4 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    ac7e:	eb 00                	jmp    ac80 <_ZN13VarelseParserC1Ev+0x1e0>
    ac80:	48 8d 45 f6          	lea    rax,[rbp-0xa]
    ac84:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ac88:	f6 85 72 ff ff ff 01 	test   BYTE PTR [rbp-0x8e],0x1
    ac8f:	75 02                	jne    ac93 <_ZN13VarelseParserC1Ev+0x1f3>
    ac91:	eb 0c                	jmp    ac9f <_ZN13VarelseParserC1Ev+0x1ff>
    ac93:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    ac9a:	e8 b1 b4 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    ac9f:	eb 00                	jmp    aca1 <_ZN13VarelseParserC1Ev+0x201>
    aca1:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    aca5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    aca9:	eb 4b                	jmp    acf6 <_ZN13VarelseParserC1Ev+0x256>
    acab:	f3 0f 1e fa          	endbr64
    acaf:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    acb6:	48 89 c1             	mov    rcx,rax
}
    acb9:	89 d0                	mov    eax,edx
    acbb:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    acc2:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    acc8:	e8 f3 fa ff ff       	call   a7c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>
    accd:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    acd4:	e8 37 fb ff ff       	call   a810 <_ZN14TerminalStreamD2Ev>
    acd9:	eb 1b                	jmp    acf6 <_ZN13VarelseParserC1Ev+0x256>
    acdb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ace2:	00 00 
    ace4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ace8:	48 39 c8             	cmp    rax,rcx
    aceb:	75 35                	jne    ad22 <_ZN13VarelseParserC1Ev+0x282>
    aced:	48 81 c4 d0 00 00 00 	add    rsp,0xd0
    acf4:	5d                   	pop    rbp
    acf5:	c3                   	ret
        (TerminalStream)
    acf6:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    acfd:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    ad04:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad0b:	00 00 
    ad0d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ad11:	48 39 c8             	cmp    rax,rcx
    ad14:	75 0c                	jne    ad22 <_ZN13VarelseParserC1Ev+0x282>
    ad16:	48 8b bd 38 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc8]
    ad1d:	e8 5e 97 ff ff       	call   4480 <_Unwind_Resume@plt>
    ad22:	e8 a9 98 ff ff       	call   45d0 <__stack_chk_fail@plt>
    ad27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ad2e:	00 00 

000000000000ad30 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    }
    return res;
}

std::vector<std::string> VarelseParser::split_line(const std::string& text)
{
    ad30:	f3 0f 1e fa          	endbr64
    ad34:	55                   	push   rbp
    ad35:	48 89 e5             	mov    rbp,rsp
    ad38:	48 81 ec b0 00 00 00 	sub    rsp,0xb0
    ad3f:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    ad46:	48 89 f8             	mov    rax,rdi
    ad49:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    ad50:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad57:	00 00 
    ad59:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad5d:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    ad61:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    ad65:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    std::vector<std::string> res;
    ad69:	c6 45 97 00          	mov    BYTE PTR [rbp-0x69],0x0
    ad6d:	e8 ee b6 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    ad72:	48 8d 55 d7          	lea    rdx,[rbp-0x29]
    ad76:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
    ad7a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ad7e:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    std::string word = "";
    ad82:	48 8d 35 c0 66 00 00 	lea    rsi,[rip+0x66c0]        # 11449 <_IO_stdin_used+0x449>
    ad89:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ad8d:	e8 0e b3 ff ff       	call   60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    ad92:	eb 00                	jmp    ad94 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x64>
    ad94:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    ad98:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    bool in_quotes = false;
    ad9c:	c6 45 83 00          	mov    BYTE PTR [rbp-0x7d],0x0
    char quote = 0;
    ada0:	c6 45 82 00          	mov    BYTE PTR [rbp-0x7e],0x0
    bool escape = false;
    ada4:	c6 45 81 00          	mov    BYTE PTR [rbp-0x7f],0x0
    for(size_t i = 0; i < text.length(); i++)
    ada8:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    adaf:	00 00 00 00 
    adb3:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    adba:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    adc1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    adc5:	e8 b6 b2 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    adca:	48 89 c1             	mov    rcx,rax
    adcd:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    add4:	48 39 c8             	cmp    rax,rcx
    add7:	0f 83 ba 02 00 00    	jae    b097 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x367>
    {
       if(in_quotes)
    addd:	f6 45 83 01          	test   BYTE PTR [rbp-0x7d],0x1
    ade1:	0f 84 c6 01 00 00    	je     afad <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x27d>
       {
           if(escape)
    ade7:	f6 45 81 01          	test   BYTE PTR [rbp-0x7f],0x1
    adeb:	0f 84 50 01 00 00    	je     af41 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x211>
           {
               switch(text[i])
    adf1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    adf5:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    adfc:	e8 6f b8 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    ae01:	0f be 00             	movsx  eax,BYTE PTR [rax]
    ae04:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
    ae0a:	83 e8 22             	sub    eax,0x22
    ae0d:	0f 84 d4 00 00 00    	je     aee7 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b7>
    ae13:	eb 00                	jmp    ae15 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe5>
    ae15:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae1b:	83 e8 27             	sub    eax,0x27
    ae1e:	0f 84 d5 00 00 00    	je     aef9 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c9>
    ae24:	eb 00                	jmp    ae26 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf6>
    ae26:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae2c:	83 e8 5c             	sub    eax,0x5c
    ae2f:	0f 84 a0 00 00 00    	je     aed5 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a5>
    ae35:	eb 00                	jmp    ae37 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x107>
    ae37:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae3d:	83 e8 6e             	sub    eax,0x6e
    ae40:	74 3c                	je     ae7e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14e>
    ae42:	eb 00                	jmp    ae44 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x114>
    ae44:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae4a:	83 e8 72             	sub    eax,0x72
    ae4d:	74 62                	je     aeb1 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x181>
    ae4f:	eb 00                	jmp    ae51 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x121>
    ae51:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae57:	83 e8 74             	sub    eax,0x74
    ae5a:	74 67                	je     aec3 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x193>
    ae5c:	e9 aa 00 00 00       	jmp    af0b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1db>
    ae61:	f3 0f 1e fa          	endbr64
    ae65:	48 89 c1             	mov    rcx,rax
    if(word.length() > 0)
    {
        res.emplace_back(word);
    }
    return res;
}
    ae68:	89 d0                	mov    eax,edx
    ae6a:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    ae6e:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    ae71:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    ae75:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    std::string word = "";
    ae79:	e9 7d 02 00 00       	jmp    b0fb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3cb>
    ae7e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae82:	be 0a 00 00 00       	mov    esi,0xa
                       word += '\n';
    ae87:	e8 34 b7 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    ae8c:	eb 00                	jmp    ae8e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15e>
                       break;
    ae8e:	e9 a8 00 00 00       	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    ae93:	f3 0f 1e fa          	endbr64
    ae97:	48 89 c1             	mov    rcx,rax
}
    ae9a:	89 d0                	mov    eax,edx
    ae9c:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    aea0:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    aea3:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aea7:	e8 a4 b2 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    aeac:	e9 4a 02 00 00       	jmp    b0fb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3cb>
    aeb1:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aeb5:	be 0d 00 00 00       	mov    esi,0xd
                       word += '\r';
    aeba:	e8 01 b7 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aebf:	eb 00                	jmp    aec1 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x191>
                       break;
    aec1:	eb 78                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aec3:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aec7:	be 09 00 00 00       	mov    esi,0x9
                       word += '\t';
    aecc:	e8 ef b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aed1:	eb 00                	jmp    aed3 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a3>
                       break;
    aed3:	eb 66                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aed5:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aed9:	be 5c 00 00 00       	mov    esi,0x5c
                       word += '\\';
    aede:	e8 dd b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aee3:	eb 00                	jmp    aee5 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b5>
                       break;
    aee5:	eb 54                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aee7:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aeeb:	be 22 00 00 00       	mov    esi,0x22
                       word += '\"';
    aef0:	e8 cb b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aef5:	eb 00                	jmp    aef7 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c7>
                       break;
    aef7:	eb 42                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aef9:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aefd:	be 27 00 00 00       	mov    esi,0x27
                       word += '\'';
    af02:	e8 b9 b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    af07:	eb 00                	jmp    af09 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1d9>
                       break;
    af09:	eb 30                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    af0b:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    af0f:	be 5c 00 00 00       	mov    esi,0x5c
                       word += '\\';
    af14:	e8 a7 b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    af19:	eb 00                	jmp    af1b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
                       word += text[i];
    af1b:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af1f:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af26:	e8 45 b7 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af2b:	0f be 30             	movsx  esi,BYTE PTR [rax]
    af2e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    af32:	e8 89 b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    af37:	eb 00                	jmp    af39 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x209>
                       break;
    af39:	eb 00                	jmp    af3b <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
               escape = false;
    af3b:	c6 45 81 00          	mov    BYTE PTR [rbp-0x7f],0x0
           }
    af3f:	eb 67                	jmp    afa8 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x278>
               if(text[i] == quote)
    af41:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af45:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af4c:	e8 1f b7 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af51:	0f be 00             	movsx  eax,BYTE PTR [rax]
    af54:	0f be 4d 82          	movsx  ecx,BYTE PTR [rbp-0x7e]
    af58:	39 c8                	cmp    eax,ecx
    af5a:	75 0a                	jne    af66 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x236>
                   quote = 0;
    af5c:	c6 45 82 00          	mov    BYTE PTR [rbp-0x7e],0x0
                   in_quotes = false;
    af60:	c6 45 83 00          	mov    BYTE PTR [rbp-0x7d],0x0
               }
    af64:	eb 40                	jmp    afa6 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x276>
               else if(text[i] == '\\')
    af66:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af6a:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af71:	e8 fa b6 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af76:	0f be 00             	movsx  eax,BYTE PTR [rax]
    af79:	83 f8 5c             	cmp    eax,0x5c
    af7c:	75 06                	jne    af84 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x254>
                   escape = true;
    af7e:	c6 45 81 01          	mov    BYTE PTR [rbp-0x7f],0x1
               }
    af82:	eb 20                	jmp    afa4 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
                   word += text[i];
    af84:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af88:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af8f:	e8 dc b6 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af94:	0f be 30             	movsx  esi,BYTE PTR [rax]
    af97:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    af9b:	e8 20 b6 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    afa0:	eb 00                	jmp    afa2 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x272>
    afa2:	eb 00                	jmp    afa4 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
    afa4:	eb 00                	jmp    afa6 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x276>
    afa6:	eb 00                	jmp    afa8 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x278>
       }
    afa8:	e9 d1 00 00 00       	jmp    b07e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34e>
           switch(text[i])
    afad:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    afb1:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    afb8:	e8 b3 b6 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    afbd:	0f be 00             	movsx  eax,BYTE PTR [rax]
    afc0:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
    afc6:	83 c0 f7             	add    eax,0xfffffff7
    afc9:	83 e8 02             	sub    eax,0x2
    afcc:	0f 82 88 00 00 00    	jb     b05a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32a>
    afd2:	eb 00                	jmp    afd4 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a4>
    afd4:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    afda:	83 e8 0d             	sub    eax,0xd
    afdd:	74 7b                	je     b05a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32a>
    afdf:	eb 00                	jmp    afe1 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2b1>
    afe1:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    afe7:	83 e8 20             	sub    eax,0x20
    afea:	74 37                	je     b023 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2f3>
    afec:	eb 00                	jmp    afee <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2be>
    afee:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    aff4:	83 e8 22             	sub    eax,0x22
    aff7:	74 0f                	je     b008 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d8>
    aff9:	eb 00                	jmp    affb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2cb>
    affb:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    b001:	83 e8 27             	sub    eax,0x27
    b004:	75 56                	jne    b05c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32c>
    b006:	eb 00                	jmp    b008 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d8>
                   quote = text[i];
    b008:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    b00c:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b013:	e8 58 b6 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    b018:	8a 00                	mov    al,BYTE PTR [rax]
    b01a:	88 45 82             	mov    BYTE PTR [rbp-0x7e],al
                   in_quotes = true;
    b01d:	c6 45 83 01          	mov    BYTE PTR [rbp-0x7d],0x1
                   break;
    b021:	eb 59                	jmp    b07c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   if(word.length() > 0)
    b023:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b027:	e8 54 b0 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b02c:	48 83 f8 00          	cmp    rax,0x0
    b030:	76 26                	jbe    b058 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
    b032:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b039:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
                       res.emplace_back(word);
    b03d:	e8 ce b4 ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b042:	eb 00                	jmp    b044 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x314>
                       word = "";
    b044:	48 8d 35 fe 63 00 00 	lea    rsi,[rip+0x63fe]        # 11449 <_IO_stdin_used+0x449>
    b04b:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b04f:	e8 3c b5 ff ff       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    b054:	eb 00                	jmp    b056 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x326>
                   }
    b056:	eb 00                	jmp    b058 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
                   break;
    b058:	eb 22                	jmp    b07c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   break;
    b05a:	eb 20                	jmp    b07c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   word += text[i];
    b05c:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    b060:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b067:	e8 04 b6 ff ff       	call   6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    b06c:	0f be 30             	movsx  esi,BYTE PTR [rax]
    b06f:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b073:	e8 48 b5 ff ff       	call   65c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    b078:	eb 00                	jmp    b07a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34a>
                   break;
    b07a:	eb 00                	jmp    b07c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
    b07c:	eb 00                	jmp    b07e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34e>
    }
    b07e:	eb 00                	jmp    b080 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x350>
    for(size_t i = 0; i < text.length(); i++)
    b080:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b087:	48 83 c0 01          	add    rax,0x1
    b08b:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    b092:	e9 1c fd ff ff       	jmp    adb3 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x83>
    if(word.length() > 0)
    b097:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b09b:	e8 e0 af ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b0a0:	48 83 f8 00          	cmp    rax,0x0
    b0a4:	76 14                	jbe    b0ba <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38a>
    b0a6:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b0ad:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
        res.emplace_back(word);
    b0b1:	e8 5a b4 ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b0b6:	eb 00                	jmp    b0b8 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x388>
    }
    b0b8:	eb 00                	jmp    b0ba <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38a>
    return res;
    b0ba:	c6 45 97 01          	mov    BYTE PTR [rbp-0x69],0x1
}
    b0be:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b0c2:	e8 89 b0 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b0c7:	f6 45 97 01          	test   BYTE PTR [rbp-0x69],0x1
    b0cb:	75 0c                	jne    b0d9 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3a9>
    b0cd:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b0d4:	e8 27 b5 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b0d9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b0e0:	00 00 
    b0e2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b0e6:	48 39 c8             	cmp    rax,rcx
    b0e9:	75 45                	jne    b130 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x400>
    b0eb:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    b0f2:	48 81 c4 b0 00 00 00 	add    rsp,0xb0
    b0f9:	5d                   	pop    rbp
    b0fa:	c3                   	ret
    b0fb:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b102:	e8 f9 b4 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b107:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b10b:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    b112:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b119:	00 00 
    b11b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b11f:	48 39 c8             	cmp    rax,rcx
    b122:	75 0c                	jne    b130 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x400>
    b124:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    b12b:	e8 50 93 ff ff       	call   4480 <_Unwind_Resume@plt>
    b130:	e8 9b 94 ff ff       	call   45d0 <__stack_chk_fail@plt>
    b135:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b13c:	00 00 00 00 

000000000000b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>:

bool VarelseParser::get_reg_arg(const std::string& index, std::size_t& arg)
{
    b140:	f3 0f 1e fa          	endbr64
    b144:	55                   	push   rbp
    b145:	48 89 e5             	mov    rbp,rsp
    b148:	48 83 ec 40          	sub    rsp,0x40
    b14c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    b150:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    b154:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    try
    {
        arg = parse_index(index);
    b158:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    b15c:	e8 4f 00 00 00       	call   b1b0 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    b161:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b165:	eb 00                	jmp    b167 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm+0x27>
    b167:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    b16b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b16f:	48 89 08             	mov    QWORD PTR [rax],rcx
        return true;
    b172:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
    b176:	eb 22                	jmp    b19a <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm+0x5a>
    b178:	f3 0f 1e fa          	endbr64
    b17c:	48 89 c1             	mov    rcx,rax
    }
    catch(...)
    {
        return false;
    }
}
    b17f:	89 d0                	mov    eax,edx
    b181:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    b185:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
    }
    b188:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    b18c:	e8 2f 93 ff ff       	call   44c0 <__cxa_begin_catch@plt>
        return false;
    b191:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
    }
    b195:	e8 36 96 ff ff       	call   47d0 <__cxa_end_catch@plt>
}
    b19a:	8a 45 ff             	mov    al,BYTE PTR [rbp-0x1]
    b19d:	24 01                	and    al,0x1
    b19f:	48 83 c4 40          	add    rsp,0x40
    b1a3:	5d                   	pop    rbp
    b1a4:	c3                   	ret
    b1a5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b1ac:	00 00 00 00 

000000000000b1b0 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
    b1b0:	55                   	push   rbp
    b1b1:	48 89 e5             	mov    rbp,rsp
    b1b4:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    b1bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b1c2:	00 00 
    b1c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1c8:	48 89 bd 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rdi
    if(index.length() == 0)
    b1cf:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    b1d6:	e8 a5 ae ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b1db:	48 83 f8 00          	cmp    rax,0x0
    b1df:	0f 85 09 01 00 00    	jne    b2ee <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x13e>
    b1e5:	c6 85 13 ff ff ff 01 	mov    BYTE PTR [rbp-0xed],0x1
    b1ec:	bf 10 00 00 00       	mov    edi,0x10
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b1f1:	e8 fa 92 ff ff       	call   44f0 <__cxa_allocate_exception@plt>
    b1f6:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
    b1fd:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b204:	48 8d 35 3f 62 00 00 	lea    rsi,[rip+0x623f]        # 1144a <_IO_stdin_used+0x44a>
    b20b:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    b20f:	e8 9c 1d 00 00       	call   cfb0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b214:	eb 00                	jmp    b216 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
    b216:	48 8d 15 3a 62 00 00 	lea    rdx,[rip+0x623a]        # 11457 <_IO_stdin_used+0x457>
    b21d:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b221:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    b225:	e8 36 1d 00 00       	call   cf60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b22a:	eb 00                	jmp    b22c <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>
    b22c:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b233:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    b237:	e8 d4 95 ff ff       	call   4810 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b23c:	eb 00                	jmp    b23e <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e>
    b23e:	c6 85 13 ff ff ff 00 	mov    BYTE PTR [rbp-0xed],0x0
    b245:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b24c:	00 00 
    b24e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b252:	48 39 c8             	cmp    rax,rcx
    b255:	0f 85 f7 03 00 00    	jne    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b25b:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b262:	48 8b 35 87 bd 00 00 	mov    rsi,QWORD PTR [rip+0xbd87]        # 16ff0 <_ZTISt16invalid_argument@GLIBCXX_3.4>
    b269:	48 8b 15 70 bd 00 00 	mov    rdx,QWORD PTR [rip+0xbd70]        # 16fe0 <_ZNSt16invalid_argumentD1Ev@GLIBCXX_3.4>
    b270:	e8 8b 95 ff ff       	call   4800 <__cxa_throw@plt>
    b275:	e9 d8 03 00 00       	jmp    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b27a:	f3 0f 1e fa          	endbr64
    b27e:	48 89 c1             	mov    rcx,rax
}
    b281:	89 d0                	mov    eax,edx
    b283:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b28a:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b290:	eb 40                	jmp    b2d2 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x122>
    b292:	f3 0f 1e fa          	endbr64
    b296:	48 89 c1             	mov    rcx,rax
    b299:	89 d0                	mov    eax,edx
    b29b:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b2a2:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b2a8:	eb 1f                	jmp    b2c9 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x119>
    b2aa:	f3 0f 1e fa          	endbr64
    b2ae:	48 89 c1             	mov    rcx,rax
    b2b1:	89 d0                	mov    eax,edx
    b2b3:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b2ba:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b2c0:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b2c4:	e8 87 ae ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b2c9:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    b2cd:	e8 7e ae ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b2d2:	f6 85 13 ff ff ff 01 	test   BYTE PTR [rbp-0xed],0x1
    b2d9:	75 02                	jne    b2dd <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12d>
    b2db:	eb 0c                	jmp    b2e9 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x139>
    b2dd:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b2e4:	e8 57 92 ff ff       	call   4540 <__cxa_free_exception@plt>
    b2e9:	e9 38 03 00 00       	jmp    b626 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
    size_t res = 0;
    b2ee:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
    b2f5:	00 00 00 00 
    for(char c : index)
    b2f9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b300:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    b307:	48 8b bd 00 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x100]
    b30e:	e8 9d 1d 00 00       	call   d0b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>
    b313:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    b31a:	48 8b bd 00 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x100]
    b321:	e8 ea 1d 00 00       	call   d110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>
    b326:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b32d:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b334:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
    b33b:	e8 50 1e 00 00       	call   d190 <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    b340:	34 ff                	xor    al,0xff
    b342:	a8 01                	test   al,0x1
    b344:	75 05                	jne    b34b <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x19b>
    b346:	e9 ab 02 00 00       	jmp    b5f6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    b34b:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b352:	e8 89 1e 00 00       	call   d1e0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv>
    b357:	8a 00                	mov    al,BYTE PTR [rax]
    b359:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
        std::size_t next_res = res * 10;
    b35f:	48 6b 85 08 ff ff ff 	imul   rax,QWORD PTR [rbp-0xf8],0xa
    b366:	0a 
    b367:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
        if(next_res < res)
    b36e:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    b375:	48 3b 85 08 ff ff ff 	cmp    rax,QWORD PTR [rbp-0xf8]
    b37c:	0f 83 12 01 00 00    	jae    b494 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e4>
    b382:	c6 85 ef fe ff ff 01 	mov    BYTE PTR [rbp-0x111],0x1
    b389:	bf 10 00 00 00       	mov    edi,0x10
            throw std::out_of_range("Can't cast '" + index + "' to std::size_t");
    b38e:	e8 5d 91 ff ff       	call   44f0 <__cxa_allocate_exception@plt>
    b393:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    b39a:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b3a1:	48 8d 35 a2 60 00 00 	lea    rsi,[rip+0x60a2]        # 1144a <_IO_stdin_used+0x44a>
    b3a8:	48 8d bd 78 ff ff ff 	lea    rdi,[rbp-0x88]
    b3af:	e8 fc 1b 00 00       	call   cfb0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b3b4:	eb 00                	jmp    b3b6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x206>
    b3b6:	48 8d 15 9a 60 00 00 	lea    rdx,[rip+0x609a]        # 11457 <_IO_stdin_used+0x457>
    b3bd:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    b3c1:	48 8d b5 78 ff ff ff 	lea    rsi,[rbp-0x88]
    b3c8:	e8 93 1b 00 00       	call   cf60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b3cd:	eb 00                	jmp    b3cf <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x21f>
    b3cf:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b3d6:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    b3da:	e8 91 93 ff ff       	call   4770 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b3df:	eb 00                	jmp    b3e1 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x231>
    b3e1:	c6 85 ef fe ff ff 00 	mov    BYTE PTR [rbp-0x111],0x0
    b3e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b3ef:	00 00 
    b3f1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b3f5:	48 39 c8             	cmp    rax,rcx
    b3f8:	0f 85 54 02 00 00    	jne    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b3fe:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b405:	48 8b 35 dc bb 00 00 	mov    rsi,QWORD PTR [rip+0xbbdc]        # 16fe8 <_ZTISt12out_of_range@GLIBCXX_3.4>
    b40c:	48 8b 15 c5 bb 00 00 	mov    rdx,QWORD PTR [rip+0xbbc5]        # 16fd8 <_ZNSt12out_of_rangeD1Ev@GLIBCXX_3.4>
    b413:	e8 e8 93 ff ff       	call   4800 <__cxa_throw@plt>
    b418:	e9 35 02 00 00       	jmp    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b41d:	f3 0f 1e fa          	endbr64
    b421:	48 89 c1             	mov    rcx,rax
}
    b424:	89 d0                	mov    eax,edx
    b426:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b42d:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b433:	eb 43                	jmp    b478 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c8>
    b435:	f3 0f 1e fa          	endbr64
    b439:	48 89 c1             	mov    rcx,rax
    b43c:	89 d0                	mov    eax,edx
    b43e:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b445:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b44b:	eb 1f                	jmp    b46c <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2bc>
    b44d:	f3 0f 1e fa          	endbr64
    b451:	48 89 c1             	mov    rcx,rax
    b454:	89 d0                	mov    eax,edx
    b456:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b45d:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
            throw std::out_of_range("Can't cast '" + index + "' to std::size_t");
    b463:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    b467:	e8 e4 ac ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b46c:	48 8d bd 78 ff ff ff 	lea    rdi,[rbp-0x88]
    b473:	e8 d8 ac ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b478:	f6 85 ef fe ff ff 01 	test   BYTE PTR [rbp-0x111],0x1
    b47f:	75 02                	jne    b483 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d3>
    b481:	eb 0c                	jmp    b48f <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2df>
    b483:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b48a:	e8 b1 90 ff ff       	call   4540 <__cxa_free_exception@plt>
    b48f:	e9 92 01 00 00       	jmp    b626 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
        if(c >= '0' && c <= '9')
    b494:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b49b:	83 f8 30             	cmp    eax,0x30
    b49e:	7c 2b                	jl     b4cb <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x31b>
    b4a0:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b4a7:	83 f8 39             	cmp    eax,0x39
    b4aa:	7f 1f                	jg     b4cb <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x31b>
            res += c - '0';
    b4ac:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b4b3:	83 e8 30             	sub    eax,0x30
    b4b6:	48 98                	cdqe
    b4b8:	48 03 85 08 ff ff ff 	add    rax,QWORD PTR [rbp-0xf8]
    b4bf:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
        }
    b4c6:	e9 18 01 00 00       	jmp    b5e3 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x433>
    b4cb:	c6 85 ee fe ff ff 01 	mov    BYTE PTR [rbp-0x112],0x1
    b4d2:	bf 10 00 00 00       	mov    edi,0x10
            throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b4d7:	e8 14 90 ff ff       	call   44f0 <__cxa_allocate_exception@plt>
    b4dc:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
    b4e3:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b4ea:	48 8d 35 59 5f 00 00 	lea    rsi,[rip+0x5f59]        # 1144a <_IO_stdin_used+0x44a>
    b4f1:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b4f8:	e8 b3 1a 00 00       	call   cfb0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b4fd:	eb 00                	jmp    b4ff <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34f>
    b4ff:	48 8d 15 51 5f 00 00 	lea    rdx,[rip+0x5f51]        # 11457 <_IO_stdin_used+0x457>
    b506:	48 8d bd 58 ff ff ff 	lea    rdi,[rbp-0xa8]
    b50d:	48 8d b5 38 ff ff ff 	lea    rsi,[rbp-0xc8]
    b514:	e8 47 1a 00 00       	call   cf60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b519:	eb 00                	jmp    b51b <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x36b>
    b51b:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b522:	48 8d b5 58 ff ff ff 	lea    rsi,[rbp-0xa8]
    b529:	e8 e2 92 ff ff       	call   4810 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b52e:	eb 00                	jmp    b530 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x380>
    b530:	c6 85 ee fe ff ff 00 	mov    BYTE PTR [rbp-0x112],0x0
    b537:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b53e:	00 00 
    b540:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b544:	48 39 c8             	cmp    rax,rcx
    b547:	0f 85 05 01 00 00    	jne    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b54d:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b554:	48 8b 35 95 ba 00 00 	mov    rsi,QWORD PTR [rip+0xba95]        # 16ff0 <_ZTISt16invalid_argument@GLIBCXX_3.4>
    b55b:	48 8b 15 7e ba 00 00 	mov    rdx,QWORD PTR [rip+0xba7e]        # 16fe0 <_ZNSt16invalid_argumentD1Ev@GLIBCXX_3.4>
    b562:	e8 99 92 ff ff       	call   4800 <__cxa_throw@plt>
    b567:	e9 e6 00 00 00       	jmp    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b56c:	f3 0f 1e fa          	endbr64
    b570:	48 89 c1             	mov    rcx,rax
}
    b573:	89 d0                	mov    eax,edx
    b575:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b57c:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b582:	eb 46                	jmp    b5ca <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x41a>
    b584:	f3 0f 1e fa          	endbr64
    b588:	48 89 c1             	mov    rcx,rax
    b58b:	89 d0                	mov    eax,edx
    b58d:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b594:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b59a:	eb 22                	jmp    b5be <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40e>
    b59c:	f3 0f 1e fa          	endbr64
    b5a0:	48 89 c1             	mov    rcx,rax
    b5a3:	89 d0                	mov    eax,edx
    b5a5:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b5ac:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
            throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b5b2:	48 8d bd 58 ff ff ff 	lea    rdi,[rbp-0xa8]
    b5b9:	e8 92 ab ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b5be:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b5c5:	e8 86 ab ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b5ca:	f6 85 ee fe ff ff 01 	test   BYTE PTR [rbp-0x112],0x1
    b5d1:	75 02                	jne    b5d5 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x425>
    b5d3:	eb 0c                	jmp    b5e1 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x431>
    b5d5:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b5dc:	e8 5f 8f ff ff       	call   4540 <__cxa_free_exception@plt>
    b5e1:	eb 43                	jmp    b626 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
    for(char c : index)
    b5e3:	eb 00                	jmp    b5e5 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x435>
    b5e5:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b5ec:	e8 0f 1c 00 00       	call   d200 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv>
    b5f1:	e9 37 fd ff ff       	jmp    b32d <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x17d>
    return res;
    b5f6:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    b5fd:	48 89 85 c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rax
    b604:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b60b:	00 00 
    b60d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b611:	48 39 c8             	cmp    rax,rcx
    b614:	75 3c                	jne    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b616:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    b61d:	48 81 c4 40 01 00 00 	add    rsp,0x140
    b624:	5d                   	pop    rbp
    b625:	c3                   	ret
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b626:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    b62d:	48 89 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rax
    b634:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b63b:	00 00 
    b63d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b641:	48 39 c8             	cmp    rax,rcx
    b644:	75 0c                	jne    b652 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b646:	48 8b bd c0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x140]
    b64d:	e8 2e 8e ff ff       	call   4480 <_Unwind_Resume@plt>
    b652:	e8 79 8f ff ff       	call   45d0 <__stack_chk_fail@plt>
    b657:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b65e:	00 00 

000000000000b660 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>:

bool VarelseParser::get_command_args(const std::vector<std::string>& line, std::vector<std::string>& args)
{
    b660:	f3 0f 1e fa          	endbr64
    b664:	55                   	push   rbp
    b665:	48 89 e5             	mov    rbp,rsp
    b668:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    b66f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b676:	00 00 
    b678:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b67c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b680:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b684:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    b688:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b68c:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    std::vector<std::string> res;
    b690:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b694:	e8 c7 ad ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    for(size_t i = 0; i < line.size() - 1; i++)
    b699:	48 c7 45 b0 00 00 00 	mov    QWORD PTR [rbp-0x50],0x0
    b6a0:	00 
    b6a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6a5:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    b6a9:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    b6ad:	e8 ce a7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b6b2:	48 89 c1             	mov    rcx,rax
    b6b5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    b6b9:	48 83 e9 01          	sub    rcx,0x1
    b6bd:	48 39 c8             	cmp    rax,rcx
    b6c0:	0f 83 87 00 00 00    	jae    b74d <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xed>
    {
        std::size_t index;
        if(get_reg_arg(line[i], index))
    b6c6:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    b6ca:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    b6ce:	e8 cd a7 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b6d3:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    b6d7:	48 89 c6             	mov    rsi,rax
    b6da:	48 8d 55 d8          	lea    rdx,[rbp-0x28]
    b6de:	e8 5d fa ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    b6e3:	88 45 8f             	mov    BYTE PTR [rbp-0x71],al
    b6e6:	eb 00                	jmp    b6e8 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x88>
    b6e8:	8a 45 8f             	mov    al,BYTE PTR [rbp-0x71]
    b6eb:	a8 01                	test   al,0x1
    b6ed:	75 02                	jne    b6f1 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x91>
    b6ef:	eb 3c                	jmp    b72d <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xcd>
    b6f1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
        {
            res.emplace_back(registers[index]);
    b6f5:	48 83 c7 70          	add    rdi,0x70
    b6f9:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    b6fd:	e8 0e 13 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    b702:	48 89 c6             	mov    rsi,rax
    b705:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b709:	e8 02 ae ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b70e:	eb 00                	jmp    b710 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xb0>
        }
    b710:	eb 28                	jmp    b73a <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xda>
    b712:	f3 0f 1e fa          	endbr64
    b716:	48 89 c1             	mov    rcx,rax
            return false;
        }
    }
    args = res;
    return true;
}
    b719:	89 d0                	mov    eax,edx
    b71b:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    b71f:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    b722:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b726:	e8 d5 ae ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b72b:	eb 69                	jmp    b796 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x136>
            return false;
    b72d:	c6 45 d7 00          	mov    BYTE PTR [rbp-0x29],0x0
    b731:	c7 45 a0 01 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1
    b738:	eb 2d                	jmp    b767 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x107>
    }
    b73a:	eb 00                	jmp    b73c <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xdc>
    for(size_t i = 0; i < line.size() - 1; i++)
    b73c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b740:	48 83 c0 01          	add    rax,0x1
    b744:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b748:	e9 54 ff ff ff       	jmp    b6a1 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x41>
    args = res;
    b74d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    b751:	48 8d 75 e0          	lea    rsi,[rbp-0x20]
    b755:	e8 e6 12 00 00       	call   ca40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
    b75a:	eb 00                	jmp    b75c <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xfc>
    return true;
    b75c:	c6 45 d7 01          	mov    BYTE PTR [rbp-0x29],0x1
    b760:	c7 45 a0 01 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1
    b767:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
}
    b76b:	e8 90 ae ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b770:	8a 45 d7             	mov    al,BYTE PTR [rbp-0x29]
    b773:	88 45 8e             	mov    BYTE PTR [rbp-0x72],al
    b776:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b77d:	00 00 
    b77f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b783:	48 39 c8             	cmp    rax,rcx
    b786:	75 31                	jne    b7b9 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x159>
    b788:	8a 45 8e             	mov    al,BYTE PTR [rbp-0x72]
    b78b:	24 01                	and    al,0x1
    b78d:	48 81 c4 80 00 00 00 	add    rsp,0x80
    b794:	5d                   	pop    rbp
    b795:	c3                   	ret
    b796:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b79a:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b79e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b7a5:	00 00 
    b7a7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b7ab:	48 39 c8             	cmp    rax,rcx
    b7ae:	75 09                	jne    b7b9 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x159>
    b7b0:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    b7b4:	e8 c7 8c ff ff       	call   4480 <_Unwind_Resume@plt>
    b7b9:	e8 12 8e ff ff       	call   45d0 <__stack_chk_fail@plt>
    b7be:	66 90                	xchg   ax,ax

000000000000b7c0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>:

void VarelseParser::parse(TerminalIO& terminal, std::string& current_dir, const std::vector<std::string>& lines, std::size_t ip)
{
    b7c0:	f3 0f 1e fa          	endbr64
    b7c4:	55                   	push   rbp
    b7c5:	48 89 e5             	mov    rbp,rsp
    b7c8:	48 81 ec 70 03 00 00 	sub    rsp,0x370
    b7cf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b7d6:	00 00 
    b7d8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7dc:	48 89 bd 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rdi
    b7e3:	48 89 b5 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rsi
    b7ea:	48 89 95 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rdx
    b7f1:	48 89 8d 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rcx
    b7f8:	4c 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],r8
    b7ff:	48 8b 85 60 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a0]
    b806:	48 89 85 10 fe ff ff 	mov    QWORD PTR [rbp-0x1f0],rax
    std::unordered_map<std::string, size_t> labels;
    b80d:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    b814:	e8 37 15 00 00       	call   cd50 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEEC2Ev>
    for(size_t i = 0; i < lines.size(); i++)
    b819:	48 c7 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],0x0
    b820:	00 00 00 00 
    b824:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    b82b:	48 89 85 08 fe ff ff 	mov    QWORD PTR [rbp-0x1f8],rax
    b832:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b839:	e8 42 a6 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b83e:	48 89 c1             	mov    rcx,rax
    b841:	48 8b 85 08 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1f8]
    b848:	48 39 c8             	cmp    rax,rcx
    b84b:	0f 83 d2 01 00 00    	jae    ba23 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x263>
    {
        if(lines[i].ends_with('<'))
    b851:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b858:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b85f:	e8 3c a6 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b864:	48 89 c7             	mov    rdi,rax
    b867:	be 3c 00 00 00       	mov    esi,0x3c
    b86c:	e8 ff 14 00 00       	call   cd70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc>
    b871:	a8 01                	test   al,0x1
    b873:	75 05                	jne    b87a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xba>
    b875:	e9 90 01 00 00       	jmp    ba0a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24a>
        {
            std::vector<std::string> line = split_line(lines[i]);
    b87a:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b881:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b888:	e8 13 a6 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b88d:	48 8b b5 10 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1f0]
    b894:	48 89 c2             	mov    rdx,rax
    b897:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b89e:	e8 8d f4 ff ff       	call   ad30 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    b8a3:	eb 00                	jmp    b8a5 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe5>
    b8a5:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
            std::string op = line.back(); 
    b8ac:	e8 5f bd ff ff       	call   7610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    b8b1:	48 89 c6             	mov    rsi,rax
    b8b4:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b8b8:	e8 53 a6 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    b8bd:	eb 00                	jmp    b8bf <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xff>
            if(op.length() == 1)
    b8bf:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b8c3:	e8 b8 a7 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b8c8:	48 83 f8 01          	cmp    rax,0x1
    b8cc:	0f 85 10 01 00 00    	jne    b9e2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x222>
            {
                if(line.size() == 2)
    b8d2:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b8d9:	e8 a2 a5 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b8de:	48 83 f8 02          	cmp    rax,0x2
    b8e2:	0f 85 b3 00 00 00    	jne    b99b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1db>
    b8e8:	31 c0                	xor    eax,eax
    b8ea:	89 c6                	mov    esi,eax
    b8ec:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
                {
                    labels.emplace(line[0], i + 1);
    b8f3:	e8 78 ae ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b8f8:	48 89 c6             	mov    rsi,rax
    b8fb:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    b902:	48 ff c0             	inc    rax
    b905:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    b90c:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    b913:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    b91a:	e8 e1 14 00 00       	call   ce00 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_>
    b91f:	88 95 ff fd ff ff    	mov    BYTE PTR [rbp-0x201],dl
    b925:	48 89 85 00 fe ff ff 	mov    QWORD PTR [rbp-0x200],rax
    b92c:	eb 00                	jmp    b92e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x16e>
    b92e:	8a 85 ff fd ff ff    	mov    al,BYTE PTR [rbp-0x201]
    b934:	48 8b 8d 00 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x200]
    b93b:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    b93f:	88 45 90             	mov    BYTE PTR [rbp-0x70],al
                }
    b942:	e9 99 00 00 00       	jmp    b9e0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x220>
    b947:	f3 0f 1e fa          	endbr64
    b94b:	48 89 c1             	mov    rcx,rax
                    }
                }
            }
        }
    }
}
    b94e:	89 d0                	mov    eax,edx
    b950:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b957:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    b95d:	e9 19 10 00 00       	jmp    c97b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    b962:	f3 0f 1e fa          	endbr64
    b966:	48 89 c1             	mov    rcx,rax
    b969:	89 d0                	mov    eax,edx
    b96b:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b972:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    b978:	eb 7f                	jmp    b9f9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x239>
    b97a:	f3 0f 1e fa          	endbr64
    b97e:	48 89 c1             	mov    rcx,rax
    b981:	89 d0                	mov    eax,edx
    b983:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b98a:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
        }
    b990:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b994:	e8 b7 a7 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b999:	eb 5e                	jmp    b9f9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x239>
                    terminal.print_error("Invalid instruction '%s'\r\n", lines[i].c_str());
    b99b:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    b9a2:	48 89 85 f0 fd ff ff 	mov    QWORD PTR [rbp-0x210],rax
    b9a9:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b9b0:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b9b7:	e8 e4 a4 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b9bc:	48 89 c7             	mov    rdi,rax
    b9bf:	e8 0c a5 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    b9c4:	48 8b bd f0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x210]
    b9cb:	48 89 c2             	mov    rdx,rax
    b9ce:	48 8d 35 17 5a 00 00 	lea    rsi,[rip+0x5a17]        # 113ec <_IO_stdin_used+0x3ec>
    b9d5:	31 c0                	xor    eax,eax
    b9d7:	e8 74 d9 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    b9dc:	eb 00                	jmp    b9de <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x21e>
    b9de:	eb 00                	jmp    b9e0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x220>
            }
    b9e0:	eb 00                	jmp    b9e2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x222>
        }
    b9e2:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b9e6:	e8 65 a7 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b9eb:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b9f2:	e8 09 ac ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b9f7:	eb 11                	jmp    ba0a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24a>
    b9f9:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    ba00:	e8 fb ab ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    ba05:	e9 71 0f 00 00       	jmp    c97b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    }
    ba0a:	eb 00                	jmp    ba0c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24c>
    for(size_t i = 0; i < lines.size(); i++)
    ba0c:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    ba13:	48 83 c0 01          	add    rax,0x1
    ba17:	48 89 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],rax
    ba1e:	e9 01 fe ff ff       	jmp    b824 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x64>
    for(;ip < lines.size(); ip++)
    ba23:	eb 00                	jmp    ba25 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x265>
    ba25:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    ba2c:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    ba33:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    ba3a:	e8 41 a4 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    ba3f:	48 89 c1             	mov    rcx,rax
    ba42:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    ba49:	48 39 c8             	cmp    rax,rcx
    ba4c:	0f 83 02 0f 00 00    	jae    c954 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1194>
        std::vector<std::string> line = split_line(lines[ip]);
    ba52:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    ba59:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    ba60:	e8 3b a4 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    ba65:	48 8b b5 10 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1f0]
    ba6c:	48 89 c2             	mov    rdx,rax
    ba6f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    ba76:	e8 b5 f2 ff ff       	call   ad30 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    ba7b:	eb 00                	jmp    ba7d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x2bd>
        if(line.size() > 0)
    ba7d:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    ba84:	e8 f7 a3 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    ba89:	48 83 f8 00          	cmp    rax,0x0
    ba8d:	0f 86 90 0e 00 00    	jbe    c923 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1163>
    ba93:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
            std::string op = line.back(); 
    ba9a:	e8 71 bb ff ff       	call   7610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    ba9f:	48 89 c6             	mov    rsi,rax
    baa2:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    baa6:	e8 65 a4 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    baab:	eb 00                	jmp    baad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x2ed>
            if(op.length() != 1)
    baad:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    bab1:	e8 ca a5 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    bab6:	48 83 f8 01          	cmp    rax,0x1
    baba:	74 6c                	je     bb28 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x368>
                terminal.print_error("Unknown command '%s'\r\n", op.c_str());
    babc:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bac3:	48 89 85 e0 fd ff ff 	mov    QWORD PTR [rbp-0x220],rax
    baca:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    bace:	e8 fd a3 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bad3:	48 8b bd e0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x220]
    bada:	48 89 c2             	mov    rdx,rax
    badd:	48 8d 35 2c 56 00 00 	lea    rsi,[rip+0x562c]        # 11110 <_IO_stdin_used+0x110>
    bae4:	31 c0                	xor    eax,eax
    bae6:	e8 65 d8 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    baeb:	eb 00                	jmp    baed <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x32d>
            }
    baed:	e9 1b 0e 00 00       	jmp    c90d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114d>
    baf2:	f3 0f 1e fa          	endbr64
    baf6:	48 89 c1             	mov    rcx,rax
}
    baf9:	89 d0                	mov    eax,edx
    bafb:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    bb02:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    bb08:	e9 39 0e 00 00       	jmp    c946 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1186>
    bb0d:	f3 0f 1e fa          	endbr64
    bb11:	48 89 c1             	mov    rcx,rax
    bb14:	89 d0                	mov    eax,edx
    bb16:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    bb1d:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    bb23:	e9 f0 0d 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
    bb28:	31 c0                	xor    eax,eax
    bb2a:	89 c6                	mov    esi,eax
    bb2c:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
                switch(op[0])
    bb30:	e8 fb d1 ff ff       	call   8d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    bb35:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    bb3c:	eb 00                	jmp    bb3e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x37e>
    bb3e:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    bb45:	0f be 00             	movsx  eax,BYTE PTR [rax]
    bb48:	83 c0 dd             	add    eax,0xffffffdd
    bb4b:	89 c1                	mov    ecx,eax
    bb4d:	48 89 8d d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],rcx
    bb54:	83 e8 5a             	sub    eax,0x5a
    bb57:	0f 87 7b 0d 00 00    	ja     c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1118>
    bb5d:	48 8b 85 d0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x230]
    bb64:	48 8d 0d 3d 59 00 00 	lea    rcx,[rip+0x593d]        # 114a8 <_IO_stdin_used+0x4a8>
    bb6b:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    bb6f:	48 01 c8             	add    rax,rcx
    bb72:	3e ff e0             	notrack jmp rax
                        if(line.size() == 3 && get_reg_arg(line[0], arg1) && get_reg_arg(line[1], arg2))
    bb75:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bb7c:	e8 ff a2 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bb81:	48 83 f8 03          	cmp    rax,0x3
    bb85:	0f 85 c3 00 00 00    	jne    bc4e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bb8b:	31 c0                	xor    eax,eax
    bb8d:	89 c6                	mov    esi,eax
    bb8f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bb96:	e8 d5 ab ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bb9b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bba2:	48 89 c6             	mov    rsi,rax
    bba5:	48 8d 95 10 ff ff ff 	lea    rdx,[rbp-0xf0]
    bbac:	e8 8f f5 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bbb1:	88 85 cf fd ff ff    	mov    BYTE PTR [rbp-0x231],al
    bbb7:	eb 00                	jmp    bbb9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x3f9>
    bbb9:	8a 85 cf fd ff ff    	mov    al,BYTE PTR [rbp-0x231]
    bbbf:	a8 01                	test   al,0x1
    bbc1:	75 05                	jne    bbc8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x408>
    bbc3:	e9 86 00 00 00       	jmp    bc4e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bbc8:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bbcf:	be 01 00 00 00       	mov    esi,0x1
    bbd4:	e8 97 ab ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bbd9:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bbe0:	48 89 c6             	mov    rsi,rax
    bbe3:	48 8d 95 08 ff ff ff 	lea    rdx,[rbp-0xf8]
    bbea:	e8 51 f5 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bbef:	88 85 ce fd ff ff    	mov    BYTE PTR [rbp-0x232],al
    bbf5:	eb 00                	jmp    bbf7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x437>
    bbf7:	8a 85 ce fd ff ff    	mov    al,BYTE PTR [rbp-0x232]
    bbfd:	a8 01                	test   al,0x1
    bbff:	75 02                	jne    bc03 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x443>
    bc01:	eb 4b                	jmp    bc4e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bc03:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            registers[arg1] = registers[arg2];
    bc0a:	48 83 c7 70          	add    rdi,0x70
    bc0e:	48 89 bd b8 fd ff ff 	mov    QWORD PTR [rbp-0x248],rdi
    bc15:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
    bc1c:	e8 ef 0d 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bc21:	48 8b bd b8 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x248]
    bc28:	48 89 85 c0 fd ff ff 	mov    QWORD PTR [rbp-0x240],rax
    bc2f:	48 8b b5 10 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf0]
    bc36:	e8 d5 0d 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bc3b:	48 8b b5 c0 fd ff ff 	mov    rsi,QWORD PTR [rbp-0x240]
    bc42:	48 89 c7             	mov    rdi,rax
    bc45:	e8 96 df ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    bc4a:	eb 00                	jmp    bc4c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48c>
                        }
    bc4c:	eb 45                	jmp    bc93 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d3>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bc4e:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bc55:	48 89 85 b0 fd ff ff 	mov    QWORD PTR [rbp-0x250],rax
    bc5c:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bc63:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bc6a:	e8 31 a2 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bc6f:	48 89 c7             	mov    rdi,rax
    bc72:	e8 59 a2 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bc77:	48 8b bd b0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x250]
    bc7e:	48 89 c2             	mov    rdx,rax
    bc81:	48 8d 35 64 57 00 00 	lea    rsi,[rip+0x5764]        # 113ec <_IO_stdin_used+0x3ec>
    bc88:	31 c0                	xor    eax,eax
    bc8a:	e8 c1 d6 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    bc8f:	eb 00                	jmp    bc91 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d1>
    bc91:	eb 00                	jmp    bc93 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d3>
                        break;
    bc93:	e9 73 0c 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 3 && get_reg_arg(line[0], arg1))
    bc98:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bc9f:	e8 dc a1 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bca4:	48 83 f8 03          	cmp    rax,0x3
    bca8:	75 7c                	jne    bd26 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x566>
    bcaa:	31 c0                	xor    eax,eax
    bcac:	89 c6                	mov    esi,eax
    bcae:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bcb5:	e8 b6 aa ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bcba:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bcc1:	48 89 c6             	mov    rsi,rax
    bcc4:	48 8d 95 00 ff ff ff 	lea    rdx,[rbp-0x100]
    bccb:	e8 70 f4 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bcd0:	88 85 af fd ff ff    	mov    BYTE PTR [rbp-0x251],al
    bcd6:	eb 00                	jmp    bcd8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x518>
    bcd8:	8a 85 af fd ff ff    	mov    al,BYTE PTR [rbp-0x251]
    bcde:	a8 01                	test   al,0x1
    bce0:	75 02                	jne    bce4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x524>
    bce2:	eb 42                	jmp    bd26 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x566>
    bce4:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bceb:	be 01 00 00 00       	mov    esi,0x1
                            registers[arg1] = line[1];
    bcf0:	e8 7b aa ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bcf5:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bcfc:	48 89 85 a0 fd ff ff 	mov    QWORD PTR [rbp-0x260],rax
    bd03:	48 83 c7 70          	add    rdi,0x70
    bd07:	48 8b b5 00 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x100]
    bd0e:	e8 fd 0c 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bd13:	48 8b b5 a0 fd ff ff 	mov    rsi,QWORD PTR [rbp-0x260]
    bd1a:	48 89 c7             	mov    rdi,rax
    bd1d:	e8 be de ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    bd22:	eb 00                	jmp    bd24 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x564>
                        }
    bd24:	eb 45                	jmp    bd6b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5ab>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bd26:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bd2d:	48 89 85 98 fd ff ff 	mov    QWORD PTR [rbp-0x268],rax
    bd34:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bd3b:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bd42:	e8 59 a1 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bd47:	48 89 c7             	mov    rdi,rax
    bd4a:	e8 81 a1 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bd4f:	48 8b bd 98 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x268]
    bd56:	48 89 c2             	mov    rdx,rax
    bd59:	48 8d 35 8c 56 00 00 	lea    rsi,[rip+0x568c]        # 113ec <_IO_stdin_used+0x3ec>
    bd60:	31 c0                	xor    eax,eax
    bd62:	e8 e9 d5 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    bd67:	eb 00                	jmp    bd69 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5a9>
    bd69:	eb 00                	jmp    bd6b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5ab>
                        break;
    bd6b:	e9 9b 0b 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        break;
    bd70:	e9 96 0b 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 2 && get_reg_arg(line[0], arg1))
    bd75:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bd7c:	e8 ff a0 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bd81:	48 83 f8 02          	cmp    rax,0x2
    bd85:	0f 85 49 01 00 00    	jne    bed4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x714>
    bd8b:	31 c0                	xor    eax,eax
    bd8d:	89 c6                	mov    esi,eax
    bd8f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bd96:	e8 d5 a9 ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bd9b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bda2:	48 89 c6             	mov    rsi,rax
    bda5:	48 8d 95 f8 fe ff ff 	lea    rdx,[rbp-0x108]
    bdac:	e8 8f f3 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bdb1:	88 85 97 fd ff ff    	mov    BYTE PTR [rbp-0x269],al
    bdb7:	eb 00                	jmp    bdb9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5f9>
    bdb9:	8a 85 97 fd ff ff    	mov    al,BYTE PTR [rbp-0x269]
    bdbf:	a8 01                	test   al,0x1
    bdc1:	75 05                	jne    bdc8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x608>
    bdc3:	e9 0c 01 00 00       	jmp    bed4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x714>
    bdc8:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            std::string loc = registers[arg1];
    bdcf:	48 83 c7 70          	add    rdi,0x70
    bdd3:	48 8b b5 f8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x108]
    bdda:	e8 31 0c 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bddf:	48 89 c6             	mov    rsi,rax
    bde2:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    bde6:	e8 25 a1 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    bdeb:	eb 00                	jmp    bded <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x62d>
    bded:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    bdf4:	48 8d 75 98          	lea    rsi,[rbp-0x68]
                            if(labels.find(loc) != labels.end())
    bdf8:	e8 b3 10 00 00       	call   ceb0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE4findERSB_>
    bdfd:	48 89 85 88 fd ff ff 	mov    QWORD PTR [rbp-0x278],rax
    be04:	eb 00                	jmp    be06 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x646>
    be06:	48 8b 85 88 fd ff ff 	mov    rax,QWORD PTR [rbp-0x278]
    be0d:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    be14:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    be1b:	e8 c0 10 00 00       	call   cee0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE3endEv>
    be20:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    be27:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
    be2e:	48 8d b5 e8 fe ff ff 	lea    rsi,[rbp-0x118]
    be35:	e8 46 10 00 00       	call   ce80 <_ZNSt8__detaileqERKNS_19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESC_>
    be3a:	34 ff                	xor    al,0xff
    be3c:	a8 01                	test   al,0x1
    be3e:	75 02                	jne    be42 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x682>
    be40:	eb 54                	jmp    be96 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x6d6>
    be42:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    be49:	48 8d 75 98          	lea    rsi,[rbp-0x68]
                                ip = labels.at(loc) - 1; // will add 1 at end of loop
    be4d:	e8 be 10 00 00       	call   cf10 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE2atERSB_>
    be52:	48 89 85 80 fd ff ff 	mov    QWORD PTR [rbp-0x280],rax
    be59:	eb 00                	jmp    be5b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x69b>
    be5b:	48 8b 85 80 fd ff ff 	mov    rax,QWORD PTR [rbp-0x280]
    be62:	48 8b 00             	mov    rax,QWORD PTR [rax]
    be65:	48 83 e8 01          	sub    rax,0x1
    be69:	48 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rax
                            }
    be70:	eb 57                	jmp    bec9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x709>
    be72:	f3 0f 1e fa          	endbr64
    be76:	48 89 c1             	mov    rcx,rax
}
    be79:	89 d0                	mov    eax,edx
    be7b:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    be82:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                        }
    be88:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    be8c:	e8 bf a2 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    be91:	e9 82 0a 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid jump location '%s'\r\n", loc.c_str());
    be96:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    be9d:	48 89 85 78 fd ff ff 	mov    QWORD PTR [rbp-0x288],rax
    bea4:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    bea8:	e8 23 a0 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bead:	48 8b bd 78 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x288]
    beb4:	48 89 c2             	mov    rdx,rax
    beb7:	48 8d 35 49 55 00 00 	lea    rsi,[rip+0x5549]        # 11407 <_IO_stdin_used+0x407>
    bebe:	31 c0                	xor    eax,eax
    bec0:	e8 8b d4 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    bec5:	eb 00                	jmp    bec7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x707>
    bec7:	eb 00                	jmp    bec9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x709>
                        }
    bec9:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    becd:	e8 7e a2 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    bed2:	eb 45                	jmp    bf19 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x759>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bed4:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bedb:	48 89 85 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rax
    bee2:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bee9:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bef0:	e8 ab 9f ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bef5:	48 89 c7             	mov    rdi,rax
    bef8:	e8 d3 9f ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    befd:	48 8b bd 70 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x290]
    bf04:	48 89 c2             	mov    rdx,rax
    bf07:	48 8d 35 de 54 00 00 	lea    rsi,[rip+0x54de]        # 113ec <_IO_stdin_used+0x3ec>
    bf0e:	31 c0                	xor    eax,eax
    bf10:	e8 3b d4 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    bf15:	eb 00                	jmp    bf17 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x757>
    bf17:	eb 00                	jmp    bf19 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x759>
                        break;
    bf19:	e9 ed 09 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() < 2)
    bf1e:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bf25:	e8 56 9f ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bf2a:	48 83 f8 02          	cmp    rax,0x2
    bf2e:	73 48                	jae    bf78 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7b8>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bf30:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bf37:	48 89 85 68 fd ff ff 	mov    QWORD PTR [rbp-0x298],rax
    bf3e:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bf45:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bf4c:	e8 4f 9f ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bf51:	48 89 c7             	mov    rdi,rax
    bf54:	e8 77 9f ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bf59:	48 8b bd 68 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x298]
    bf60:	48 89 c2             	mov    rdx,rax
    bf63:	48 8d 35 82 54 00 00 	lea    rsi,[rip+0x5482]        # 113ec <_IO_stdin_used+0x3ec>
    bf6a:	31 c0                	xor    eax,eax
    bf6c:	e8 df d3 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    bf71:	eb 00                	jmp    bf73 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7b3>
                        }
    bf73:	e9 d7 00 00 00       	jmp    c04f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x88f>
    bf78:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    bf7f:	48 89 bd 58 fd ff ff 	mov    QWORD PTR [rbp-0x2a8],rdi
                            std::vector<std::string> cmd_args;
    bf86:	e8 d5 a4 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    bf8b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bf92:	48 8b 95 58 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2a8]
    bf99:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                            if(get_command_args(line, cmd_args))
    bfa0:	e8 bb f6 ff ff       	call   b660 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    bfa5:	88 85 67 fd ff ff    	mov    BYTE PTR [rbp-0x299],al
    bfab:	eb 00                	jmp    bfad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7ed>
    bfad:	8a 85 67 fd ff ff    	mov    al,BYTE PTR [rbp-0x299]
    bfb3:	a8 01                	test   al,0x1
    bfb5:	75 02                	jne    bfb9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7f9>
    bfb7:	eb 45                	jmp    bffe <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x83e>
    bfb9:	48 8b 95 10 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1f0]
                                exec_process(terminal, cmd_args, streams);
    bfc0:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    bfc7:	48 8d b5 d0 fe ff ff 	lea    rsi,[rbp-0x130]
    bfce:	e8 8d 91 ff ff       	call   5160 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream>
    bfd3:	eb 00                	jmp    bfd5 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x815>
                            }
    bfd5:	eb 6c                	jmp    c043 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x883>
    bfd7:	f3 0f 1e fa          	endbr64
    bfdb:	48 89 c1             	mov    rcx,rax
}
    bfde:	89 d0                	mov    eax,edx
    bfe0:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    bfe7:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                        }
    bfed:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    bff4:	e8 07 a6 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    bff9:	e9 1a 09 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bffe:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c005:	48 89 85 50 fd ff ff 	mov    QWORD PTR [rbp-0x2b0],rax
    c00c:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c013:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c01a:	e8 81 9e ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c01f:	48 89 c7             	mov    rdi,rax
    c022:	e8 a9 9e ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c027:	48 8b bd 50 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2b0]
    c02e:	48 89 c2             	mov    rdx,rax
    c031:	48 8d 35 b4 53 00 00 	lea    rsi,[rip+0x53b4]        # 113ec <_IO_stdin_used+0x3ec>
    c038:	31 c0                	xor    eax,eax
    c03a:	e8 11 d3 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c03f:	eb 00                	jmp    c041 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x881>
    c041:	eb 00                	jmp    c043 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x883>
                        }
    c043:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    c04a:	e8 b1 a5 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
                        break;
    c04f:	e9 b7 08 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        std::vector<std::string> args;
    c054:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c05b:	e8 00 a4 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
                        if(line.size() == 2)
    c060:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c067:	e8 14 9e ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c06c:	48 83 f8 02          	cmp    rax,0x2
    c070:	0f 85 04 01 00 00    	jne    c17a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9ba>
                            if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c076:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c07d:	e8 fe 9d ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c082:	48 83 f8 02          	cmp    rax,0x2
    c086:	0f 85 a7 00 00 00    	jne    c133 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x973>
    c08c:	31 c0                	xor    eax,eax
    c08e:	89 c6                	mov    esi,eax
    c090:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c097:	e8 d4 a6 ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c09c:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c0a3:	48 89 c6             	mov    rsi,rax
    c0a6:	48 8d 95 b0 fe ff ff 	lea    rdx,[rbp-0x150]
    c0ad:	e8 8e f0 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c0b2:	88 85 4f fd ff ff    	mov    BYTE PTR [rbp-0x2b1],al
    c0b8:	eb 00                	jmp    c0ba <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x8fa>
    c0ba:	8a 85 4f fd ff ff    	mov    al,BYTE PTR [rbp-0x2b1]
    c0c0:	a8 01                	test   al,0x1
    c0c2:	75 02                	jne    c0c6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x906>
    c0c4:	eb 6d                	jmp    c133 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x973>
    c0c6:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                                args.emplace_back(registers[arg1]);
    c0cd:	48 83 c7 70          	add    rdi,0x70
    c0d1:	48 8b b5 b0 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x150]
    c0d8:	e8 33 09 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c0dd:	48 89 c6             	mov    rsi,rax
    c0e0:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c0e7:	e8 24 a4 ff ff       	call   6510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    c0ec:	eb 00                	jmp    c0ee <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x92e>
                                cd_cmd(terminal, current_dir, args);
    c0ee:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c0f5:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c0fc:	48 8d 95 b8 fe ff ff 	lea    rdx,[rbp-0x148]
    c103:	e8 28 8b ff ff       	call   4c30 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c108:	eb 00                	jmp    c10a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x94a>
                            }
    c10a:	eb 6c                	jmp    c178 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b8>
    c10c:	f3 0f 1e fa          	endbr64
    c110:	48 89 c1             	mov    rcx,rax
}
    c113:	89 d0                	mov    eax,edx
    c115:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c11c:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c122:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c129:	e8 d2 a4 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c12e:	e9 e5 07 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c133:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c13a:	48 89 85 40 fd ff ff 	mov    QWORD PTR [rbp-0x2c0],rax
    c141:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c148:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c14f:	e8 4c 9d ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c154:	48 89 c7             	mov    rdi,rax
    c157:	e8 74 9d ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c15c:	48 8b bd 40 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2c0]
    c163:	48 89 c2             	mov    rdx,rax
    c166:	48 8d 35 7f 52 00 00 	lea    rsi,[rip+0x527f]        # 113ec <_IO_stdin_used+0x3ec>
    c16d:	31 c0                	xor    eax,eax
    c16f:	e8 dc d1 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c174:	eb 00                	jmp    c176 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b6>
    c176:	eb 00                	jmp    c178 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b8>
                        }
    c178:	eb 77                	jmp    c1f1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa31>
                        else if(line.size() == 1)
    c17a:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c181:	e8 fa 9c ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c186:	48 83 f8 01          	cmp    rax,0x1
    c18a:	75 1e                	jne    c1aa <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9ea>
                            cd_cmd(terminal, current_dir, args);
    c18c:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c193:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c19a:	48 8d 95 b8 fe ff ff 	lea    rdx,[rbp-0x148]
    c1a1:	e8 8a 8a ff ff       	call   4c30 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c1a6:	eb 00                	jmp    c1a8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9e8>
                        }
    c1a8:	eb 45                	jmp    c1ef <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2f>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c1aa:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c1b1:	48 89 85 38 fd ff ff 	mov    QWORD PTR [rbp-0x2c8],rax
    c1b8:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c1bf:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c1c6:	e8 d5 9c ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c1cb:	48 89 c7             	mov    rdi,rax
    c1ce:	e8 fd 9c ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c1d3:	48 8b bd 38 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2c8]
    c1da:	48 89 c2             	mov    rdx,rax
    c1dd:	48 8d 35 08 52 00 00 	lea    rsi,[rip+0x5208]        # 113ec <_IO_stdin_used+0x3ec>
    c1e4:	31 c0                	xor    eax,eax
    c1e6:	e8 65 d1 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c1eb:	eb 00                	jmp    c1ed <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2d>
    c1ed:	eb 00                	jmp    c1ef <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2f>
    c1ef:	eb 00                	jmp    c1f1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa31>
                    }
    c1f1:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c1f8:	e8 03 a4 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c1fd:	e9 09 07 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c202:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c209:	48 89 bd 28 fd ff ff 	mov    QWORD PTR [rbp-0x2d8],rdi
                        std::vector<std::string> cmd_args;
    c210:	e8 4b a2 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    c215:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c21c:	48 8b 95 28 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2d8]
    c223:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                        if(get_command_args(line, cmd_args))
    c22a:	e8 31 f4 ff ff       	call   b660 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    c22f:	88 85 37 fd ff ff    	mov    BYTE PTR [rbp-0x2c9],al
    c235:	eb 00                	jmp    c237 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa77>
    c237:	8a 85 37 fd ff ff    	mov    al,BYTE PTR [rbp-0x2c9]
    c23d:	a8 01                	test   al,0x1
    c23f:	75 02                	jne    c243 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa83>
    c241:	eb 45                	jmp    c288 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xac8>
                            dir_cmd(terminal, current_dir, cmd_args);
    c243:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c24a:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c251:	48 8d 95 98 fe ff ff 	lea    rdx,[rbp-0x168]
    c258:	e8 83 86 ff ff       	call   48e0 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c25d:	eb 00                	jmp    c25f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa9f>
                        }
    c25f:	eb 6c                	jmp    c2cd <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0d>
    c261:	f3 0f 1e fa          	endbr64
    c265:	48 89 c1             	mov    rcx,rax
}
    c268:	89 d0                	mov    eax,edx
    c26a:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c271:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c277:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c27e:	e8 7d a3 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c283:	e9 90 06 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c288:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c28f:	48 89 85 20 fd ff ff 	mov    QWORD PTR [rbp-0x2e0],rax
    c296:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c29d:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c2a4:	e8 f7 9b ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c2a9:	48 89 c7             	mov    rdi,rax
    c2ac:	e8 1f 9c ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c2b1:	48 8b bd 20 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2e0]
    c2b8:	48 89 c2             	mov    rdx,rax
    c2bb:	48 8d 35 2a 51 00 00 	lea    rsi,[rip+0x512a]        # 113ec <_IO_stdin_used+0x3ec>
    c2c2:	31 c0                	xor    eax,eax
    c2c4:	e8 87 d0 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c2c9:	eb 00                	jmp    c2cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0b>
    c2cb:	eb 00                	jmp    c2cd <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0d>
                    }
    c2cd:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c2d4:	e8 27 a3 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c2d9:	e9 2d 06 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c2de:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c2e5:	e8 96 9b ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c2ea:	48 83 f8 01          	cmp    rax,0x1
    c2ee:	75 19                	jne    c309 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb49>
                            terminal.print("\033[2J\033[H");
    c2f0:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c2f7:	48 8d 35 26 51 00 00 	lea    rsi,[rip+0x5126]        # 11424 <_IO_stdin_used+0x424>
    c2fe:	31 c0                	xor    eax,eax
    c300:	e8 6b cf ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c305:	eb 00                	jmp    c307 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb47>
                        }
    c307:	eb 45                	jmp    c34e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8e>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c309:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c310:	48 89 85 18 fd ff ff 	mov    QWORD PTR [rbp-0x2e8],rax
    c317:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c31e:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c325:	e8 76 9b ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c32a:	48 89 c7             	mov    rdi,rax
    c32d:	e8 9e 9b ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c332:	48 8b bd 18 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2e8]
    c339:	48 89 c2             	mov    rdx,rax
    c33c:	48 8d 35 a9 50 00 00 	lea    rsi,[rip+0x50a9]        # 113ec <_IO_stdin_used+0x3ec>
    c343:	31 c0                	xor    eax,eax
    c345:	e8 06 d0 ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c34a:	eb 00                	jmp    c34c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8c>
    c34c:	eb 00                	jmp    c34e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8e>
                        break;
    c34e:	e9 b8 05 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c353:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c35a:	48 89 bd 08 fd ff ff 	mov    QWORD PTR [rbp-0x2f8],rdi
                        std::vector<std::string> cmd_args;
    c361:	e8 fa a0 ff ff       	call   6460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    c366:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c36d:	48 8b 95 08 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2f8]
    c374:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                        if(get_command_args(line, cmd_args))
    c37b:	e8 e0 f2 ff ff       	call   b660 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    c380:	88 85 17 fd ff ff    	mov    BYTE PTR [rbp-0x2e9],al
    c386:	eb 00                	jmp    c388 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbc8>
    c388:	8a 85 17 fd ff ff    	mov    al,BYTE PTR [rbp-0x2e9]
    c38e:	a8 01                	test   al,0x1
    c390:	75 05                	jne    c397 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbd7>
    c392:	e9 25 01 00 00       	jmp    c4bc <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcfc>
                            if(cmd_args.size() != 0)
    c397:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c39e:	e8 dd 9a ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c3a3:	48 83 f8 00          	cmp    rax,0x0
    c3a7:	0f 84 f6 00 00 00    	je     c4a3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce3>
                                for(std::size_t i = 0; i < cmd_args.size() - 1; i++)
    c3ad:	48 c7 85 20 fe ff ff 	mov    QWORD PTR [rbp-0x1e0],0x0
    c3b4:	00 00 00 00 
    c3b8:	48 8b 85 20 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e0]
    c3bf:	48 89 85 00 fd ff ff 	mov    QWORD PTR [rbp-0x300],rax
    c3c6:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c3cd:	e8 ae 9a ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c3d2:	48 89 c1             	mov    rcx,rax
    c3d5:	48 8b 85 00 fd ff ff 	mov    rax,QWORD PTR [rbp-0x300]
    c3dc:	48 83 e9 01          	sub    rcx,0x1
    c3e0:	48 39 c8             	cmp    rax,rcx
    c3e3:	0f 83 83 00 00 00    	jae    c46c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcac>
                                    terminal.print("%s ", cmd_args[i].c_str());
    c3e9:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c3f0:	48 89 85 f8 fc ff ff 	mov    QWORD PTR [rbp-0x308],rax
    c3f7:	48 8b b5 20 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1e0]
    c3fe:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c405:	e8 66 a3 ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c40a:	48 89 c7             	mov    rdi,rax
    c40d:	e8 be 9a ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c412:	48 8b bd f8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x308]
    c419:	48 89 c2             	mov    rdx,rax
    c41c:	48 8d 35 09 50 00 00 	lea    rsi,[rip+0x5009]        # 1142c <_IO_stdin_used+0x42c>
    c423:	31 c0                	xor    eax,eax
    c425:	e8 46 ce ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c42a:	eb 00                	jmp    c42c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xc6c>
                                }
    c42c:	eb 00                	jmp    c42e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xc6e>
                                for(std::size_t i = 0; i < cmd_args.size() - 1; i++)
    c42e:	48 8b 85 20 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e0]
    c435:	48 83 c0 01          	add    rax,0x1
    c439:	48 89 85 20 fe ff ff 	mov    QWORD PTR [rbp-0x1e0],rax
    c440:	e9 73 ff ff ff       	jmp    c3b8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbf8>
    c445:	f3 0f 1e fa          	endbr64
    c449:	48 89 c1             	mov    rcx,rax
}
    c44c:	89 d0                	mov    eax,edx
    c44e:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c455:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c45b:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c462:	e8 99 a1 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c467:	e9 ac 04 00 00       	jmp    c918 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print(cmd_args.back().c_str());
    c46c:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c473:	48 89 85 f0 fc ff ff 	mov    QWORD PTR [rbp-0x310],rax
    c47a:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c481:	e8 8a b1 ff ff       	call   7610 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    c486:	48 89 c7             	mov    rdi,rax
    c489:	e8 42 9a ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c48e:	48 8b bd f0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x310]
    c495:	48 89 c6             	mov    rsi,rax
    c498:	31 c0                	xor    eax,eax
    c49a:	e8 d1 cd ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c49f:	eb 00                	jmp    c4a1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce1>
                            }
    c4a1:	eb 00                	jmp    c4a3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce3>
                            terminal.print("\r\n");
    c4a3:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c4aa:	48 8d 35 96 4f 00 00 	lea    rsi,[rip+0x4f96]        # 11447 <_IO_stdin_used+0x447>
    c4b1:	31 c0                	xor    eax,eax
    c4b3:	e8 b8 cd ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c4b8:	eb 00                	jmp    c4ba <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcfa>
                        }
    c4ba:	eb 45                	jmp    c501 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd41>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c4bc:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c4c3:	48 89 85 e8 fc ff ff 	mov    QWORD PTR [rbp-0x318],rax
    c4ca:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c4d1:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c4d8:	e8 c3 99 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c4dd:	48 89 c7             	mov    rdi,rax
    c4e0:	e8 eb 99 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c4e5:	48 8b bd e8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x318]
    c4ec:	48 89 c2             	mov    rdx,rax
    c4ef:	48 8d 35 f6 4e 00 00 	lea    rsi,[rip+0x4ef6]        # 113ec <_IO_stdin_used+0x3ec>
    c4f6:	31 c0                	xor    eax,eax
    c4f8:	e8 53 ce ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c4fd:	eb 00                	jmp    c4ff <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd3f>
    c4ff:	eb 00                	jmp    c501 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd41>
                    }
    c501:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c508:	e8 f3 a0 ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c50d:	e9 f9 03 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c512:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c519:	e8 62 99 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c51e:	48 83 f8 01          	cmp    rax,0x1
    c522:	75 07                	jne    c52b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd6b>
                            exit(0);
    c524:	31 ff                	xor    edi,edi
    c526:	e8 05 81 ff ff       	call   4630 <exit@plt>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c52b:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c532:	48 89 85 e0 fc ff ff 	mov    QWORD PTR [rbp-0x320],rax
    c539:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c540:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c547:	e8 54 99 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c54c:	48 89 c7             	mov    rdi,rax
    c54f:	e8 7c 99 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c554:	48 8b bd e0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x320]
    c55b:	48 89 c2             	mov    rdx,rax
    c55e:	48 8d 35 87 4e 00 00 	lea    rsi,[rip+0x4e87]        # 113ec <_IO_stdin_used+0x3ec>
    c565:	31 c0                	xor    eax,eax
    c567:	e8 e4 cd ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c56c:	eb 00                	jmp    c56e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xdae>
    c56e:	eb 00                	jmp    c570 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xdb0>
                        break;
    c570:	e9 96 03 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c575:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c57c:	e8 ff 98 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c581:	48 83 f8 01          	cmp    rax,0x1
    c585:	0f 85 b1 00 00 00    	jne    c63c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe7c>
                            terminal.print("Registers\r\n");
    c58b:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c592:	48 8d 35 97 4e 00 00 	lea    rsi,[rip+0x4e97]        # 11430 <_IO_stdin_used+0x430>
    c599:	31 c0                	xor    eax,eax
    c59b:	e8 d0 cc ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c5a0:	eb 00                	jmp    c5a2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xde2>
                            for(size_t i = 0; i < registers.size(); i++)
    c5a2:	48 c7 85 18 fe ff ff 	mov    QWORD PTR [rbp-0x1e8],0x0
    c5a9:	00 00 00 00 
    c5ad:	48 8b 8d 10 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1f0]
    c5b4:	48 8b 85 18 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e8]
    c5bb:	48 83 c1 70          	add    rcx,0x70
    c5bf:	48 89 8d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rcx
    c5c6:	48 83 f8 0a          	cmp    rax,0xa
    c5ca:	73 6e                	jae    c63a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe7a>
    c5cc:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                                terminal.print("\t[%zu] \'%s\'\r\n", i, registers[i].c_str());
    c5d3:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c5da:	48 89 85 d0 fc ff ff 	mov    QWORD PTR [rbp-0x330],rax
    c5e1:	48 8b b5 18 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1e8]
    c5e8:	48 89 b5 d8 fc ff ff 	mov    QWORD PTR [rbp-0x328],rsi
    c5ef:	48 83 c7 70          	add    rdi,0x70
    c5f3:	e8 18 04 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c5f8:	48 89 c7             	mov    rdi,rax
    c5fb:	e8 d0 98 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c600:	48 8b bd d0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x330]
    c607:	48 8b 95 d8 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x328]
    c60e:	48 89 c1             	mov    rcx,rax
    c611:	48 8d 35 24 4e 00 00 	lea    rsi,[rip+0x4e24]        # 1143c <_IO_stdin_used+0x43c>
    c618:	31 c0                	xor    eax,eax
    c61a:	e8 51 cc ff ff       	call   9270 <_ZN10TerminalIO5printEPKcz>
    c61f:	eb 00                	jmp    c621 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe61>
                            }
    c621:	eb 00                	jmp    c623 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe63>
                            for(size_t i = 0; i < registers.size(); i++)
    c623:	48 8b 85 18 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e8]
    c62a:	48 83 c0 01          	add    rax,0x1
    c62e:	48 89 85 18 fe ff ff 	mov    QWORD PTR [rbp-0x1e8],rax
    c635:	e9 73 ff ff ff       	jmp    c5ad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xded>
                        }
    c63a:	eb 45                	jmp    c681 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xec1>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c63c:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c643:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    c64a:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c651:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c658:	e8 43 98 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c65d:	48 89 c7             	mov    rdi,rax
    c660:	e8 6b 98 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c665:	48 8b bd c8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x338]
    c66c:	48 89 c2             	mov    rdx,rax
    c66f:	48 8d 35 76 4d 00 00 	lea    rsi,[rip+0x4d76]        # 113ec <_IO_stdin_used+0x3ec>
    c676:	31 c0                	xor    eax,eax
    c678:	e8 d3 cc ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c67d:	eb 00                	jmp    c67f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xebf>
    c67f:	eb 00                	jmp    c681 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xec1>
                        break;
    c681:	e9 85 02 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c686:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c68d:	e8 ee 97 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c692:	48 83 f8 01          	cmp    rax,0x1
    c696:	75 1a                	jne    c6b2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xef2>
    c698:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdin_path = "";
    c69f:	48 8d 35 a3 4d 00 00 	lea    rsi,[rip+0x4da3]        # 11449 <_IO_stdin_used+0x449>
    c6a6:	e8 e5 9e ff ff       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    c6ab:	eb 00                	jmp    c6ad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xeed>
                        }
    c6ad:	e9 bd 00 00 00       	jmp    c76f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfaf>
                        else if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c6b2:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c6b9:	e8 c2 97 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c6be:	48 83 f8 02          	cmp    rax,0x2
    c6c2:	75 64                	jne    c728 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf68>
    c6c4:	31 c0                	xor    eax,eax
    c6c6:	89 c6                	mov    esi,eax
    c6c8:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c6cf:	e8 9c a0 ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c6d4:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c6db:	48 89 c6             	mov    rsi,rax
    c6de:	48 8d 95 78 fe ff ff 	lea    rdx,[rbp-0x188]
    c6e5:	e8 56 ea ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c6ea:	88 85 c7 fc ff ff    	mov    BYTE PTR [rbp-0x339],al
    c6f0:	eb 00                	jmp    c6f2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf32>
    c6f2:	8a 85 c7 fc ff ff    	mov    al,BYTE PTR [rbp-0x339]
    c6f8:	a8 01                	test   al,0x1
    c6fa:	75 02                	jne    c6fe <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf3e>
    c6fc:	eb 2a                	jmp    c728 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf68>
    c6fe:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdin_path = registers[arg1];
    c705:	48 83 c7 70          	add    rdi,0x70
    c709:	48 8b b5 78 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x188]
    c710:	e8 fb 02 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c715:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c71c:	48 89 c6             	mov    rsi,rax
    c71f:	e8 bc d4 ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    c724:	eb 00                	jmp    c726 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf66>
                        }
    c726:	eb 45                	jmp    c76d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfad>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c728:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c72f:	48 89 85 b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rax
    c736:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c73d:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c744:	e8 57 97 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c749:	48 89 c7             	mov    rdi,rax
    c74c:	e8 7f 97 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c751:	48 8b bd b8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x348]
    c758:	48 89 c2             	mov    rdx,rax
    c75b:	48 8d 35 8a 4c 00 00 	lea    rsi,[rip+0x4c8a]        # 113ec <_IO_stdin_used+0x3ec>
    c762:	31 c0                	xor    eax,eax
    c764:	e8 e7 cb ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c769:	eb 00                	jmp    c76b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfab>
    c76b:	eb 00                	jmp    c76d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfad>
    c76d:	eb 00                	jmp    c76f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfaf>
                        break;
    c76f:	e9 97 01 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c774:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c77b:	e8 00 97 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c780:	48 83 f8 01          	cmp    rax,0x1
    c784:	75 1e                	jne    c7a4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfe4>
    c786:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdout_path = "";
    c78d:	48 83 c7 20          	add    rdi,0x20
    c791:	48 8d 35 b1 4c 00 00 	lea    rsi,[rip+0x4cb1]        # 11449 <_IO_stdin_used+0x449>
    c798:	e8 f3 9d ff ff       	call   6590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    c79d:	eb 00                	jmp    c79f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfdf>
                        }
    c79f:	e9 c1 00 00 00       	jmp    c865 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a5>
                        else if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c7a4:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c7ab:	e8 d0 96 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c7b0:	48 83 f8 02          	cmp    rax,0x2
    c7b4:	75 68                	jne    c81e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105e>
    c7b6:	31 c0                	xor    eax,eax
    c7b8:	89 c6                	mov    esi,eax
    c7ba:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c7c1:	e8 aa 9f ff ff       	call   6770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c7c6:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c7cd:	48 89 c6             	mov    rsi,rax
    c7d0:	48 8d 95 70 fe ff ff 	lea    rdx,[rbp-0x190]
    c7d7:	e8 64 e9 ff ff       	call   b140 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c7dc:	88 85 b7 fc ff ff    	mov    BYTE PTR [rbp-0x349],al
    c7e2:	eb 00                	jmp    c7e4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1024>
    c7e4:	8a 85 b7 fc ff ff    	mov    al,BYTE PTR [rbp-0x349]
    c7ea:	a8 01                	test   al,0x1
    c7ec:	75 02                	jne    c7f0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1030>
    c7ee:	eb 2e                	jmp    c81e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105e>
    c7f0:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdout_path = registers[arg1];
    c7f7:	48 83 c7 70          	add    rdi,0x70
    c7fb:	48 8b b5 70 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x190]
    c802:	e8 09 02 00 00       	call   ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c807:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c80e:	48 89 c6             	mov    rsi,rax
    c811:	48 83 c7 20          	add    rdi,0x20
    c815:	e8 c6 d3 ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    c81a:	eb 00                	jmp    c81c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105c>
                        }
    c81c:	eb 45                	jmp    c863 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a3>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c81e:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c825:	48 89 85 a8 fc ff ff 	mov    QWORD PTR [rbp-0x358],rax
    c82c:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c833:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c83a:	e8 61 96 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c83f:	48 89 c7             	mov    rdi,rax
    c842:	e8 89 96 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c847:	48 8b bd a8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x358]
    c84e:	48 89 c2             	mov    rdx,rax
    c851:	48 8d 35 94 4b 00 00 	lea    rsi,[rip+0x4b94]        # 113ec <_IO_stdin_used+0x3ec>
    c858:	31 c0                	xor    eax,eax
    c85a:	e8 f1 ca ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c85f:	eb 00                	jmp    c861 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a1>
    c861:	eb 00                	jmp    c863 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a3>
    c863:	eb 00                	jmp    c865 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a5>
                        break;
    c865:	e9 a1 00 00 00       	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c86a:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c871:	e8 0a 96 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c876:	48 83 f8 01          	cmp    rax,0x1
    c87a:	75 15                	jne    c891 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10d1>
    c87c:	48 8b 85 10 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1f0]
                            streams.stdout_append = !streams.stdout_append;
    c883:	8a 48 40             	mov    cl,BYTE PTR [rax+0x40]
    c886:	80 f1 ff             	xor    cl,0xff
    c889:	80 e1 01             	and    cl,0x1
    c88c:	88 48 40             	mov    BYTE PTR [rax+0x40],cl
                        }
    c88f:	eb 45                	jmp    c8d6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1116>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c891:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c898:	48 89 85 a0 fc ff ff 	mov    QWORD PTR [rbp-0x360],rax
    c89f:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c8a6:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c8ad:	e8 ee 95 ff ff       	call   5ea0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c8b2:	48 89 c7             	mov    rdi,rax
    c8b5:	e8 16 96 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c8ba:	48 8b bd a0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x360]
    c8c1:	48 89 c2             	mov    rdx,rax
    c8c4:	48 8d 35 21 4b 00 00 	lea    rsi,[rip+0x4b21]        # 113ec <_IO_stdin_used+0x3ec>
    c8cb:	31 c0                	xor    eax,eax
    c8cd:	e8 7e ca ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c8d2:	eb 00                	jmp    c8d4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1114>
    c8d4:	eb 00                	jmp    c8d6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1116>
                        break;
    c8d6:	eb 33                	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        terminal.print_error("Unknown command '%s'\r\n", op.c_str());
    c8d8:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c8df:	48 89 85 98 fc ff ff 	mov    QWORD PTR [rbp-0x368],rax
    c8e6:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c8ea:	e8 e1 95 ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c8ef:	48 8b bd 98 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x368]
    c8f6:	48 89 c2             	mov    rdx,rax
    c8f9:	48 8d 35 10 48 00 00 	lea    rsi,[rip+0x4810]        # 11110 <_IO_stdin_used+0x110>
    c900:	31 c0                	xor    eax,eax
    c902:	e8 49 ca ff ff       	call   9350 <_ZN10TerminalIO11print_errorEPKcz>
    c907:	eb 00                	jmp    c909 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1149>
                        break;
    c909:	eb 00                	jmp    c90b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c90b:	eb 00                	jmp    c90d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114d>
        }
    c90d:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c911:	e8 3a 98 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    c916:	eb 0b                	jmp    c923 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1163>
    c918:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c91c:	e8 2f 98 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    c921:	eb 23                	jmp    c946 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1186>
    }
    c923:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c92a:	e8 d1 9c ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    for(;ip < lines.size(); ip++)
    c92f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    c936:	48 83 c0 01          	add    rax,0x1
    c93a:	48 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rax
    c941:	e9 df f0 ff ff       	jmp    ba25 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x265>
    }
    c946:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c94d:	e8 ae 9c ff ff       	call   6600 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c952:	eb 27                	jmp    c97b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    c954:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
}
    c95b:	e8 e0 05 00 00       	call   cf40 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>
    c960:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c967:	00 00 
    c969:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    c96d:	48 39 c8             	cmp    rax,rcx
    c970:	75 41                	jne    c9b3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11f3>
    c972:	48 81 c4 70 03 00 00 	add    rsp,0x370
    c979:	5d                   	pop    rbp
    c97a:	c3                   	ret
    c97b:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    c982:	e8 b9 05 00 00       	call   cf40 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>
    c987:	48 8b 85 30 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1d0]
    c98e:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    c995:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c99c:	00 00 
    c99e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    c9a2:	48 39 c8             	cmp    rax,rcx
    c9a5:	75 0c                	jne    c9b3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11f3>
    c9a7:	48 8b bd 90 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x370]
    c9ae:	e8 cd 7a ff ff       	call   4480 <_Unwind_Resume@plt>
    c9b3:	e8 18 7c ff ff       	call   45d0 <__stack_chk_fail@plt>
    c9b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c9bf:	00 

000000000000c9c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev>:
    c9c0:	f3 0f 1e fa          	endbr64
    c9c4:	55                   	push   rbp
    c9c5:	48 89 e5             	mov    rbp,rsp
    c9c8:	48 83 ec 20          	sub    rsp,0x20
    c9cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c9d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c9d4:	48 89 c1             	mov    rcx,rax
    c9d7:	48 81 c1 40 01 00 00 	add    rcx,0x140
    c9de:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c9e2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    c9e6:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    c9ea:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    c9ee:	e8 8d 9a ff ff       	call   6480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    c9f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    c9f7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    c9fb:	48 83 c0 20          	add    rax,0x20
    c9ff:	48 39 c8             	cmp    rax,rcx
    ca02:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ca06:	75 de                	jne    c9e6 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev+0x26>
    ca08:	48 83 c4 20          	add    rsp,0x20
    ca0c:	5d                   	pop    rbp
    ca0d:	c3                   	ret
    ca0e:	66 90                	xchg   ax,ax

000000000000ca10 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>:

      // Element access.
      [[__nodiscard__]]
      _GLIBCXX17_CONSTEXPR reference
      operator[](size_type __n) noexcept
      {
    ca10:	f3 0f 1e fa          	endbr64
    ca14:	55                   	push   rbp
    ca15:	48 89 e5             	mov    rbp,rsp
    ca18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ca1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ca20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	__glibcxx_requires_subscript(__n);
	return _M_elems[__n];
    ca24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ca28:	48 c1 e1 05          	shl    rcx,0x5
    ca2c:	48 01 c8             	add    rax,rcx
    ca2f:	5d                   	pop    rbp
    ca30:	c3                   	ret
    ca31:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ca38:	00 00 00 
    ca3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ca40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
    {
    ca40:	f3 0f 1e fa          	endbr64
    ca44:	55                   	push   rbp
    ca45:	48 89 e5             	mov    rbp,rsp
    ca48:	48 81 ec 00 01 00 00 	sub    rsp,0x100
    ca4f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ca56:	00 00 
    ca58:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ca5c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    ca60:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    ca64:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ca68:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
      if (std::__addressof(__x) != this)
    ca6f:	48 39 45 a8          	cmp    QWORD PTR [rbp-0x58],rax
    ca73:	0f 84 a3 02 00 00    	je     cd1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2dc>
	  const size_type __xlen = __x.size();
    ca79:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    ca7d:	e8 fe 93 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    ca82:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ca89:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
	  if (__xlen > capacity())
    ca8d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ca91:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    ca98:	e8 63 0a 00 00       	call   d500 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>
    ca9d:	48 89 c1             	mov    rcx,rax
    caa0:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    caa7:	48 39 c8             	cmp    rax,rcx
    caaa:	0f 86 ce 00 00 00    	jbe    cb7e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x13e>
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
    cab0:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    cab4:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    cabb:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cabf:	e8 8c 0b 00 00       	call   d650 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    cac4:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
						   __x.end());
    cac8:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cacc:	e8 df 0b 00 00       	call   d6b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    cad1:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    cad8:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cadf:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
    cae3:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    cae7:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
    caeb:	e8 30 0a 00 00       	call   d520 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_>
    caf0:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    caf7:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    cafb:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    cafe:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    cb05:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    cb09:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
			    _M_get_Tp_allocator());
    cb10:	e8 eb ae ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    cb15:	48 8b 95 40 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc0]
    cb1c:	48 8b 8d 48 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb8]
    cb23:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    cb27:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    cb2b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      std::_Destroy(__first, __last);
    cb2f:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    cb33:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    cb37:	e8 24 bb ff ff       	call   8660 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    cb3c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      _M_deallocate(this->_M_impl._M_start,
    cb43:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
			    this->_M_impl._M_end_of_storage
    cb46:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
			    - this->_M_impl._M_start);
    cb4a:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    cb4d:	48 29 c2             	sub    rdx,rax
    cb50:	48 c1 fa 05          	sar    rdx,0x5
	      _M_deallocate(this->_M_impl._M_start,
    cb54:	e8 97 bb ff ff       	call   86f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    cb59:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
	      this->_M_impl._M_start = __tmp;
    cb60:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    cb64:	48 89 08             	mov    QWORD PTR [rax],rcx
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
    cb67:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    cb6a:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    cb6e:	48 c1 e2 05          	shl    rdx,0x5
    cb72:	48 01 d1             	add    rcx,rdx
    cb75:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	    }
    cb79:	e9 85 01 00 00       	jmp    cd03 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c3>
    cb7e:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	  else if (size() >= __xlen)
    cb85:	e8 f6 92 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cb8a:	48 3b 45 a0          	cmp    rax,QWORD PTR [rbp-0x60]
    cb8e:	0f 82 a9 00 00 00    	jb     cc3d <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1fd>
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
    cb94:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cb98:	e8 b3 0a 00 00       	call   d650 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    cb9d:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    cba4:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cba8:	e8 03 0b 00 00       	call   d6b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    cbad:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cbb4:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    cbbb:	e8 d0 ac ff ff       	call   7890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    cbc0:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    cbc7:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    cbce:	48 8b b5 70 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x90]
    cbd5:	48 8b 95 68 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x98]
    cbdc:	e8 2f 0b 00 00       	call   d710 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>
    cbe1:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cbe8:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
			    end(), _M_get_Tp_allocator());
    cbec:	e8 3f ac ff ff       	call   7830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    cbf1:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cbf8:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    cbff:	e8 fc ad ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
    cc04:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    cc08:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    cc0f:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
    cc13:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    cc17:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    cc1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    cc1f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    cc23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cc27:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    cc2b:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    cc2f:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    cc33:	e8 98 0f 00 00       	call   dbd0 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>
	    }
    cc38:	e9 c4 00 00 00       	jmp    cd01 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c1>
    cc3d:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
    cc44:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc48:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc4b:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    cc52:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc56:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc59:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    cc60:	e8 1b 92 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cc65:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
    cc6c:	48 8b bd 10 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf0]
    cc73:	48 89 c1             	mov    rcx,rax
    cc76:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    cc7d:	48 c1 e1 05          	shl    rcx,0x5
    cc81:	48 01 ce             	add    rsi,rcx
			this->_M_impl._M_start);
    cc84:	48 8b 10             	mov    rdx,QWORD PTR [rax]
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
    cc87:	e8 24 0b 00 00       	call   d7b0 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    cc8c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
    cc93:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc97:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc9a:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    cca1:	e8 da 91 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cca6:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ccad:	48 89 c1             	mov    rcx,rax
    ccb0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    ccb7:	48 c1 e1 05          	shl    rcx,0x5
    ccbb:	48 01 c8             	add    rax,rcx
    ccbe:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
					  __x._M_impl._M_finish,
    ccc5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ccc9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    cccd:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
					  this->_M_impl._M_finish,
    ccd4:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    ccd8:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
					  _M_get_Tp_allocator());
    ccdf:	e8 1c ad ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    cce4:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    cceb:	48 8b b5 28 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd8]
    ccf2:	48 8b 95 30 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd0]
    ccf9:	48 89 c1             	mov    rcx,rax
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
    ccfc:	e8 ff 0a 00 00       	call   d800 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>
    cd01:	eb 00                	jmp    cd03 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c3>
    cd03:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
    cd0a:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    cd0d:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    cd11:	48 c1 e2 05          	shl    rdx,0x5
    cd15:	48 01 d1             	add    rcx,rdx
    cd18:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      return *this;
    cd1c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cd23:	00 00 
    cd25:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    cd29:	48 39 c8             	cmp    rax,rcx
    cd2c:	75 10                	jne    cd3e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2fe>
    cd2e:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    cd35:	48 81 c4 00 01 00 00 	add    rsp,0x100
    cd3c:	5d                   	pop    rbp
    cd3d:	c3                   	ret
    cd3e:	e8 8d 78 ff ff       	call   45d0 <__stack_chk_fail@plt>
    cd43:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cd4a:	00 00 00 
    cd4d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cd50 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEEC2Ev>:
#endif

      //construct/destroy/copy

      /// Default constructor.
      unordered_map() = default;
    cd50:	f3 0f 1e fa          	endbr64
    cd54:	55                   	push   rbp
    cd55:	48 89 e5             	mov    rbp,rsp
    cd58:	48 83 ec 10          	sub    rsp,0x10
    cd5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cd60:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cd64:	e8 17 16 00 00       	call   e380 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>
    cd69:	48 83 c4 10          	add    rsp,0x10
    cd6d:	5d                   	pop    rbp
    cd6e:	c3                   	ret
    cd6f:	90                   	nop

000000000000cd70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc>:
      { return __sv_type(this->data(), this->size()).ends_with(__x); }
    cd70:	f3 0f 1e fa          	endbr64
    cd74:	55                   	push   rbp
    cd75:	48 89 e5             	mov    rbp,rsp
    cd78:	48 83 ec 40          	sub    rsp,0x40
    cd7c:	40 88 f0             	mov    al,sil
    cd7f:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    cd86:	00 00 
    cd88:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    cd8c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    cd90:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    cd93:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    cd97:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    cd9b:	e8 80 c2 ff ff       	call   9020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    cda0:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    cda4:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    cda8:	e8 83 a5 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    cdad:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    cdb1:	48 89 c2             	mov    rdx,rax
    cdb4:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    cdb8:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    cdbc:	e8 3f 17 00 00       	call   e500 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC2EPKcm>
    cdc1:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    cdc5:	0f be 75 df          	movsx  esi,BYTE PTR [rbp-0x21]
    cdc9:	e8 62 17 00 00       	call   e530 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc>
    cdce:	88 45 de             	mov    BYTE PTR [rbp-0x22],al
    cdd1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cdd8:	00 00 
    cdda:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    cdde:	48 39 c8             	cmp    rax,rcx
    cde1:	75 0b                	jne    cdee <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc+0x7e>
    cde3:	8a 45 de             	mov    al,BYTE PTR [rbp-0x22]
    cde6:	24 01                	and    al,0x1
    cde8:	48 83 c4 40          	add    rsp,0x40
    cdec:	5d                   	pop    rbp
    cded:	c3                   	ret
    cdee:	e8 dd 77 ff ff       	call   45d0 <__stack_chk_fail@plt>
    cdf3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cdfa:	00 00 00 
    cdfd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ce00 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_>:
       *  Insertion requires amortized constant time.
       */
      template<typename... _Args>
	std::pair<iterator, bool>
	emplace(_Args&&... __args)
	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
    ce00:	f3 0f 1e fa          	endbr64
    ce04:	55                   	push   rbp
    ce05:	48 89 e5             	mov    rbp,rsp
    ce08:	48 83 ec 50          	sub    rsp,0x50
    ce0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ce13:	00 00 
    ce15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ce19:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    ce1d:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    ce21:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    ce25:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    ce29:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    ce2d:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    ce31:	e8 4a 1d 00 00       	call   eb80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_>
    ce36:	88 55 e0             	mov    BYTE PTR [rbp-0x20],dl
    ce39:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ce3d:	8a 45 e0             	mov    al,BYTE PTR [rbp-0x20]
    ce40:	88 45 f0             	mov    BYTE PTR [rbp-0x10],al
    ce43:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ce47:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ce4b:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    ce4e:	88 45 b7             	mov    BYTE PTR [rbp-0x49],al
    ce51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ce55:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ce59:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ce60:	00 00 
    ce62:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ce66:	48 39 c8             	cmp    rax,rcx
    ce69:	75 0d                	jne    ce78 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_+0x78>
    ce6b:	8a 55 b7             	mov    dl,BYTE PTR [rbp-0x49]
    ce6e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ce72:	48 83 c4 50          	add    rsp,0x50
    ce76:	5d                   	pop    rbp
    ce77:	c3                   	ret
    ce78:	e8 53 77 ff ff       	call   45d0 <__stack_chk_fail@plt>
    ce7d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ce80 <_ZNSt8__detaileqERKNS_19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESC_>:
      { _M_cur = _M_cur->_M_next(); }

      friend bool
      operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      noexcept
      { return __x._M_cur == __y._M_cur; }
    ce80:	f3 0f 1e fa          	endbr64
    ce84:	55                   	push   rbp
    ce85:	48 89 e5             	mov    rbp,rsp
    ce88:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ce8c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ce90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ce94:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ce97:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ce9b:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    ce9e:	0f 94 c0             	sete   al
    cea1:	24 01                	and    al,0x1
    cea3:	5d                   	pop    rbp
    cea4:	c3                   	ret
    cea5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ceac:	00 00 00 
    ceaf:	90                   	nop

000000000000ceb0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE4findERSB_>:
       *  pointing to the sought after element.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */
      iterator
      find(const key_type& __x)
      { return _M_h.find(__x); }
    ceb0:	f3 0f 1e fa          	endbr64
    ceb4:	55                   	push   rbp
    ceb5:	48 89 e5             	mov    rbp,rsp
    ceb8:	48 83 ec 20          	sub    rsp,0x20
    cebc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    cec0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    cec4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    cec8:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    cecc:	e8 cf 30 00 00       	call   ffa0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>
    ced1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ced5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ced9:	48 83 c4 20          	add    rsp,0x20
    cedd:	5d                   	pop    rbp
    cede:	c3                   	ret
    cedf:	90                   	nop

000000000000cee0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE3endEv>:
      { return _M_h.end(); }
    cee0:	f3 0f 1e fa          	endbr64
    cee4:	55                   	push   rbp
    cee5:	48 89 e5             	mov    rbp,rsp
    cee8:	48 83 ec 10          	sub    rsp,0x10
    ceec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    cef0:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    cef4:	e8 b7 31 00 00       	call   100b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>
    cef9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cefd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cf01:	48 83 c4 10          	add    rsp,0x10
    cf05:	5d                   	pop    rbp
    cf06:	c3                   	ret
    cf07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cf0e:	00 00 

000000000000cf10 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE2atERSB_>:
       *           such a data is present in the %unordered_map.
       *  @throw  std::out_of_range  If no such data is present.
       */
      mapped_type&
      at(const key_type& __k)
      { return _M_h.at(__k); }
    cf10:	f3 0f 1e fa          	endbr64
    cf14:	55                   	push   rbp
    cf15:	48 89 e5             	mov    rbp,rsp
    cf18:	48 83 ec 10          	sub    rsp,0x10
    cf1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cf20:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    cf24:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cf28:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    cf2c:	e8 df 31 00 00       	call   10110 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_>
    cf31:	48 83 c4 10          	add    rsp,0x10
    cf35:	5d                   	pop    rbp
    cf36:	c3                   	ret
    cf37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cf3e:	00 00 

000000000000cf40 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>:
    class unordered_map
    cf40:	f3 0f 1e fa          	endbr64
    cf44:	55                   	push   rbp
    cf45:	48 89 e5             	mov    rbp,rsp
    cf48:	48 83 ec 10          	sub    rsp,0x10
    cf4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cf50:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cf54:	e8 d7 16 00 00       	call   e630 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev>
    cf59:	48 83 c4 10          	add    rsp,0x10
    cf5d:	5d                   	pop    rbp
    cf5e:	c3                   	ret
    cf5f:	90                   	nop

000000000000cf60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__lhs.append(__rhs)); }
    cf60:	f3 0f 1e fa          	endbr64
    cf64:	55                   	push   rbp
    cf65:	48 89 e5             	mov    rbp,rsp
    cf68:	48 83 ec 30          	sub    rsp,0x30
    cf6c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    cf70:	48 89 f8             	mov    rax,rdi
    cf73:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    cf77:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cf7b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    cf7f:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    cf83:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    cf87:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    cf8b:	e8 90 02 00 00       	call   d220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    cf90:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    cf94:	48 89 c6             	mov    rsi,rax
    cf97:	e8 84 ae ff ff       	call   7e20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>
    cf9c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    cfa0:	48 83 c4 30          	add    rsp,0x30
    cfa4:	5d                   	pop    rbp
    cfa5:	c3                   	ret
    cfa6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cfad:	00 00 00 

000000000000cfb0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    {
    cfb0:	f3 0f 1e fa          	endbr64
    cfb4:	55                   	push   rbp
    cfb5:	48 89 e5             	mov    rbp,rsp
    cfb8:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    cfbf:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    cfc3:	48 89 f8             	mov    rax,rdi
    cfc6:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    cfca:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cfd1:	00 00 
    cfd3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cfd7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    cfdb:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    cfdf:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    cfe3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    cfe7:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    cfeb:	e8 30 a1 ff ff       	call   7120 <_ZNSt11char_traitsIcE6lengthEPKc>
    cff0:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
				     __rhs.c_str(), __rhs.size(),
    cff4:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    cff8:	e8 d3 8e ff ff       	call   5ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    cffd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    d001:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    d005:	e8 26 a3 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    d00a:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
				     __rhs.get_allocator());
    d00e:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    d012:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    d016:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    d01a:	e8 e1 03 00 00       	call   d400 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>
    d01f:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    d023:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    d027:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    d02b:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    d02f:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
    d033:	4c 8b 4d b0          	mov    r9,QWORD PTR [rbp-0x50]
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    d037:	e8 44 02 00 00       	call   d280 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE>
    d03c:	eb 00                	jmp    d03e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x8e>
    d03e:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    d042:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d046:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d04d:	00 00 
    d04f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d053:	48 39 c8             	cmp    rax,rcx
    d056:	75 4e                	jne    d0a6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf6>
    d058:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    d05c:	48 81 c4 90 00 00 00 	add    rsp,0x90
    d063:	5d                   	pop    rbp
    d064:	c3                   	ret
    d065:	f3 0f 1e fa          	endbr64
    d069:	48 89 c1             	mov    rcx,rax
    }
    d06c:	89 d0                	mov    eax,edx
    d06e:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    d072:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    d075:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    d079:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    d07d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d081:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    d088:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d08f:	00 00 
    d091:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d095:	48 39 c8             	cmp    rax,rcx
    d098:	75 0c                	jne    d0a6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf6>
    d09a:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    d0a1:	e8 da 73 ff ff       	call   4480 <_Unwind_Resume@plt>
    d0a6:	e8 25 75 ff ff       	call   45d0 <__stack_chk_fail@plt>
    d0ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d0b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
      { return const_iterator(_M_data()); }
    d0b0:	f3 0f 1e fa          	endbr64
    d0b4:	55                   	push   rbp
    d0b5:	48 89 e5             	mov    rbp,rsp
    d0b8:	48 83 ec 30          	sub    rsp,0x30
    d0bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d0c3:	00 00 
    d0c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d0c9:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    d0cd:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d0d1:	e8 ea 97 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    d0d6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d0da:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d0de:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d0e2:	e8 d9 03 00 00       	call   d4c0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>
    d0e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d0eb:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d0ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d0f6:	00 00 
    d0f8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d0fc:	48 39 c8             	cmp    rax,rcx
    d0ff:	75 0a                	jne    d10b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv+0x5b>
    d101:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d105:	48 83 c4 30          	add    rsp,0x30
    d109:	5d                   	pop    rbp
    d10a:	c3                   	ret
    d10b:	e8 c0 74 ff ff       	call   45d0 <__stack_chk_fail@plt>

000000000000d110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
      { return const_iterator(_M_data() + this->size()); }
    d110:	f3 0f 1e fa          	endbr64
    d114:	55                   	push   rbp
    d115:	48 89 e5             	mov    rbp,rsp
    d118:	48 83 ec 40          	sub    rsp,0x40
    d11c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d123:	00 00 
    d125:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d129:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    d12d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d131:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    d135:	e8 86 97 ff ff       	call   68c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    d13a:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    d13e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d142:	e8 e9 a1 ff ff       	call   7330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    d147:	48 89 c1             	mov    rcx,rax
    d14a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    d14e:	48 01 c8             	add    rax,rcx
    d151:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d155:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d159:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d15d:	e8 5e 03 00 00       	call   d4c0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>
    d162:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d166:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d16a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d171:	00 00 
    d173:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d177:	48 39 c8             	cmp    rax,rcx
    d17a:	75 0a                	jne    d186 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv+0x76>
    d17c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d180:	48 83 c4 40          	add    rsp,0x40
    d184:	5d                   	pop    rbp
    d185:	c3                   	ret
    d186:	e8 45 74 ff ff       	call   45d0 <__stack_chk_fail@plt>
    d18b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d190 <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    d190:	f3 0f 1e fa          	endbr64
    d194:	55                   	push   rbp
    d195:	48 89 e5             	mov    rbp,rsp
    d198:	48 83 ec 20          	sub    rsp,0x20
    d19c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d1a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d1a4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d1a8:	e8 33 03 00 00       	call   d4e0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>
    d1ad:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1b0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d1b4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d1b8:	e8 23 03 00 00       	call   d4e0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>
    d1bd:	48 89 c1             	mov    rcx,rax
    d1c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d1c4:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    d1c7:	0f 94 c0             	sete   al
    d1ca:	24 01                	and    al,0x1
    d1cc:	48 83 c4 20          	add    rsp,0x20
    d1d0:	5d                   	pop    rbp
    d1d1:	c3                   	ret
    d1d2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d1d9:	00 00 00 
    d1dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d1e0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv>:
      { return *_M_current; }
    d1e0:	f3 0f 1e fa          	endbr64
    d1e4:	55                   	push   rbp
    d1e5:	48 89 e5             	mov    rbp,rsp
    d1e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d1ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d1f0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1f3:	5d                   	pop    rbp
    d1f4:	c3                   	ret
    d1f5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d1fc:	00 00 00 
    d1ff:	90                   	nop

000000000000d200 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv>:
      {
    d200:	f3 0f 1e fa          	endbr64
    d204:	55                   	push   rbp
    d205:	48 89 e5             	mov    rbp,rsp
    d208:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d20c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    d210:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    d213:	48 83 c1 01          	add    rcx,0x1
    d217:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    d21a:	5d                   	pop    rbp
    d21b:	c3                   	ret
    d21c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      {
    d220:	f3 0f 1e fa          	endbr64
    d224:	55                   	push   rbp
    d225:	48 89 e5             	mov    rbp,rsp
    d228:	48 83 ec 20          	sub    rsp,0x20
    d22c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d230:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d234:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d238:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	const size_type __n = traits_type::length(__s);
    d23c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d240:	e8 db 9e ff ff       	call   7120 <_ZNSt11char_traitsIcE6lengthEPKc>
    d245:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d249:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	_M_check_length(size_type(0), __n, "basic_string::append");
    d24d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d251:	31 c0                	xor    eax,eax
    d253:	89 c6                	mov    esi,eax
    d255:	48 8d 0d 4b 3f 00 00 	lea    rcx,[rip+0x3f4b]        # 111a7 <_IO_stdin_used+0x1a7>
    d25c:	e8 6f af ff ff       	call   81d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    d261:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return _M_append(__s, __n);
    d265:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    d269:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d26d:	e8 9e bb ff ff       	call   8e10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d272:	48 83 c4 20          	add    rsp,0x20
    d276:	5d                   	pop    rbp
    d277:	c3                   	ret
    d278:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d27f:	00 

000000000000d280 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE>:
    {
    d280:	f3 0f 1e fa          	endbr64
    d284:	55                   	push   rbp
    d285:	48 89 e5             	mov    rbp,rsp
    d288:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    d28f:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
    d296:	48 89 f8             	mov    rax,rdi
    d299:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    d2a0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d2a7:	00 00 
    d2a9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d2ad:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    d2b1:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
    d2b5:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    d2b9:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    d2bd:	4c 89 45 80          	mov    QWORD PTR [rbp-0x80],r8
    d2c1:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
      _Str __str(_Alloc_traits::_S_select_on_copy(__a));
    d2c8:	c6 85 77 ff ff ff 00 	mov    BYTE PTR [rbp-0x89],0x0
    d2cf:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    d2d6:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    d2da:	48 89 b5 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rsi
    d2e1:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
    d2e5:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    d2e9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    d2ed:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    d2f1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      { return __rhs; }
    d2f5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d2f9:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    d2fd:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d301:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d305:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    d309:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d30d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d311:	e8 4a 01 00 00       	call   d460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_>
    d316:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    d31d:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d324:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
      __str.reserve(__lhs_len + __rhs_len);
    d328:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    d32c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    d330:	48 01 c6             	add    rsi,rax
    d333:	e8 c8 bb ff ff       	call   8f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    d338:	eb 00                	jmp    d33a <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xba>
    d33a:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
      __str.append(__lhs, __lhs_len);
    d341:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    d345:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    d349:	e8 72 ba ff ff       	call   8dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    d34e:	eb 00                	jmp    d350 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xd0>
    d350:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
      __str.append(__rhs, __rhs_len);
    d357:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    d35b:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    d35f:	e8 5c ba ff ff       	call   8dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    d364:	eb 00                	jmp    d366 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xe6>
      return __str;
    d366:	c6 85 77 ff ff ff 01 	mov    BYTE PTR [rbp-0x89],0x1
    }
    d36d:	f6 85 77 ff ff ff 01 	test   BYTE PTR [rbp-0x89],0x1
    d374:	75 32                	jne    d3a8 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x128>
    d376:	eb 24                	jmp    d39c <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x11c>
    d378:	f3 0f 1e fa          	endbr64
    d37c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d383:	48 89 c1             	mov    rcx,rax
    d386:	89 d0                	mov    eax,edx
    d388:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    d38f:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
    d395:	e8 b6 8d ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    d39a:	eb 2e                	jmp    d3ca <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x14a>
    d39c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d3a3:	e8 a8 8d ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    d3a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d3af:	00 00 
    d3b1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d3b5:	48 39 c8             	cmp    rax,rcx
    d3b8:	75 3c                	jne    d3f6 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x176>
    d3ba:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    d3c1:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    d3c8:	5d                   	pop    rbp
    d3c9:	c3                   	ret
    d3ca:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    d3d1:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    d3d8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d3df:	00 00 
    d3e1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d3e5:	48 39 c8             	cmp    rax,rcx
    d3e8:	75 0c                	jne    d3f6 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x176>
    d3ea:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    d3f1:	e8 8a 70 ff ff       	call   4480 <_Unwind_Resume@plt>
    d3f6:	e8 d5 71 ff ff       	call   45d0 <__stack_chk_fail@plt>
    d3fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d400 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
      { return _M_get_allocator(); }
    d400:	f3 0f 1e fa          	endbr64
    d404:	55                   	push   rbp
    d405:	48 89 e5             	mov    rbp,rsp
    d408:	48 83 ec 40          	sub    rsp,0x40
    d40c:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    d410:	48 89 f8             	mov    rax,rdi
    d413:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    d417:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    d41b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    d41f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d423:	e8 08 95 ff ff       	call   6930 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    d428:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    d42c:	48 89 c1             	mov    rcx,rax
    d42f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    d433:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d437:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    d43b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d43f:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    d443:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    d447:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    d44b:	48 83 c4 40          	add    rsp,0x40
    d44f:	5d                   	pop    rbp
    d450:	c3                   	ret
    d451:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d458:	00 00 00 
    d45b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_>:
      {
    d460:	f3 0f 1e fa          	endbr64
    d464:	55                   	push   rbp
    d465:	48 89 e5             	mov    rbp,rsp
    d468:	48 83 ec 20          	sub    rsp,0x20
    d46c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d470:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d474:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d478:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
      : _M_dataplus(_M_local_data(), __a)
    d47c:	e8 7f 94 ff ff       	call   6900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    d481:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d485:	48 89 c6             	mov    rsi,rax
    d488:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d48c:	e8 4f 9c ff ff       	call   70e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>
    d491:	eb 00                	jmp    d493 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_+0x33>
    d493:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d497:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d49b:	31 c0                	xor    eax,eax
    d49d:	89 c6                	mov    esi,eax
	_M_set_length(0);
    d49f:	e8 ec 97 ff ff       	call   6c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    d4a4:	eb 00                	jmp    d4a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_+0x46>
      }
    d4a6:	48 83 c4 20          	add    rsp,0x20
    d4aa:	5d                   	pop    rbp
    d4ab:	c3                   	ret
    d4ac:	f3 0f 1e fa          	endbr64
    d4b0:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data(), __a)
    d4b3:	e8 28 94 ff ff       	call   68e0 <__clang_call_terminate>
    d4b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d4bf:	00 

000000000000d4c0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>:
      : _M_current(__i) { }
    d4c0:	f3 0f 1e fa          	endbr64
    d4c4:	55                   	push   rbp
    d4c5:	48 89 e5             	mov    rbp,rsp
    d4c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d4cc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d4d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d4d4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    d4d8:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    d4db:	48 89 08             	mov    QWORD PTR [rax],rcx
    d4de:	5d                   	pop    rbp
    d4df:	c3                   	ret

000000000000d4e0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>:
      { return _M_current; }
    d4e0:	f3 0f 1e fa          	endbr64
    d4e4:	55                   	push   rbp
    d4e5:	48 89 e5             	mov    rbp,rsp
    d4e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d4ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d4f0:	5d                   	pop    rbp
    d4f1:	c3                   	ret
    d4f2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d4f9:	00 00 00 
    d4fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d500 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>:
      {
    d500:	f3 0f 1e fa          	endbr64
    d504:	55                   	push   rbp
    d505:	48 89 e5             	mov    rbp,rsp
    d508:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d50c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
	return size_type(this->_M_impl._M_end_of_storage
    d510:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
			   - this->_M_impl._M_start);
    d514:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    d517:	48 29 c8             	sub    rax,rcx
    d51a:	48 c1 f8 05          	sar    rax,0x5
	return size_type(this->_M_impl._M_end_of_storage
    d51e:	5d                   	pop    rbp
    d51f:	c3                   	ret

000000000000d520 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_>:
	{
    d520:	f3 0f 1e fa          	endbr64
    d524:	55                   	push   rbp
    d525:	48 89 e5             	mov    rbp,rsp
    d528:	48 83 ec 70          	sub    rsp,0x70
    d52c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d533:	00 00 
    d535:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d539:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
    d53d:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d541:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    d545:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    d549:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d54d:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
	  pointer __result = this->_M_allocate(__n);
    d551:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    d555:	e8 96 a3 ff ff       	call   78f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    d55a:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    d55e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	      std::__uninitialized_copy_a(__first, __last, __result,
    d562:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d566:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d56a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d56e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d572:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d576:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
					  _M_get_Tp_allocator());
    d57a:	e8 81 a4 ff ff       	call   7a00 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    d57f:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    d583:	48 89 c1             	mov    rcx,rax
	      std::__uninitialized_copy_a(__first, __last, __result,
    d586:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d58a:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d58e:	e8 ad 02 00 00       	call   d840 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>
    d593:	eb 00                	jmp    d595 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x75>
	      return __result;
    d595:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d599:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    d59d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d5a4:	00 00 
    d5a6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d5aa:	48 39 c8             	cmp    rax,rcx
    d5ad:	0f 85 97 00 00 00    	jne    d64a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d5b3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    d5b7:	48 83 c4 70          	add    rsp,0x70
    d5bb:	5d                   	pop    rbp
    d5bc:	c3                   	ret
    d5bd:	f3 0f 1e fa          	endbr64
    d5c1:	48 89 c1             	mov    rcx,rax
	}
    d5c4:	89 d0                	mov    eax,edx
    d5c6:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d5ca:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
	    }
    d5cd:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    d5d1:	e8 ea 6e ff ff       	call   44c0 <__cxa_begin_catch@plt>
    d5d6:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
	      _M_deallocate(__result, __n);
    d5da:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    d5de:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    d5e2:	e8 09 b1 ff ff       	call   86f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    d5e7:	eb 00                	jmp    d5e9 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xc9>
	      __throw_exception_again;
    d5e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d5f0:	00 00 
    d5f2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d5f6:	48 39 c8             	cmp    rax,rcx
    d5f9:	75 4f                	jne    d64a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d5fb:	e8 00 71 ff ff       	call   4700 <__cxa_rethrow@plt>
    d600:	eb 48                	jmp    d64a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d602:	f3 0f 1e fa          	endbr64
    d606:	48 89 c1             	mov    rcx,rax
	}
    d609:	89 d0                	mov    eax,edx
    d60b:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d60f:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
	    }
    d612:	e8 b9 71 ff ff       	call   47d0 <__cxa_end_catch@plt>
    d617:	eb 00                	jmp    d619 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xf9>
    d619:	eb 00                	jmp    d61b <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xfb>
    d61b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d61f:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    d623:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d62a:	00 00 
    d62c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d630:	48 39 c8             	cmp    rax,rcx
    d633:	75 15                	jne    d64a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d635:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    d639:	e8 42 6e ff ff       	call   4480 <_Unwind_Resume@plt>
    d63e:	f3 0f 1e fa          	endbr64
    d642:	48 89 c7             	mov    rdi,rax
    d645:	e8 96 92 ff ff       	call   68e0 <__clang_call_terminate>
    d64a:	e8 81 6f ff ff       	call   45d0 <__stack_chk_fail@plt>
    d64f:	90                   	nop

000000000000d650 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      { return const_iterator(this->_M_impl._M_start); }
    d650:	f3 0f 1e fa          	endbr64
    d654:	55                   	push   rbp
    d655:	48 89 e5             	mov    rbp,rsp
    d658:	48 83 ec 20          	sub    rsp,0x20
    d65c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d663:	00 00 
    d665:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d669:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d66d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    d671:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d675:	e8 36 05 00 00       	call   dbb0 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>
    d67a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d67e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d682:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d689:	00 00 
    d68b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d68f:	48 39 c8             	cmp    rax,rcx
    d692:	75 0a                	jne    d69e <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv+0x4e>
    d694:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d698:	48 83 c4 20          	add    rsp,0x20
    d69c:	5d                   	pop    rbp
    d69d:	c3                   	ret
    d69e:	e8 2d 6f ff ff       	call   45d0 <__stack_chk_fail@plt>
    d6a3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d6aa:	00 00 00 
    d6ad:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d6b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      { return const_iterator(this->_M_impl._M_finish); }
    d6b0:	f3 0f 1e fa          	endbr64
    d6b4:	55                   	push   rbp
    d6b5:	48 89 e5             	mov    rbp,rsp
    d6b8:	48 83 ec 20          	sub    rsp,0x20
    d6bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d6c3:	00 00 
    d6c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d6c9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d6cd:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    d6d1:	48 83 c6 08          	add    rsi,0x8
    d6d5:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d6d9:	e8 d2 04 00 00       	call   dbb0 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>
    d6de:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d6e2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d6e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d6ed:	00 00 
    d6ef:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d6f3:	48 39 c8             	cmp    rax,rcx
    d6f6:	75 0a                	jne    d702 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv+0x52>
    d6f8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d6fc:	48 83 c4 20          	add    rsp,0x20
    d700:	5d                   	pop    rbp
    d701:	c3                   	ret
    d702:	e8 c9 6e ff ff       	call   45d0 <__stack_chk_fail@plt>
    d707:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    d70e:	00 00 

000000000000d710 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>:
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    {
    d710:	f3 0f 1e fa          	endbr64
    d714:	55                   	push   rbp
    d715:	48 89 e5             	mov    rbp,rsp
    d718:	48 83 ec 60          	sub    rsp,0x60
    d71c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d723:	00 00 
    d725:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d729:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d72d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d731:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    d735:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d739:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d73d:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    d741:	e8 8a 06 00 00       	call   ddd0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
    d746:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    d74a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d74e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d752:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d756:	e8 75 06 00 00       	call   ddd0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
    d75b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    d75f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d763:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return std::__copy_move_a<__is_move_iterator<_II>::__value>
    d767:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    d76b:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    d76f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    d773:	e8 98 05 00 00       	call   dd10 <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>
    d778:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d77c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d780:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    d784:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d78b:	00 00 
    d78d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d791:	48 39 c8             	cmp    rax,rcx
    d794:	75 0a                	jne    d7a0 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_+0x90>
    d796:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    d79a:	48 83 c4 60          	add    rsp,0x60
    d79e:	5d                   	pop    rbp
    d79f:	c3                   	ret
    d7a0:	e8 2b 6e ff ff       	call   45d0 <__stack_chk_fail@plt>
    d7a5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d7ac:	00 00 00 
    d7af:	90                   	nop

000000000000d7b0 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    d7b0:	f3 0f 1e fa          	endbr64
    d7b4:	55                   	push   rbp
    d7b5:	48 89 e5             	mov    rbp,rsp
    d7b8:	48 83 ec 20          	sub    rsp,0x20
    d7bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d7c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d7c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    d7c8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d7cc:	e8 3f 09 00 00       	call   e110 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    d7d1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d7d5:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d7d9:	e8 32 09 00 00       	call   e110 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    d7de:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d7e2:	48 89 c6             	mov    rsi,rax
    d7e5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move_a<__is_move_iterator<_II>::__value>
    d7e9:	e8 92 08 00 00       	call   e080 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    d7ee:	48 83 c4 20          	add    rsp,0x20
    d7f2:	5d                   	pop    rbp
    d7f3:	c3                   	ret
    d7f4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d7fb:	00 00 00 
    d7fe:	66 90                	xchg   ax,ax

000000000000d800 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>:
    {
    d800:	f3 0f 1e fa          	endbr64
    d804:	55                   	push   rbp
    d805:	48 89 e5             	mov    rbp,rsp
    d808:	48 83 ec 20          	sub    rsp,0x20
    d80c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d810:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d814:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    d818:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      return std::uninitialized_copy(__first, __last, __result);
    d81c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d820:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    d824:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d828:	e8 f3 09 00 00       	call   e220 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    d82d:	48 83 c4 20          	add    rsp,0x20
    d831:	5d                   	pop    rbp
    d832:	c3                   	ret
    d833:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d83a:	00 00 00 
    d83d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d840 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>:
    {
    d840:	f3 0f 1e fa          	endbr64
    d844:	55                   	push   rbp
    d845:	48 89 e5             	mov    rbp,rsp
    d848:	48 83 ec 40          	sub    rsp,0x40
    d84c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d853:	00 00 
    d855:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d859:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d85d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d861:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    d865:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
      return std::uninitialized_copy(__first, __last, __result);
    d869:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d86d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d871:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d875:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d879:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    d87d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d881:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d885:	e8 26 00 00 00       	call   d8b0 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
    d88a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d88e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d895:	00 00 
    d897:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d89b:	48 39 c8             	cmp    rax,rcx
    d89e:	75 0a                	jne    d8aa <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E+0x6a>
    d8a0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d8a4:	48 83 c4 40          	add    rsp,0x40
    d8a8:	5d                   	pop    rbp
    d8a9:	c3                   	ret
    d8aa:	e8 21 6d ff ff       	call   45d0 <__stack_chk_fail@plt>
    d8af:	90                   	nop

000000000000d8b0 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    {
    d8b0:	f3 0f 1e fa          	endbr64
    d8b4:	55                   	push   rbp
    d8b5:	48 89 e5             	mov    rbp,rsp
    d8b8:	48 83 ec 40          	sub    rsp,0x40
    d8bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d8c3:	00 00 
    d8c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d8c9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d8cd:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d8d1:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
      const bool __can_memmove = __is_trivial(_ValueType1);
    d8d5:	c6 45 cf 00          	mov    BYTE PTR [rbp-0x31],0x0
      const bool __assignable
    d8d9:	c6 45 ce 00          	mov    BYTE PTR [rbp-0x32],0x0
	__uninit_copy(__first, __last, __result);
    d8dd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d8e1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d8e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d8e9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d8ed:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
      return std::__uninitialized_copy<__can_memmove && __assignable>::
    d8f1:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d8f5:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d8f9:	e8 32 00 00 00       	call   d930 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>
    d8fe:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d902:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d909:	00 00 
    d90b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d90f:	48 39 c8             	cmp    rax,rcx
    d912:	75 0a                	jne    d91e <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x6e>
    d914:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d918:	48 83 c4 40          	add    rsp,0x40
    d91c:	5d                   	pop    rbp
    d91d:	c3                   	ret
    d91e:	e8 ad 6c ff ff       	call   45d0 <__stack_chk_fail@plt>
    d923:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d92a:	00 00 00 
    d92d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d930 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>:
	{ return std::__do_uninit_copy(__first, __last, __result); }
    d930:	f3 0f 1e fa          	endbr64
    d934:	55                   	push   rbp
    d935:	48 89 e5             	mov    rbp,rsp
    d938:	48 83 ec 40          	sub    rsp,0x40
    d93c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d943:	00 00 
    d945:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d949:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d94d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d951:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    d955:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d959:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d95d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d961:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d965:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    d969:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d96d:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d971:	e8 2a 00 00 00       	call   d9a0 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
    d976:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    d97a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d981:	00 00 
    d983:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d987:	48 39 c8             	cmp    rax,rcx
    d98a:	75 0a                	jne    d996 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x66>
    d98c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    d990:	48 83 c4 40          	add    rsp,0x40
    d994:	5d                   	pop    rbp
    d995:	c3                   	ret
    d996:	e8 35 6c ff ff       	call   45d0 <__stack_chk_fail@plt>
    d99b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d9a0 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    {
    d9a0:	f3 0f 1e fa          	endbr64
    d9a4:	55                   	push   rbp
    d9a5:	48 89 e5             	mov    rbp,rsp
    d9a8:	48 83 ec 50          	sub    rsp,0x50
    d9ac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d9b3:	00 00 
    d9b5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d9b9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d9bd:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d9c1:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      _ForwardIterator __cur = __result;
    d9c5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d9c9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  for (; __first != __last; ++__first, (void)++__cur)
    d9cd:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d9d1:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d9d5:	e8 f6 00 00 00       	call   dad0 <_ZN9__gnu_cxxeqIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    d9da:	34 ff                	xor    al,0xff
    d9dc:	a8 01                	test   al,0x1
    d9de:	75 02                	jne    d9e2 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x42>
    d9e0:	eb 79                	jmp    da5b <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xbb>
	    std::_Construct(std::__addressof(*__cur), *__first);
    d9e2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d9e6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d9ea:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d9ee:	e8 5d 01 00 00       	call   db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    d9f3:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    d9f7:	48 89 c6             	mov    rsi,rax
    d9fa:	e8 21 01 00 00       	call   db20 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>
    d9ff:	eb 00                	jmp    da01 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x61>
    da01:	eb 00                	jmp    da03 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x63>
	  for (; __first != __last; ++__first, (void)++__cur)
    da03:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    da07:	e8 64 01 00 00       	call   db70 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
    da0c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    da10:	48 83 c0 20          	add    rax,0x20
    da14:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    da18:	eb b3                	jmp    d9cd <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x2d>
    da1a:	f3 0f 1e fa          	endbr64
    da1e:	48 89 c1             	mov    rcx,rax
    }
    da21:	89 d0                	mov    eax,edx
    da23:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    da27:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
	}
    da2a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    da2e:	e8 8d 6a ff ff       	call   44c0 <__cxa_begin_catch@plt>
	  std::_Destroy(__result, __cur);
    da33:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    da37:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    da3b:	e8 20 ac ff ff       	call   8660 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    da40:	eb 00                	jmp    da42 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xa2>
	  __throw_exception_again;
    da42:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    da49:	00 00 
    da4b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    da4f:	48 39 c8             	cmp    rax,rcx
    da52:	75 73                	jne    dac7 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    da54:	e8 a7 6c ff ff       	call   4700 <__cxa_rethrow@plt>
    da59:	eb 6c                	jmp    dac7 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
	  return __cur;
    da5b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    da5f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    da63:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    da6a:	00 00 
    da6c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    da70:	48 39 c8             	cmp    rax,rcx
    da73:	75 52                	jne    dac7 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    da75:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    da79:	48 83 c4 50          	add    rsp,0x50
    da7d:	5d                   	pop    rbp
    da7e:	c3                   	ret
    da7f:	f3 0f 1e fa          	endbr64
    da83:	48 89 c1             	mov    rcx,rax
    }
    da86:	89 d0                	mov    eax,edx
    da88:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    da8c:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
	}
    da8f:	e8 3c 6d ff ff       	call   47d0 <__cxa_end_catch@plt>
    da94:	eb 00                	jmp    da96 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xf6>
    da96:	eb 00                	jmp    da98 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xf8>
    da98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    da9c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    daa0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    daa7:	00 00 
    daa9:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    daad:	48 39 c8             	cmp    rax,rcx
    dab0:	75 15                	jne    dac7 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    dab2:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    dab6:	e8 c5 69 ff ff       	call   4480 <_Unwind_Resume@plt>
    dabb:	f3 0f 1e fa          	endbr64
    dabf:	48 89 c7             	mov    rdi,rax
    dac2:	e8 19 8e ff ff       	call   68e0 <__clang_call_terminate>
    dac7:	e8 04 6b ff ff       	call   45d0 <__stack_chk_fail@plt>
    dacc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dad0 <_ZN9__gnu_cxxeqIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    dad0:	f3 0f 1e fa          	endbr64
    dad4:	55                   	push   rbp
    dad5:	48 89 e5             	mov    rbp,rsp
    dad8:	48 83 ec 20          	sub    rsp,0x20
    dadc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dae0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dae4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    dae8:	e8 a3 00 00 00       	call   db90 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    daed:	48 8b 00             	mov    rax,QWORD PTR [rax]
    daf0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    daf4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    daf8:	e8 93 00 00 00       	call   db90 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dafd:	48 89 c1             	mov    rcx,rax
    db00:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    db04:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    db07:	0f 94 c0             	sete   al
    db0a:	24 01                	and    al,0x1
    db0c:	48 83 c4 20          	add    rsp,0x20
    db10:	5d                   	pop    rbp
    db11:	c3                   	ret
    db12:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    db19:	00 00 00 
    db1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000db20 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>:
    {
    db20:	f3 0f 1e fa          	endbr64
    db24:	55                   	push   rbp
    db25:	48 89 e5             	mov    rbp,rsp
    db28:	48 83 ec 10          	sub    rsp,0x10
    db2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db30:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    db34:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    db38:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    db3c:	e8 cf 83 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    }
    db41:	48 83 c4 10          	add    rsp,0x10
    db45:	5d                   	pop    rbp
    db46:	c3                   	ret
    db47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    db4e:	00 00 

000000000000db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      { return *_M_current; }
    db50:	f3 0f 1e fa          	endbr64
    db54:	55                   	push   rbp
    db55:	48 89 e5             	mov    rbp,rsp
    db58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    db60:	48 8b 00             	mov    rax,QWORD PTR [rax]
    db63:	5d                   	pop    rbp
    db64:	c3                   	ret
    db65:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    db6c:	00 00 00 
    db6f:	90                   	nop

000000000000db70 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      {
    db70:	f3 0f 1e fa          	endbr64
    db74:	55                   	push   rbp
    db75:	48 89 e5             	mov    rbp,rsp
    db78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    db80:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    db83:	48 83 c1 20          	add    rcx,0x20
    db87:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    db8a:	5d                   	pop    rbp
    db8b:	c3                   	ret
    db8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000db90 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      { return _M_current; }
    db90:	f3 0f 1e fa          	endbr64
    db94:	55                   	push   rbp
    db95:	48 89 e5             	mov    rbp,rsp
    db98:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    dba0:	5d                   	pop    rbp
    dba1:	c3                   	ret
    dba2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    dba9:	00 00 00 
    dbac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dbb0 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>:
      : _M_current(__i) { }
    dbb0:	f3 0f 1e fa          	endbr64
    dbb4:	55                   	push   rbp
    dbb5:	48 89 e5             	mov    rbp,rsp
    dbb8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dbbc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dbc0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    dbc4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    dbc8:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    dbcb:	48 89 08             	mov    QWORD PTR [rax],rcx
    dbce:	5d                   	pop    rbp
    dbcf:	c3                   	ret

000000000000dbd0 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>:
    {
    dbd0:	f3 0f 1e fa          	endbr64
    dbd4:	55                   	push   rbp
    dbd5:	48 89 e5             	mov    rbp,rsp
    dbd8:	48 83 ec 30          	sub    rsp,0x30
    dbdc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dbe3:	00 00 
    dbe5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dbe9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dbed:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
	__destroy(__first, __last);
    dbf1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dbf5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    dbf9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dbfd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    dc01:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    dc05:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    dc09:	e8 22 00 00 00       	call   dc30 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>
    }
    dc0e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dc15:	00 00 
    dc17:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dc1b:	48 39 c8             	cmp    rax,rcx
    dc1e:	75 06                	jne    dc26 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_+0x56>
    dc20:	48 83 c4 30          	add    rsp,0x30
    dc24:	5d                   	pop    rbp
    dc25:	c3                   	ret
    dc26:	e8 a5 69 ff ff       	call   45d0 <__stack_chk_fail@plt>
    dc2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000dc30 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>:
	{
    dc30:	f3 0f 1e fa          	endbr64
    dc34:	55                   	push   rbp
    dc35:	48 89 e5             	mov    rbp,rsp
    dc38:	48 83 ec 20          	sub    rsp,0x20
    dc3c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dc43:	00 00 
    dc45:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dc49:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dc4d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
	  for (; __first != __last; ++__first)
    dc51:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc55:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    dc59:	e8 42 00 00 00       	call   dca0 <_ZN9__gnu_cxxeqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    dc5e:	34 ff                	xor    al,0xff
    dc60:	a8 01                	test   al,0x1
    dc62:	75 02                	jne    dc66 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x36>
    dc64:	eb 1c                	jmp    dc82 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x52>
	    std::_Destroy(std::__addressof(*__first));
    dc66:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc6a:	e8 91 a3 ff ff       	call   8000 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    dc6f:	48 89 c7             	mov    rdi,rax
    dc72:	e8 59 aa ff ff       	call   86d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    dc77:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc7b:	e8 70 00 00 00       	call   dcf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
    dc80:	eb cf                	jmp    dc51 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x21>
	}
    dc82:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dc89:	00 00 
    dc8b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dc8f:	48 39 c8             	cmp    rax,rcx
    dc92:	75 06                	jne    dc9a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x6a>
    dc94:	48 83 c4 20          	add    rsp,0x20
    dc98:	5d                   	pop    rbp
    dc99:	c3                   	ret
    dc9a:	e8 31 69 ff ff       	call   45d0 <__stack_chk_fail@plt>
    dc9f:	90                   	nop

000000000000dca0 <_ZN9__gnu_cxxeqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    dca0:	f3 0f 1e fa          	endbr64
    dca4:	55                   	push   rbp
    dca5:	48 89 e5             	mov    rbp,rsp
    dca8:	48 83 ec 20          	sub    rsp,0x20
    dcac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dcb0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dcb4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    dcb8:	e8 33 9f ff ff       	call   7bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dcbd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    dcc0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    dcc4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    dcc8:	e8 23 9f ff ff       	call   7bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dccd:	48 89 c1             	mov    rcx,rax
    dcd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dcd4:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    dcd7:	0f 94 c0             	sete   al
    dcda:	24 01                	and    al,0x1
    dcdc:	48 83 c4 20          	add    rsp,0x20
    dce0:	5d                   	pop    rbp
    dce1:	c3                   	ret
    dce2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    dce9:	00 00 00 
    dcec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dcf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      {
    dcf0:	f3 0f 1e fa          	endbr64
    dcf4:	55                   	push   rbp
    dcf5:	48 89 e5             	mov    rbp,rsp
    dcf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dcfc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    dd00:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    dd03:	48 83 c1 20          	add    rcx,0x20
    dd07:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    dd0a:	5d                   	pop    rbp
    dd0b:	c3                   	ret
    dd0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dd10 <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>:
    {
    dd10:	f3 0f 1e fa          	endbr64
    dd14:	55                   	push   rbp
    dd15:	48 89 e5             	mov    rbp,rsp
    dd18:	48 83 ec 60          	sub    rsp,0x60
    dd1c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dd23:	00 00 
    dd25:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dd29:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dd2d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    dd31:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      return std::__niter_wrap(__result,
    dd35:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    dd39:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    dd3d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dd41:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    dd45:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    dd49:	e8 82 01 00 00       	call   ded0 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
    dd4e:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
					     std::__niter_base(__last),
    dd52:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dd56:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    dd5a:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    dd5e:	e8 6d 01 00 00       	call   ded0 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
    dd63:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
					     std::__niter_base(__result)));
    dd67:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    dd6b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    dd6f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    dd73:	e8 a8 01 00 00       	call   df20 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
    dd78:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    dd7c:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    dd80:	48 89 c2             	mov    rdx,rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    dd83:	e8 18 01 00 00       	call   dea0 <_ZSt14__copy_move_a1ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>
    dd88:	48 89 c6             	mov    rsi,rax
      return std::__niter_wrap(__result,
    dd8b:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    dd8f:	e8 8c 00 00 00       	call   de20 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>
    dd94:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    dd98:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    dd9c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    dda0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dda7:	00 00 
    dda9:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ddad:	48 39 c8             	cmp    rax,rcx
    ddb0:	75 0a                	jne    ddbc <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_+0xac>
    ddb2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ddb6:	48 83 c4 60          	add    rsp,0x60
    ddba:	5d                   	pop    rbp
    ddbb:	c3                   	ret
    ddbc:	e8 0f 68 ff ff       	call   45d0 <__stack_chk_fail@plt>
    ddc1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ddc8:	00 00 00 
    ddcb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ddd0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>:
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    { return __it; }
    ddd0:	f3 0f 1e fa          	endbr64
    ddd4:	55                   	push   rbp
    ddd5:	48 89 e5             	mov    rbp,rsp
    ddd8:	48 83 ec 20          	sub    rsp,0x20
    dddc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dde3:	00 00 
    dde5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dde9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    dded:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ddf1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ddf5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ddf9:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ddfd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    de04:	00 00 
    de06:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    de0a:	48 39 c8             	cmp    rax,rcx
    de0d:	75 0a                	jne    de19 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_+0x49>
    de0f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    de13:	48 83 c4 20          	add    rsp,0x20
    de17:	5d                   	pop    rbp
    de18:	c3                   	ret
    de19:	e8 b2 67 ff ff       	call   45d0 <__stack_chk_fail@plt>
    de1e:	66 90                	xchg   ax,ax

000000000000de20 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>:
    { return __from + (std::__niter_base(__res) - std::__niter_base(__from)); }
    de20:	f3 0f 1e fa          	endbr64
    de24:	55                   	push   rbp
    de25:	48 89 e5             	mov    rbp,rsp
    de28:	48 83 ec 40          	sub    rsp,0x40
    de2c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    de33:	00 00 
    de35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    de39:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    de3d:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    de41:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    de45:	e8 16 9f ff ff       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    de4a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    de4e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    de52:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    de56:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    de5a:	e8 c1 00 00 00       	call   df20 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
    de5f:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    de63:	48 29 c6             	sub    rsi,rax
    de66:	48 c1 fe 05          	sar    rsi,0x5
    de6a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    de6e:	e8 fd 00 00 00       	call   df70 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl>
    de73:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    de77:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    de7b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    de7f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    de86:	00 00 
    de88:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    de8c:	48 39 c8             	cmp    rax,rcx
    de8f:	75 0a                	jne    de9b <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_+0x7b>
    de91:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    de95:	48 83 c4 40          	add    rsp,0x40
    de99:	5d                   	pop    rbp
    de9a:	c3                   	ret
    de9b:	e8 30 67 ff ff       	call   45d0 <__stack_chk_fail@plt>

000000000000dea0 <_ZSt14__copy_move_a1ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>:
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    dea0:	f3 0f 1e fa          	endbr64
    dea4:	55                   	push   rbp
    dea5:	48 89 e5             	mov    rbp,rsp
    dea8:	48 83 ec 20          	sub    rsp,0x20
    deac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    deb0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    deb4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    deb8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    debc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    dec0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    dec4:	e8 17 01 00 00       	call   dfe0 <_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>
    dec9:	48 83 c4 20          	add    rsp,0x20
    decd:	5d                   	pop    rbp
    dece:	c3                   	ret
    decf:	90                   	nop

000000000000ded0 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>:
  template<typename _Iterator, typename _Container>
    _GLIBCXX20_CONSTEXPR
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
    ded0:	f3 0f 1e fa          	endbr64
    ded4:	55                   	push   rbp
    ded5:	48 89 e5             	mov    rbp,rsp
    ded8:	48 83 ec 20          	sub    rsp,0x20
    dedc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dee3:	00 00 
    dee5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dee9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    deed:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    def1:	e8 9a fc ff ff       	call   db90 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    def6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    def9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    defd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df04:	00 00 
    df06:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    df0a:	48 39 c8             	cmp    rax,rcx
    df0d:	75 0a                	jne    df19 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE+0x49>
    df0f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    df13:	48 83 c4 20          	add    rsp,0x20
    df17:	5d                   	pop    rbp
    df18:	c3                   	ret
    df19:	e8 b2 66 ff ff       	call   45d0 <__stack_chk_fail@plt>
    df1e:	66 90                	xchg   ax,ax

000000000000df20 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>:
    df20:	f3 0f 1e fa          	endbr64
    df24:	55                   	push   rbp
    df25:	48 89 e5             	mov    rbp,rsp
    df28:	48 83 ec 20          	sub    rsp,0x20
    df2c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df33:	00 00 
    df35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    df39:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    df3d:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    df41:	e8 aa 9c ff ff       	call   7bf0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    df46:	48 8b 00             	mov    rax,QWORD PTR [rax]
    df49:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    df4d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df54:	00 00 
    df56:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    df5a:	48 39 c8             	cmp    rax,rcx
    df5d:	75 0a                	jne    df69 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE+0x49>
    df5f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    df63:	48 83 c4 20          	add    rsp,0x20
    df67:	5d                   	pop    rbp
    df68:	c3                   	ret
    df69:	e8 62 66 ff ff       	call   45d0 <__stack_chk_fail@plt>
    df6e:	66 90                	xchg   ax,ax

000000000000df70 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl>:
      { return __normal_iterator(_M_current + __n); }
    df70:	f3 0f 1e fa          	endbr64
    df74:	55                   	push   rbp
    df75:	48 89 e5             	mov    rbp,rsp
    df78:	48 83 ec 30          	sub    rsp,0x30
    df7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df83:	00 00 
    df85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    df89:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    df8d:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    df91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    df95:	48 8b 00             	mov    rax,QWORD PTR [rax]
    df98:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    df9c:	48 c1 e1 05          	shl    rcx,0x5
    dfa0:	48 01 c8             	add    rax,rcx
    dfa3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    dfa7:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dfab:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    dfaf:	e8 5c 9c ff ff       	call   7c10 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    dfb4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dfb8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    dfbc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dfc3:	00 00 
    dfc5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dfc9:	48 39 c8             	cmp    rax,rcx
    dfcc:	75 0a                	jne    dfd8 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl+0x68>
    dfce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    dfd2:	48 83 c4 30          	add    rsp,0x30
    dfd6:	5d                   	pop    rbp
    dfd7:	c3                   	ret
    dfd8:	e8 f3 65 ff ff       	call   45d0 <__stack_chk_fail@plt>
    dfdd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000dfe0 <_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>:
    {
    dfe0:	f3 0f 1e fa          	endbr64
    dfe4:	55                   	push   rbp
    dfe5:	48 89 e5             	mov    rbp,rsp
    dfe8:	48 83 ec 20          	sub    rsp,0x20
    dfec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dff0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dff4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
			      _Category>::__copy_m(__first, __last, __result);
    dff8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    dffc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e000:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
    e004:	e8 07 00 00 00       	call   e010 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>
    e009:	48 83 c4 20          	add    rsp,0x20
    e00d:	5d                   	pop    rbp
    e00e:	c3                   	ret
    e00f:	90                   	nop

000000000000e010 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>:
	{
    e010:	f3 0f 1e fa          	endbr64
    e014:	55                   	push   rbp
    e015:	48 89 e5             	mov    rbp,rsp
    e018:	48 83 ec 20          	sub    rsp,0x20
    e01c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e020:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e024:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e028:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e02c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e030:	48 29 c8             	sub    rax,rcx
    e033:	48 c1 f8 05          	sar    rax,0x5
    e037:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e03b:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    e040:	7e 33                	jle    e075 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x65>
	      *__result = *__first;
    e042:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e046:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e04a:	e8 91 bb ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
    e04f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e053:	48 83 c0 20          	add    rax,0x20
    e057:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	      ++__result;
    e05b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e05f:	48 83 c0 20          	add    rax,0x20
    e063:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e067:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e06b:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e06f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e073:	eb c6                	jmp    e03b <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x2b>
	  return __result;
    e075:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e079:	48 83 c4 20          	add    rsp,0x20
    e07d:	5d                   	pop    rbp
    e07e:	c3                   	ret
    e07f:	90                   	nop

000000000000e080 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    {
    e080:	f3 0f 1e fa          	endbr64
    e084:	55                   	push   rbp
    e085:	48 89 e5             	mov    rbp,rsp
    e088:	48 83 ec 40          	sub    rsp,0x40
    e08c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e093:	00 00 
    e095:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e099:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e09d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    e0a1:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    e0a5:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e0a9:	e8 b2 9c ff ff       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e0ae:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
					     std::__niter_base(__last),
    e0b2:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e0b6:	e8 a5 9c ff ff       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e0bb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
					     std::__niter_base(__result)));
    e0bf:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e0c3:	e8 98 9c ff ff       	call   7d60 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e0c8:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    e0cc:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    e0d0:	48 89 c2             	mov    rdx,rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    e0d3:	e8 78 00 00 00       	call   e150 <_ZSt14__copy_move_a1ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    e0d8:	48 89 c6             	mov    rsi,rax
    e0db:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
      return std::__niter_wrap(__result,
    e0df:	e8 4c 00 00 00       	call   e130 <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>
    e0e4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    e0e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e0ef:	00 00 
    e0f1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e0f5:	48 39 c8             	cmp    rax,rcx
    e0f8:	75 0a                	jne    e104 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_+0x84>
    e0fa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e0fe:	48 83 c4 40          	add    rsp,0x40
    e102:	5d                   	pop    rbp
    e103:	c3                   	ret
    e104:	e8 c7 64 ff ff       	call   45d0 <__stack_chk_fail@plt>
    e109:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e110 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
    e110:	f3 0f 1e fa          	endbr64
    e114:	55                   	push   rbp
    e115:	48 89 e5             	mov    rbp,rsp
    e118:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e11c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e120:	5d                   	pop    rbp
    e121:	c3                   	ret
    e122:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e129:	00 00 00 
    e12c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e130 <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>:
    { return __res; }
    e130:	f3 0f 1e fa          	endbr64
    e134:	55                   	push   rbp
    e135:	48 89 e5             	mov    rbp,rsp
    e138:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e13c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e140:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e144:	5d                   	pop    rbp
    e145:	c3                   	ret
    e146:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e14d:	00 00 00 

000000000000e150 <_ZSt14__copy_move_a1ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    e150:	f3 0f 1e fa          	endbr64
    e154:	55                   	push   rbp
    e155:	48 89 e5             	mov    rbp,rsp
    e158:	48 83 ec 20          	sub    rsp,0x20
    e15c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e160:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e164:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e168:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e16c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e170:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e174:	e8 07 00 00 00       	call   e180 <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    e179:	48 83 c4 20          	add    rsp,0x20
    e17d:	5d                   	pop    rbp
    e17e:	c3                   	ret
    e17f:	90                   	nop

000000000000e180 <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    {
    e180:	f3 0f 1e fa          	endbr64
    e184:	55                   	push   rbp
    e185:	48 89 e5             	mov    rbp,rsp
    e188:	48 83 ec 20          	sub    rsp,0x20
    e18c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e190:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e194:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
			      _Category>::__copy_m(__first, __last, __result);
    e198:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e19c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e1a0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
    e1a4:	e8 07 00 00 00       	call   e1b0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>
    e1a9:	48 83 c4 20          	add    rsp,0x20
    e1ad:	5d                   	pop    rbp
    e1ae:	c3                   	ret
    e1af:	90                   	nop

000000000000e1b0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>:
	{
    e1b0:	f3 0f 1e fa          	endbr64
    e1b4:	55                   	push   rbp
    e1b5:	48 89 e5             	mov    rbp,rsp
    e1b8:	48 83 ec 20          	sub    rsp,0x20
    e1bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e1c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e1c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e1c8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e1cc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e1d0:	48 29 c8             	sub    rax,rcx
    e1d3:	48 c1 f8 05          	sar    rax,0x5
    e1d7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e1db:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    e1e0:	7e 33                	jle    e215 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x65>
	      *__result = *__first;
    e1e2:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e1e6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e1ea:	e8 f1 b9 ff ff       	call   9be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
    e1ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e1f3:	48 83 c0 20          	add    rax,0x20
    e1f7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	      ++__result;
    e1fb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e1ff:	48 83 c0 20          	add    rax,0x20
    e203:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e207:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e20b:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e20f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e213:	eb c6                	jmp    e1db <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x2b>
	  return __result;
    e215:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e219:	48 83 c4 20          	add    rsp,0x20
    e21d:	5d                   	pop    rbp
    e21e:	c3                   	ret
    e21f:	90                   	nop

000000000000e220 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    e220:	f3 0f 1e fa          	endbr64
    e224:	55                   	push   rbp
    e225:	48 89 e5             	mov    rbp,rsp
    e228:	48 83 ec 20          	sub    rsp,0x20
    e22c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e230:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e234:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
      const bool __can_memmove = __is_trivial(_ValueType1);
    e238:	c6 45 e7 00          	mov    BYTE PTR [rbp-0x19],0x0
      const bool __assignable
    e23c:	c6 45 e6 00          	mov    BYTE PTR [rbp-0x1a],0x0
	__uninit_copy(__first, __last, __result);
    e240:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e244:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e248:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__uninitialized_copy<__can_memmove && __assignable>::
    e24c:	e8 0f 00 00 00       	call   e260 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>
    e251:	48 83 c4 20          	add    rsp,0x20
    e255:	5d                   	pop    rbp
    e256:	c3                   	ret
    e257:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e25e:	00 00 

000000000000e260 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>:
	{ return std::__do_uninit_copy(__first, __last, __result); }
    e260:	f3 0f 1e fa          	endbr64
    e264:	55                   	push   rbp
    e265:	48 89 e5             	mov    rbp,rsp
    e268:	48 83 ec 20          	sub    rsp,0x20
    e26c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e270:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e274:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e278:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e27c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e280:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e284:	e8 07 00 00 00       	call   e290 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    e289:	48 83 c4 20          	add    rsp,0x20
    e28d:	5d                   	pop    rbp
    e28e:	c3                   	ret
    e28f:	90                   	nop

000000000000e290 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    e290:	f3 0f 1e fa          	endbr64
    e294:	55                   	push   rbp
    e295:	48 89 e5             	mov    rbp,rsp
    e298:	48 83 ec 30          	sub    rsp,0x30
    e29c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e2a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e2a4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
      _ForwardIterator __cur = __result;
    e2a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e2ac:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	  for (; __first != __last; ++__first, (void)++__cur)
    e2b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e2b4:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    e2b8:	74 5a                	je     e314 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x84>
	    std::_Construct(std::__addressof(*__cur), *__first);
    e2ba:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e2be:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e2c2:	e8 89 00 00 00       	call   e350 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>
    e2c7:	eb 00                	jmp    e2c9 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x39>
    e2c9:	eb 00                	jmp    e2cb <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x3b>
	  for (; __first != __last; ++__first, (void)++__cur)
    e2cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e2cf:	48 83 c0 20          	add    rax,0x20
    e2d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e2d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e2db:	48 83 c0 20          	add    rax,0x20
    e2df:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e2e3:	eb cb                	jmp    e2b0 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x20>
    e2e5:	f3 0f 1e fa          	endbr64
    e2e9:	48 89 c1             	mov    rcx,rax
    }
    e2ec:	89 d0                	mov    eax,edx
    e2ee:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    e2f2:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
	}
    e2f5:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e2f9:	e8 c2 61 ff ff       	call   44c0 <__cxa_begin_catch@plt>
	  std::_Destroy(__result, __cur);
    e2fe:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e302:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    e306:	e8 55 a3 ff ff       	call   8660 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    e30b:	eb 00                	jmp    e30d <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x7d>
	  __throw_exception_again;
    e30d:	e8 ee 63 ff ff       	call   4700 <__cxa_rethrow@plt>
    e312:	eb 38                	jmp    e34c <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xbc>
	  return __cur;
    e314:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e318:	48 83 c4 30          	add    rsp,0x30
    e31c:	5d                   	pop    rbp
    e31d:	c3                   	ret
    e31e:	f3 0f 1e fa          	endbr64
    e322:	48 89 c1             	mov    rcx,rax
    }
    e325:	89 d0                	mov    eax,edx
    e327:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    e32b:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
	}
    e32e:	e8 9d 64 ff ff       	call   47d0 <__cxa_end_catch@plt>
    e333:	eb 00                	jmp    e335 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xa5>
    e335:	eb 00                	jmp    e337 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xa7>
    e337:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e33b:	e8 40 61 ff ff       	call   4480 <_Unwind_Resume@plt>
    e340:	f3 0f 1e fa          	endbr64
    e344:	48 89 c7             	mov    rdi,rax
    e347:	e8 94 85 ff ff       	call   68e0 <__clang_call_terminate>
    e34c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e350 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>:
    {
    e350:	f3 0f 1e fa          	endbr64
    e354:	55                   	push   rbp
    e355:	48 89 e5             	mov    rbp,rsp
    e358:	48 83 ec 10          	sub    rsp,0x10
    e35c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e360:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e364:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e368:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e36c:	e8 9f 7b ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    }
    e371:	48 83 c4 10          	add    rsp,0x10
    e375:	5d                   	pop    rbp
    e376:	c3                   	ret
    e377:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e37e:	00 00 

000000000000e380 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>:
		   const _Hash&, const _Equal&, const allocator_type&,
		   false_type __uks);

    public:
      // Constructor, destructor, assignment, swap
      _Hashtable() = default;
    e380:	f3 0f 1e fa          	endbr64
    e384:	55                   	push   rbp
    e385:	48 89 e5             	mov    rbp,rsp
    e388:	48 83 ec 10          	sub    rsp,0x10
    e38c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e390:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e394:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    e398:	e8 63 00 00 00       	call   e400 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>
    e39d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e3a1:	e8 8a 00 00 00       	call   e430 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEEC2Ev>
    e3a6:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      __buckets_ptr		_M_buckets		= &_M_single_bucket;
    e3aa:	48 89 f8             	mov    rax,rdi
    e3ad:	48 83 c0 30          	add    rax,0x30
    e3b1:	48 89 07             	mov    QWORD PTR [rdi],rax
      size_type			_M_bucket_count		= 1;
    e3b4:	48 c7 47 08 01 00 00 	mov    QWORD PTR [rdi+0x8],0x1
    e3bb:	00 
      _Hashtable() = default;
    e3bc:	48 83 c7 10          	add    rdi,0x10
    e3c0:	e8 8b 00 00 00       	call   e450 <_ZNSt8__detail15_Hash_node_baseC2Ev>
    e3c5:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      size_type			_M_element_count	= 0;
    e3c9:	48 c7 47 18 00 00 00 	mov    QWORD PTR [rdi+0x18],0x0
    e3d0:	00 
      _Hashtable() = default;
    e3d1:	48 83 c7 20          	add    rdi,0x20
    e3d5:	f3 0f 10 05 27 2c 00 	movss  xmm0,DWORD PTR [rip+0x2c27]        # 11004 <_IO_stdin_used+0x4>
    e3dc:	00 
    e3dd:	e8 8e 00 00 00       	call   e470 <_ZNSt8__detail20_Prime_rehash_policyC2Ef>
    e3e2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
      __node_base_ptr		_M_single_bucket	= nullptr;
    e3e6:	48 c7 40 30 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    e3ed:	00 
      _Hashtable() = default;
    e3ee:	48 83 c4 10          	add    rsp,0x10
    e3f2:	5d                   	pop    rbp
    e3f3:	c3                   	ret
    e3f4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e3fb:	00 00 00 
    e3fe:	66 90                	xchg   ax,ax

000000000000e400 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>:
      _S_node_equals(const _Hash_node_code_cache<true>& __lhn,
		     const _Hash_node_code_cache<true>& __rhn)
      { return __lhn._M_hash_code == __rhn._M_hash_code; }

    protected:
      _Hashtable_base() = default;
    e400:	f3 0f 1e fa          	endbr64
    e404:	55                   	push   rbp
    e405:	48 89 e5             	mov    rbp,rsp
    e408:	48 83 ec 10          	sub    rsp,0x10
    e40c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e410:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e414:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    e418:	e8 83 00 00 00       	call   e4a0 <_ZNSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EEC2Ev>
    e41d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e421:	e8 9a 00 00 00       	call   e4c0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>
    e426:	48 83 c4 10          	add    rsp,0x10
    e42a:	5d                   	pop    rbp
    e42b:	c3                   	ret
    e42c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e430 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEEC2Ev>:
      using __buckets_alloc_type =
	__alloc_rebind<__node_alloc_type, __node_base_ptr>;
      using __buckets_alloc_traits = std::allocator_traits<__buckets_alloc_type>;
      using __buckets_ptr = __node_base_ptr*;

      _Hashtable_alloc() = default;
    e430:	f3 0f 1e fa          	endbr64
    e434:	55                   	push   rbp
    e435:	48 89 e5             	mov    rbp,rsp
    e438:	48 83 ec 10          	sub    rsp,0x10
    e43c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e440:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e444:	e8 97 00 00 00       	call   e4e0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EEC2Ev>
    e449:	48 83 c4 10          	add    rsp,0x10
    e44d:	5d                   	pop    rbp
    e44e:	c3                   	ret
    e44f:	90                   	nop

000000000000e450 <_ZNSt8__detail15_Hash_node_baseC2Ev>:
    _Hash_node_base() noexcept : _M_nxt() { }
    e450:	f3 0f 1e fa          	endbr64
    e454:	55                   	push   rbp
    e455:	48 89 e5             	mov    rbp,rsp
    e458:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e45c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e460:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    e467:	5d                   	pop    rbp
    e468:	c3                   	ret
    e469:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e470 <_ZNSt8__detail20_Prime_rehash_policyC2Ef>:
    : _M_max_load_factor(__z), _M_next_resize(0) { }
    e470:	f3 0f 1e fa          	endbr64
    e474:	55                   	push   rbp
    e475:	48 89 e5             	mov    rbp,rsp
    e478:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e47c:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0
    e481:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e485:	f3 0f 10 45 f4       	movss  xmm0,DWORD PTR [rbp-0xc]
    e48a:	f3 0f 11 00          	movss  DWORD PTR [rax],xmm0
    e48e:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    e495:	00 
    e496:	5d                   	pop    rbp
    e497:	c3                   	ret
    e498:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e49f:	00 

000000000000e4a0 <_ZNSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EEC2Ev>:
      _Hash_code_base() = default;
    e4a0:	f3 0f 1e fa          	endbr64
    e4a4:	55                   	push   rbp
    e4a5:	48 89 e5             	mov    rbp,rsp
    e4a8:	48 83 ec 10          	sub    rsp,0x10
    e4ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e4b0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e4b4:	e8 17 00 00 00       	call   e4d0 <_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>
    e4b9:	48 83 c4 10          	add    rsp,0x10
    e4bd:	5d                   	pop    rbp
    e4be:	c3                   	ret
    e4bf:	90                   	nop

000000000000e4c0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>:
      _Hashtable_ebo_helper() noexcept(noexcept(_Tp())) : _Tp() { }
    e4c0:	f3 0f 1e fa          	endbr64
    e4c4:	55                   	push   rbp
    e4c5:	48 89 e5             	mov    rbp,rsp
    e4c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e4cc:	5d                   	pop    rbp
    e4cd:	c3                   	ret
    e4ce:	66 90                	xchg   ax,ax

000000000000e4d0 <_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>:
    e4d0:	f3 0f 1e fa          	endbr64
    e4d4:	55                   	push   rbp
    e4d5:	48 89 e5             	mov    rbp,rsp
    e4d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e4dc:	5d                   	pop    rbp
    e4dd:	c3                   	ret
    e4de:	66 90                	xchg   ax,ax

000000000000e4e0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EEC2Ev>:
    e4e0:	f3 0f 1e fa          	endbr64
    e4e4:	55                   	push   rbp
    e4e5:	48 89 e5             	mov    rbp,rsp
    e4e8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e4ec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e4f0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    e4f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e4f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e4fc:	5d                   	pop    rbp
    e4fd:	c3                   	ret
    e4fe:	66 90                	xchg   ax,ax

000000000000e500 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC2EPKcm>:
      { }

      constexpr
      basic_string_view(const _CharT* __str, size_type __len) noexcept
      : _M_len{__len}, _M_str{__str}
      { }
    e500:	f3 0f 1e fa          	endbr64
    e504:	55                   	push   rbp
    e505:	48 89 e5             	mov    rbp,rsp
    e508:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e50c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e510:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e514:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
      : _M_len{__len}, _M_str{__str}
    e518:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    e51c:	48 89 08             	mov    QWORD PTR [rax],rcx
    e51f:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    e523:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      { }
    e527:	5d                   	pop    rbp
    e528:	c3                   	ret
    e529:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e530 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc>:
      }

      [[nodiscard]]
      constexpr bool
      ends_with(_CharT __x) const noexcept
      { return !this->empty() && traits_type::eq(this->back(), __x); }
    e530:	f3 0f 1e fa          	endbr64
    e534:	55                   	push   rbp
    e535:	48 89 e5             	mov    rbp,rsp
    e538:	48 83 ec 30          	sub    rsp,0x30
    e53c:	40 88 f0             	mov    al,sil
    e53f:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    e546:	00 00 
    e548:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    e54c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e550:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    e553:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e557:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    e55b:	e8 50 00 00 00       	call   e5b0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE5emptyEv>
    e560:	88 c1                	mov    cl,al
    e562:	31 c0                	xor    eax,eax
    e564:	f6 c1 01             	test   cl,0x1
    e567:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    e56a:	75 18                	jne    e584 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc+0x54>
    e56c:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e570:	e8 8b 00 00 00       	call   e600 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv>
    e575:	48 89 c7             	mov    rdi,rax
    e578:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    e57c:	e8 4f 00 00 00       	call   e5d0 <_ZNSt11char_traitsIcE2eqERKcS2_>
    e581:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    e584:	8a 45 e7             	mov    al,BYTE PTR [rbp-0x19]
    e587:	88 45 d7             	mov    BYTE PTR [rbp-0x29],al
    e58a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e591:	00 00 
    e593:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e597:	48 39 c8             	cmp    rax,rcx
    e59a:	75 0b                	jne    e5a7 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc+0x77>
    e59c:	8a 45 d7             	mov    al,BYTE PTR [rbp-0x29]
    e59f:	24 01                	and    al,0x1
    e5a1:	48 83 c4 30          	add    rsp,0x30
    e5a5:	5d                   	pop    rbp
    e5a6:	c3                   	ret
    e5a7:	e8 24 60 ff ff       	call   45d0 <__stack_chk_fail@plt>
    e5ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e5b0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE5emptyEv>:
      { return this->_M_len == 0; }
    e5b0:	f3 0f 1e fa          	endbr64
    e5b4:	55                   	push   rbp
    e5b5:	48 89 e5             	mov    rbp,rsp
    e5b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e5bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e5c0:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    e5c4:	0f 94 c0             	sete   al
    e5c7:	24 01                	and    al,0x1
    e5c9:	5d                   	pop    rbp
    e5ca:	c3                   	ret
    e5cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e5d0 <_ZNSt11char_traitsIcE2eqERKcS2_>:
      { return __c1 == __c2; }
    e5d0:	f3 0f 1e fa          	endbr64
    e5d4:	55                   	push   rbp
    e5d5:	48 89 e5             	mov    rbp,rsp
    e5d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e5dc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e5e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e5e4:	0f be 00             	movsx  eax,BYTE PTR [rax]
    e5e7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    e5eb:	0f be 09             	movsx  ecx,BYTE PTR [rcx]
    e5ee:	39 c8                	cmp    eax,ecx
    e5f0:	0f 94 c0             	sete   al
    e5f3:	24 01                	and    al,0x1
    e5f5:	5d                   	pop    rbp
    e5f6:	c3                   	ret
    e5f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e5fe:	00 00 

000000000000e600 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv>:
      {
    e600:	f3 0f 1e fa          	endbr64
    e604:	55                   	push   rbp
    e605:	48 89 e5             	mov    rbp,rsp
    e608:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e60c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e610:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	__glibcxx_assert(this->_M_len > 0);
    e614:	eb 00                	jmp    e616 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv+0x16>
    e616:	eb 00                	jmp    e618 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv+0x18>
    e618:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	return *(this->_M_str + this->_M_len - 1);
    e61c:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    e620:	48 03 01             	add    rax,QWORD PTR [rcx]
    e623:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e627:	5d                   	pop    rbp
    e628:	c3                   	ret
    e629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e630 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev>:
	   typename _Hash, typename _RangeHash, typename _Unused,
	   typename _RehashPolicy, typename _Traits>
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    ~_Hashtable() noexcept
    {
    e630:	f3 0f 1e fa          	endbr64
    e634:	55                   	push   rbp
    e635:	48 89 e5             	mov    rbp,rsp
    e638:	48 83 ec 10          	sub    rsp,0x10
    e63c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e640:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e644:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
			._M_bucket_index(declval<const __node_value_type&>(),
					 (std::size_t)0)),
		    "Cache the hash code or qualify your functors involved"
		    " in hash code and bucket index computation with noexcept");

      clear();
    e648:	e8 33 00 00 00       	call   e680 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv>
    e64d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      _M_deallocate_buckets();
    e651:	e8 9a 00 00 00       	call   e6f0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>
    e656:	eb 00                	jmp    e658 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev+0x28>
    e658:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    }
    e65c:	e8 bf 00 00 00       	call   e720 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEED2Ev>
    e661:	48 83 c4 10          	add    rsp,0x10
    e665:	5d                   	pop    rbp
    e666:	c3                   	ret
    e667:	f3 0f 1e fa          	endbr64
    e66b:	48 89 c7             	mov    rdi,rax
      _M_deallocate_buckets();
    e66e:	e8 6d 82 ff ff       	call   68e0 <__clang_call_terminate>
    e673:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e67a:	00 00 00 
    e67d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000e680 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv>:
	   typename _RehashPolicy, typename _Traits>
    void
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    clear() noexcept
    {
    e680:	f3 0f 1e fa          	endbr64
    e684:	55                   	push   rbp
    e685:	48 89 e5             	mov    rbp,rsp
    e688:	48 83 ec 20          	sub    rsp,0x20
    e68c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e690:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e694:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
      this->_M_deallocate_nodes(_M_begin());
    e698:	e8 f3 00 00 00       	call   e790 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    e69d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    e6a1:	eb 00                	jmp    e6a3 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv+0x23>
    e6a3:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e6a7:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e6ab:	e8 90 00 00 00       	call   e740 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_>
    e6b0:	eb 00                	jmp    e6b2 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv+0x32>
    e6b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
      __builtin_memset(_M_buckets, 0,
    e6b6:	48 8b 38             	mov    rdi,QWORD PTR [rax]
		       _M_bucket_count * sizeof(__node_base_ptr));
    e6b9:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    e6bd:	48 c1 e2 03          	shl    rdx,0x3
      __builtin_memset(_M_buckets, 0,
    e6c1:	31 f6                	xor    esi,esi
    e6c3:	e8 58 5e ff ff       	call   4520 <memset@plt>
    e6c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
      _M_element_count = 0;
    e6cc:	48 c7 40 18 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
    e6d3:	00 
      _M_before_begin._M_nxt = nullptr;
    e6d4:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    e6db:	00 
    }
    e6dc:	48 83 c4 20          	add    rsp,0x20
    e6e0:	5d                   	pop    rbp
    e6e1:	c3                   	ret
    e6e2:	f3 0f 1e fa          	endbr64
    e6e6:	48 89 c7             	mov    rdi,rax
      this->_M_deallocate_nodes(_M_begin());
    e6e9:	e8 f2 81 ff ff       	call   68e0 <__clang_call_terminate>
    e6ee:	66 90                	xchg   ax,ax

000000000000e6f0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>:
      { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
    e6f0:	f3 0f 1e fa          	endbr64
    e6f4:	55                   	push   rbp
    e6f5:	48 89 e5             	mov    rbp,rsp
    e6f8:	48 83 ec 10          	sub    rsp,0x10
    e6fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e700:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e704:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    e707:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    e70b:	e8 c0 02 00 00       	call   e9d0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm>
    e710:	48 83 c4 10          	add    rsp,0x10
    e714:	5d                   	pop    rbp
    e715:	c3                   	ret
    e716:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e71d:	00 00 00 

000000000000e720 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEED2Ev>:
    struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
    e720:	f3 0f 1e fa          	endbr64
    e724:	55                   	push   rbp
    e725:	48 89 e5             	mov    rbp,rsp
    e728:	48 83 ec 10          	sub    rsp,0x10
    e72c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e730:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e734:	e8 27 04 00 00       	call   eb60 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EED2Ev>
    e739:	48 83 c4 10          	add    rsp,0x10
    e73d:	5d                   	pop    rbp
    e73e:	c3                   	ret
    e73f:	90                   	nop

000000000000e740 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_>:
    }

  template<typename _NodeAlloc>
    void
    _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_ptr __n)
    {
    e740:	f3 0f 1e fa          	endbr64
    e744:	55                   	push   rbp
    e745:	48 89 e5             	mov    rbp,rsp
    e748:	48 83 ec 20          	sub    rsp,0x20
    e74c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e750:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e754:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e758:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      while (__n)
    e75c:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    e761:	74 24                	je     e787 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_+0x47>
	{
	  __node_ptr __tmp = __n;
    e763:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e767:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  __n = __n->_M_next();
    e76b:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e76f:	e8 3c 00 00 00       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    e774:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e778:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  _M_deallocate_node(__tmp);
    e77c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    e780:	e8 4b 00 00 00       	call   e7d0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>
      while (__n)
    e785:	eb d5                	jmp    e75c <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_+0x1c>
	}
    }
    e787:	48 83 c4 20          	add    rsp,0x20
    e78b:	5d                   	pop    rbp
    e78c:	c3                   	ret
    e78d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000e790 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>:
      { return static_cast<__node_ptr>(_M_before_begin._M_nxt); }
    e790:	f3 0f 1e fa          	endbr64
    e794:	55                   	push   rbp
    e795:	48 89 e5             	mov    rbp,rsp
    e798:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e79c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e7a0:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    e7a4:	5d                   	pop    rbp
    e7a5:	c3                   	ret
    e7a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e7ad:	00 00 00 

000000000000e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>:
      { return static_cast<_Hash_node*>(this->_M_nxt); }
    e7b0:	f3 0f 1e fa          	endbr64
    e7b4:	55                   	push   rbp
    e7b5:	48 89 e5             	mov    rbp,rsp
    e7b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e7bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e7c0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    e7c3:	5d                   	pop    rbp
    e7c4:	c3                   	ret
    e7c5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e7cc:	00 00 00 
    e7cf:	90                   	nop

000000000000e7d0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>:
    {
    e7d0:	f3 0f 1e fa          	endbr64
    e7d4:	55                   	push   rbp
    e7d5:	48 89 e5             	mov    rbp,rsp
    e7d8:	48 83 ec 40          	sub    rsp,0x40
    e7dc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    e7e0:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    e7e4:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e7e8:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
    e7ec:	e8 4f 00 00 00       	call   e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    e7f1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    e7f5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e7f9:	48 83 c0 08          	add    rax,0x8
    e7fd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e801:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
      { return _M_storage._M_ptr(); }
    e805:	e8 36 01 00 00       	call   e940 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    e80a:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    e80e:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    e812:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::destroy_at(__p);
    e816:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e81a:	e8 c1 00 00 00       	call   e8e0 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEvPT_>
    e81f:	eb 0c                	jmp    e82d <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_+0x5d>
    e821:	f3 0f 1e fa          	endbr64
    e825:	48 89 c7             	mov    rdi,rax
    e828:	e8 b3 80 ff ff       	call   68e0 <__clang_call_terminate>
    e82d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      _M_deallocate_node_ptr(__n);
    e831:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    e835:	e8 26 00 00 00       	call   e860 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE22_M_deallocate_node_ptrEPSB_>
    }
    e83a:	48 83 c4 40          	add    rsp,0x40
    e83e:	5d                   	pop    rbp
    e83f:	c3                   	ret

000000000000e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>:
      { return __ebo_node_alloc::_M_get(); }
    e840:	f3 0f 1e fa          	endbr64
    e844:	55                   	push   rbp
    e845:	48 89 e5             	mov    rbp,rsp
    e848:	48 83 ec 10          	sub    rsp,0x10
    e84c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e850:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e854:	e8 c7 00 00 00       	call   e920 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EE6_M_getEv>
    e859:	48 83 c4 10          	add    rsp,0x10
    e85d:	5d                   	pop    rbp
    e85e:	c3                   	ret
    e85f:	90                   	nop

000000000000e860 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE22_M_deallocate_node_ptrEPSB_>:
    {
    e860:	f3 0f 1e fa          	endbr64
    e864:	55                   	push   rbp
    e865:	48 89 e5             	mov    rbp,rsp
    e868:	48 83 ec 50          	sub    rsp,0x50
    e86c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    e870:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    e874:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    e878:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
    e87c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    e880:	e8 fb 00 00 00       	call   e980 <_ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESB_Lb0EE10pointer_toERSB_>
    e885:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    e889:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
    e88d:	e8 ae ff ff ff       	call   e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    e892:	48 89 c1             	mov    rcx,rax
    e895:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    e899:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    e89d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    e8a1:	48 c7 45 d0 01 00 00 	mov    QWORD PTR [rbp-0x30],0x1
    e8a8:	00 
      { __a.deallocate(__p, __n); }
    e8a9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    e8ad:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    e8b1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    e8b5:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    e8b9:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    e8bd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    e8c1:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	__allocator_base<_Tp>::deallocate(__p, __n);
    e8c5:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e8c9:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e8cd:	e8 ce 00 00 00       	call   e9a0 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>
    }
    e8d2:	48 83 c4 50          	add    rsp,0x50
    e8d6:	5d                   	pop    rbp
    e8d7:	c3                   	ret
    e8d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e8df:	00 

000000000000e8e0 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEvPT_>:
    {
    e8e0:	f3 0f 1e fa          	endbr64
    e8e4:	55                   	push   rbp
    e8e5:	48 89 e5             	mov    rbp,rsp
    e8e8:	48 83 ec 10          	sub    rsp,0x10
    e8ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	__location->~_Tp();
    e8f0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e8f4:	e8 07 00 00 00       	call   e900 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmED2Ev>
    }
    e8f9:	48 83 c4 10          	add    rsp,0x10
    e8fd:	5d                   	pop    rbp
    e8fe:	c3                   	ret
    e8ff:	90                   	nop

000000000000e900 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmED2Ev>:
   *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
   *
   * @headerfile utility
   */
  template<typename _T1, typename _T2>
    struct pair
    e900:	f3 0f 1e fa          	endbr64
    e904:	55                   	push   rbp
    e905:	48 89 e5             	mov    rbp,rsp
    e908:	48 83 ec 10          	sub    rsp,0x10
    e90c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e910:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e914:	e8 37 78 ff ff       	call   6150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    e919:	48 83 c4 10          	add    rsp,0x10
    e91d:	5d                   	pop    rbp
    e91e:	c3                   	ret
    e91f:	90                   	nop

000000000000e920 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EE6_M_getEv>:
      _Tp& _M_get() { return static_cast<_Tp&>(*this); }
    e920:	f3 0f 1e fa          	endbr64
    e924:	55                   	push   rbp
    e925:	48 89 e5             	mov    rbp,rsp
    e928:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e92c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e930:	5d                   	pop    rbp
    e931:	c3                   	ret
    e932:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e939:	00 00 00 
    e93c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e940 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>:
        return static_cast<const void*>(&_M_storage);
      }

      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }
    e940:	f3 0f 1e fa          	endbr64
    e944:	55                   	push   rbp
    e945:	48 89 e5             	mov    rbp,rsp
    e948:	48 83 ec 10          	sub    rsp,0x10
    e94c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e950:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e954:	e8 07 00 00 00       	call   e960 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>
    e959:	48 83 c4 10          	add    rsp,0x10
    e95d:	5d                   	pop    rbp
    e95e:	c3                   	ret
    e95f:	90                   	nop

000000000000e960 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>:
      {
    e960:	f3 0f 1e fa          	endbr64
    e964:	55                   	push   rbp
    e965:	48 89 e5             	mov    rbp,rsp
    e968:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e96c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
        return static_cast<void*>(&_M_storage);
    e970:	5d                   	pop    rbp
    e971:	c3                   	ret
    e972:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e979:	00 00 00 
    e97c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e980 <_ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESB_Lb0EE10pointer_toERSB_>:
      { return std::addressof(__r); }
    e980:	f3 0f 1e fa          	endbr64
    e984:	55                   	push   rbp
    e985:	48 89 e5             	mov    rbp,rsp
    e988:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e98c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e990:	5d                   	pop    rbp
    e991:	c3                   	ret
    e992:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e999:	00 00 00 
    e99c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e9a0 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>:
      {
    e9a0:	f3 0f 1e fa          	endbr64
    e9a4:	55                   	push   rbp
    e9a5:	48 89 e5             	mov    rbp,rsp
    e9a8:	48 83 ec 20          	sub    rsp,0x20
    e9ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e9b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e9b4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e9b8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e9bc:	48 6b 75 e8 38       	imul   rsi,QWORD PTR [rbp-0x18],0x38
    e9c1:	e8 da 5b ff ff       	call   45a0 <_ZdlPvm@plt>
      }
    e9c6:	48 83 c4 20          	add    rsp,0x20
    e9ca:	5d                   	pop    rbp
    e9cb:	c3                   	ret
    e9cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e9d0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm>:
      {
    e9d0:	f3 0f 1e fa          	endbr64
    e9d4:	55                   	push   rbp
    e9d5:	48 89 e5             	mov    rbp,rsp
    e9d8:	48 83 ec 20          	sub    rsp,0x20
    e9dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e9e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e9e4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e9e8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e9ec:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	if (_M_uses_single_bucket(__bkts))
    e9f0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e9f4:	e8 27 00 00 00       	call   ea20 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSA_15_Hash_node_baseE>
    e9f9:	a8 01                	test   al,0x1
    e9fb:	75 02                	jne    e9ff <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x2f>
    e9fd:	eb 02                	jmp    ea01 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x31>
	  return;
    e9ff:	eb 11                	jmp    ea12 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x42>
    ea01:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
    ea05:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    ea09:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    ea0d:	e8 3e 00 00 00       	call   ea50 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm>
      }
    ea12:	48 83 c4 20          	add    rsp,0x20
    ea16:	5d                   	pop    rbp
    ea17:	c3                   	ret
    ea18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ea1f:	00 

000000000000ea20 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSA_15_Hash_node_baseE>:
      { return __builtin_expect(__bkts == &_M_single_bucket, false); }
    ea20:	f3 0f 1e fa          	endbr64
    ea24:	55                   	push   rbp
    ea25:	48 89 e5             	mov    rbp,rsp
    ea28:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ea2c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ea30:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ea34:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ea38:	48 83 c1 30          	add    rcx,0x30
    ea3c:	48 39 c8             	cmp    rax,rcx
    ea3f:	0f 94 c0             	sete   al
    ea42:	24 01                	and    al,0x1
    ea44:	5d                   	pop    rbp
    ea45:	c3                   	ret
    ea46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ea4d:	00 00 00 

000000000000ea50 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm>:
  template<typename _NodeAlloc>
    void
    _Hashtable_alloc<_NodeAlloc>::
    _M_deallocate_buckets(__buckets_ptr __bkts,
			  std::size_t __bkt_count)
    {
    ea50:	f3 0f 1e fa          	endbr64
    ea54:	55                   	push   rbp
    ea55:	48 89 e5             	mov    rbp,rsp
    ea58:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    ea5f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ea66:	00 00 
    ea68:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ea6c:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    ea70:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
    ea74:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    ea78:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ea7c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      typedef typename __buckets_alloc_traits::pointer _Ptr;
      auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__bkts);
    ea80:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    ea84:	e8 87 00 00 00       	call   eb10 <_ZNSt19__ptr_traits_ptr_toIPPNSt8__detail15_Hash_node_baseES2_Lb0EE10pointer_toERS2_>
    ea89:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    ea8d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      __buckets_alloc_type __alloc(_M_node_allocator());
    ea91:	e8 aa fd ff ff       	call   e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    ea96:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    ea9a:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
    ea9e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    eaa2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    eaa6:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      __buckets_alloc_traits::deallocate(__alloc, __ptr, __bkt_count);
    eaaa:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
    eaae:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    eab2:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    eab6:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    eaba:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    eabe:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    eac2:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    eac6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    eaca:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    eace:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    ead2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ead6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    eada:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    eade:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    eae2:	e8 49 00 00 00       	call   eb30 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS2_m>
    }
    eae7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eaee:	00 00 
    eaf0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eaf4:	48 39 c8             	cmp    rax,rcx
    eaf7:	75 09                	jne    eb02 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm+0xb2>
    eaf9:	48 81 c4 80 00 00 00 	add    rsp,0x80
    eb00:	5d                   	pop    rbp
    eb01:	c3                   	ret
    eb02:	e8 c9 5a ff ff       	call   45d0 <__stack_chk_fail@plt>
    eb07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    eb0e:	00 00 

000000000000eb10 <_ZNSt19__ptr_traits_ptr_toIPPNSt8__detail15_Hash_node_baseES2_Lb0EE10pointer_toERS2_>:
    eb10:	f3 0f 1e fa          	endbr64
    eb14:	55                   	push   rbp
    eb15:	48 89 e5             	mov    rbp,rsp
    eb18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    eb1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eb20:	5d                   	pop    rbp
    eb21:	c3                   	ret
    eb22:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    eb29:	00 00 00 
    eb2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000eb30 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS2_m>:
      {
    eb30:	f3 0f 1e fa          	endbr64
    eb34:	55                   	push   rbp
    eb35:	48 89 e5             	mov    rbp,rsp
    eb38:	48 83 ec 20          	sub    rsp,0x20
    eb3c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    eb40:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    eb44:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    eb48:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    eb4c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    eb50:	48 c1 e6 03          	shl    rsi,0x3
    eb54:	e8 47 5a ff ff       	call   45a0 <_ZdlPvm@plt>
      }
    eb59:	48 83 c4 20          	add    rsp,0x20
    eb5d:	5d                   	pop    rbp
    eb5e:	c3                   	ret
    eb5f:	90                   	nop

000000000000eb60 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EED2Ev>:
    struct _Hashtable_ebo_helper;
    eb60:	f3 0f 1e fa          	endbr64
    eb64:	55                   	push   rbp
    eb65:	48 89 e5             	mov    rbp,rsp
    eb68:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    eb6c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    eb70:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eb74:	5d                   	pop    rbp
    eb75:	c3                   	ret
    eb76:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    eb7d:	00 00 00 

000000000000eb80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_>:
	{ return _M_emplace(__unique_keys{}, std::forward<_Args>(__args)...); }
    eb80:	f3 0f 1e fa          	endbr64
    eb84:	55                   	push   rbp
    eb85:	48 89 e5             	mov    rbp,rsp
    eb88:	48 83 ec 60          	sub    rsp,0x60
    eb8c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eb93:	00 00 
    eb95:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eb99:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    eb9d:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    eba1:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    eba5:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    eba9:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    ebad:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    ebb1:	e8 4a 00 00 00       	call   ec00 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_>
    ebb6:	88 55 e0             	mov    BYTE PTR [rbp-0x20],dl
    ebb9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ebbd:	8a 45 e0             	mov    al,BYTE PTR [rbp-0x20]
    ebc0:	88 45 f0             	mov    BYTE PTR [rbp-0x10],al
    ebc3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ebc7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ebcb:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    ebce:	88 45 af             	mov    BYTE PTR [rbp-0x51],al
    ebd1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ebd5:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    ebd9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ebe0:	00 00 
    ebe2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ebe6:	48 39 c8             	cmp    rax,rcx
    ebe9:	75 0d                	jne    ebf8 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_+0x78>
    ebeb:	8a 55 af             	mov    dl,BYTE PTR [rbp-0x51]
    ebee:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ebf2:	48 83 c4 60          	add    rsp,0x60
    ebf6:	5d                   	pop    rbp
    ebf7:	c3                   	ret
    ebf8:	e8 d3 59 ff ff       	call   45d0 <__stack_chk_fail@plt>
    ebfd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ec00 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_>:
      {
    ec00:	f3 0f 1e fa          	endbr64
    ec04:	55                   	push   rbp
    ec05:	48 89 e5             	mov    rbp,rsp
    ec08:	48 81 ec 30 01 00 00 	sub    rsp,0x130
    ec0f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ec16:	00 00 
    ec18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ec1c:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    ec20:	48 89 b5 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rsi
    ec27:	48 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdx
    ec2e:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    ec32:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
    ec39:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    ec40:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
    ec47:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ec4b:	e8 f0 02 00 00       	call   ef40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC2IJRS5_mEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_>
	const key_type& __k = _ExtractKey{}(__node._M_node->_M_v());
    ec50:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ec54:	48 83 c0 08          	add    rax,0x8
    ec58:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    ec5c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    ec60:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    ec64:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
      { return _M_storage._M_ptr(); }
    ec68:	e8 d3 fc ff ff       	call   e940 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    ec6d:	48 89 c6             	mov    rsi,rax
    ec70:	48 8d 7d d7          	lea    rdi,[rbp-0x29]
    ec74:	e8 17 03 00 00       	call   ef90 <_ZNKSt8__detail10_Select1stclIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSD_>
    ec79:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    ec80:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
	const size_type __size = size();
    ec87:	e8 24 03 00 00       	call   efb0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>
    ec8c:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
	if (__size <= __small_size_threshold())
    ec93:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    ec9a:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    eca1:	e8 2a 03 00 00       	call   efd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    eca6:	48 89 c1             	mov    rcx,rax
    eca9:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    ecb0:	48 39 c8             	cmp    rax,rcx
    ecb3:	0f 87 c7 00 00 00    	ja     ed80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x180>
    ecb9:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	    for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ecc0:	e8 cb fa ff ff       	call   e790 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    ecc5:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    eccc:	48 83 bd 58 ff ff ff 	cmp    QWORD PTR [rbp-0xa8],0x0
    ecd3:	00 
    ecd4:	0f 84 a4 00 00 00    	je     ed7e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x17e>
    ecda:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	      if (this->_M_key_equals(__k, *__it))
    ece1:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    ece8:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    ecef:	48 83 c2 08          	add    rdx,0x8
    ecf3:	e8 e8 02 00 00       	call   efe0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
    ecf8:	88 85 1f ff ff ff    	mov    BYTE PTR [rbp-0xe1],al
    ecfe:	eb 00                	jmp    ed00 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x100>
    ed00:	8a 85 1f ff ff ff    	mov    al,BYTE PTR [rbp-0xe1]
    ed06:	a8 01                	test   al,0x1
    ed08:	75 02                	jne    ed0c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x10c>
    ed0a:	eb 58                	jmp    ed64 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x164>
		return { iterator(__it), false };
    ed0c:	48 8b b5 58 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa8]
    ed13:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
    ed17:	e8 64 03 00 00       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    ed1c:	c6 45 c7 00          	mov    BYTE PTR [rbp-0x39],0x0
    ed20:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    ed24:	48 8d 75 c8          	lea    rsi,[rbp-0x38]
    ed28:	48 8d 55 c7          	lea    rdx,[rbp-0x39]
    ed2c:	e8 7f 03 00 00       	call   f0b0 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>
    ed31:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    ed38:	00 00 00 
    ed3b:	e9 8a 01 00 00       	jmp    eeca <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x2ca>
    ed40:	f3 0f 1e fa          	endbr64
    ed44:	48 89 c1             	mov    rcx,rax
      }
    ed47:	89 d0                	mov    eax,edx
    ed49:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    ed50:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
    ed56:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ed5a:	e8 01 06 00 00       	call   f360 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>
    ed5f:	e9 ab 01 00 00       	jmp    ef0f <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x30f>
	      if (this->_M_key_equals(__k, *__it))
    ed64:	eb 00                	jmp    ed66 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x166>
	    for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ed66:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ed6d:	e8 3e fa ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    ed72:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    ed79:	e9 4e ff ff ff       	jmp    eccc <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0xcc>
	  }
    ed7e:	eb 00                	jmp    ed80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x180>
    ed80:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	__hash_code __code = this->_M_hash_code(__k);
    ed87:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    ed8e:	e8 4d 03 00 00       	call   f0e0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>
    ed93:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    ed9a:	eb 00                	jmp    ed9c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x19c>
    ed9c:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    eda3:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    edaa:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
	size_type __bkt = _M_bucket_index(__code);
    edb1:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    edb8:	e8 53 03 00 00       	call   f110 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
    edbd:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    edc4:	eb 00                	jmp    edc6 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x1c6>
    edc6:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    edcd:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
	if (__size > __small_size_threshold())
    edd4:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    eddb:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    ede2:	e8 e9 01 00 00       	call   efd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    ede7:	48 89 c1             	mov    rcx,rax
    edea:	48 8b 85 00 ff ff ff 	mov    rax,QWORD PTR [rbp-0x100]
    edf1:	48 39 c8             	cmp    rax,rcx
    edf4:	76 75                	jbe    ee6b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x26b>
    edf6:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	  if (__node_ptr __p = _M_find_node(__bkt, __k, __code))
    edfd:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    ee04:	48 8b 95 68 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x98]
    ee0b:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
    ee12:	e8 29 03 00 00       	call   f140 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>
    ee17:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    ee1e:	eb 00                	jmp    ee20 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x220>
    ee20:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    ee27:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    ee2e:	48 83 bd 30 ff ff ff 	cmp    QWORD PTR [rbp-0xd0],0x0
    ee35:	00 
    ee36:	74 31                	je     ee69 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x269>
	    return { iterator(__p), false };
    ee38:	48 8b b5 30 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd0]
    ee3f:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    ee43:	e8 38 02 00 00       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    ee48:	c6 45 b7 00          	mov    BYTE PTR [rbp-0x49],0x0
    ee4c:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    ee50:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    ee54:	48 8d 55 b7          	lea    rdx,[rbp-0x49]
    ee58:	e8 53 02 00 00       	call   f0b0 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>
    ee5d:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    ee64:	00 00 00 
    ee67:	eb 61                	jmp    eeca <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x2ca>
	  if (__node_ptr __p = _M_find_node(__bkt, __k, __code))
    ee69:	eb 00                	jmp    ee6b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x26b>
    ee6b:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	auto __pos = _M_insert_unique_node(__bkt, __code, __node._M_node);
    ee72:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    ee79:	48 8b 95 40 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc0]
    ee80:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    ee84:	41 b8 01 00 00 00    	mov    r8d,0x1
    ee8a:	e8 11 03 00 00       	call   f1a0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm>
    ee8f:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    ee96:	eb 00                	jmp    ee98 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x298>
    ee98:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    ee9f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
	__node._M_node = nullptr;
    eea3:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    eeaa:	00 
	return { __pos, true };
    eeab:	c6 45 a7 01          	mov    BYTE PTR [rbp-0x59],0x1
    eeaf:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    eeb3:	48 8d 75 a8          	lea    rsi,[rbp-0x58]
    eeb7:	48 8d 55 a7          	lea    rdx,[rbp-0x59]
    eebb:	e8 70 04 00 00       	call   f330 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2IRSA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISE_SF_EEEEOT_OT0_>
    eec0:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    eec7:	00 00 00 
    eeca:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
      }
    eece:	e8 8d 04 00 00       	call   f360 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>
    eed3:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    eed6:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
    eedc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eee0:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    eee7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eeee:	00 00 
    eef0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eef4:	48 39 c8             	cmp    rax,rcx
    eef7:	75 42                	jne    ef3b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x33b>
    eef9:	8a 95 e7 fe ff ff    	mov    dl,BYTE PTR [rbp-0x119]
    eeff:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    ef06:	48 81 c4 30 01 00 00 	add    rsp,0x130
    ef0d:	5d                   	pop    rbp
    ef0e:	c3                   	ret
    ef0f:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    ef16:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    ef1d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ef24:	00 00 
    ef26:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ef2a:	48 39 c8             	cmp    rax,rcx
    ef2d:	75 0c                	jne    ef3b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x33b>
    ef2f:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    ef36:	e8 45 55 ff ff       	call   4480 <_Unwind_Resume@plt>
    ef3b:	e8 90 56 ff ff       	call   45d0 <__stack_chk_fail@plt>

000000000000ef40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC2IJRS5_mEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_>:
	  { }
    ef40:	f3 0f 1e fa          	endbr64
    ef44:	55                   	push   rbp
    ef45:	48 89 e5             	mov    rbp,rsp
    ef48:	48 83 ec 30          	sub    rsp,0x30
    ef4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ef50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ef54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    ef58:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    ef5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ef60:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  : _M_h(__h),
    ef64:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ef68:	48 89 08             	mov    QWORD PTR [rax],rcx
	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
    ef6b:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    ef6f:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    ef73:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    ef77:	e8 34 04 00 00       	call   f3b0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_>
    ef7c:	48 89 c1             	mov    rcx,rax
    ef7f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ef83:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  { }
    ef87:	48 83 c4 30          	add    rsp,0x30
    ef8b:	5d                   	pop    rbp
    ef8c:	c3                   	ret
    ef8d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ef90 <_ZNKSt8__detail10_Select1stclIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSD_>:
      { return std::forward<_Tp>(__x).first; }
    ef90:	f3 0f 1e fa          	endbr64
    ef94:	55                   	push   rbp
    ef95:	48 89 e5             	mov    rbp,rsp
    ef98:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ef9c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    efa0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    efa4:	5d                   	pop    rbp
    efa5:	c3                   	ret
    efa6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    efad:	00 00 00 

000000000000efb0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>:
      { return _M_element_count; }
    efb0:	f3 0f 1e fa          	endbr64
    efb4:	55                   	push   rbp
    efb5:	48 89 e5             	mov    rbp,rsp
    efb8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    efbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    efc0:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    efc4:	5d                   	pop    rbp
    efc5:	c3                   	ret
    efc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    efcd:	00 00 00 

000000000000efd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>:
      {
    efd0:	f3 0f 1e fa          	endbr64
    efd4:	55                   	push   rbp
    efd5:	48 89 e5             	mov    rbp,rsp
	  __detail::_Hashtable_hash_traits<_Hash>::__small_size_threshold();
    efd8:	e8 a3 06 00 00       	call   f680 <_ZNSt8__detail22_Hashtable_hash_traitsISt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE22__small_size_thresholdEv>
	return
    efdd:	5d                   	pop    rbp
    efde:	c3                   	ret
    efdf:	90                   	nop

000000000000efe0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>:
      {
    efe0:	f3 0f 1e fa          	endbr64
    efe4:	55                   	push   rbp
    efe5:	48 89 e5             	mov    rbp,rsp
    efe8:	48 83 ec 50          	sub    rsp,0x50
    efec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eff3:	00 00 
    eff5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eff9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    effd:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    f001:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    f005:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	return _M_eq()(__k, _ExtractKey{}(__n._M_v()));
    f009:	e8 82 06 00 00       	call   f690 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv>
    f00e:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    f012:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f016:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    f01a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f01e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    f022:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f026:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    f02a:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
      { return _M_storage._M_ptr(); }
    f02e:	e8 ed 06 00 00       	call   f720 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    f033:	48 89 c6             	mov    rsi,rax
    f036:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
	return _M_eq()(__k, _ExtractKey{}(__n._M_v()));
    f03a:	e8 a1 06 00 00       	call   f6e0 <_ZNKSt8__detail10_Select1stclIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSE_>
    f03f:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    f043:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    f047:	48 89 c2             	mov    rdx,rax
    f04a:	e8 61 06 00 00       	call   f6b0 <_ZNKSt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f04f:	88 45 c7             	mov    BYTE PTR [rbp-0x39],al
    f052:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f059:	00 00 
    f05b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f05f:	48 39 c8             	cmp    rax,rcx
    f062:	75 0b                	jne    f06f <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE+0x8f>
    f064:	8a 45 c7             	mov    al,BYTE PTR [rbp-0x39]
    f067:	24 01                	and    al,0x1
    f069:	48 83 c4 50          	add    rsp,0x50
    f06d:	5d                   	pop    rbp
    f06e:	c3                   	ret
    f06f:	e8 5c 55 ff ff       	call   45d0 <__stack_chk_fail@plt>
    f074:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f07b:	00 00 00 
    f07e:	66 90                	xchg   ax,ax

000000000000f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>:
      : __base_type(__p) { }
    f080:	f3 0f 1e fa          	endbr64
    f084:	55                   	push   rbp
    f085:	48 89 e5             	mov    rbp,rsp
    f088:	48 83 ec 10          	sub    rsp,0x10
    f08c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f090:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f094:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f098:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f09c:	e8 bf 06 00 00       	call   f760 <_ZNSt8__detail19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    f0a1:	48 83 c4 10          	add    rsp,0x10
    f0a5:	5d                   	pop    rbp
    f0a6:	c3                   	ret
    f0a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f0ae:	00 00 

000000000000f0b0 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>:
	requires (_S_constructible<_U1, _U2>()) && (!_S_dangles<_U1, _U2>())
	constexpr explicit(!_S_convertible<_U1, _U2>())
	pair(_U1&& __x, _U2&& __y)
	noexcept(_S_nothrow_constructible<_U1, _U2>())
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
	{ }
    f0b0:	f3 0f 1e fa          	endbr64
    f0b4:	55                   	push   rbp
    f0b5:	48 89 e5             	mov    rbp,rsp
    f0b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f0bc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f0c0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f0c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f0c8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f0cc:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f0cf:	48 89 08             	mov    QWORD PTR [rax],rcx
    f0d2:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f0d6:	8a 09                	mov    cl,BYTE PTR [rcx]
    f0d8:	80 e1 01             	and    cl,0x1
    f0db:	88 48 08             	mov    BYTE PTR [rax+0x8],cl
	{ }
    f0de:	5d                   	pop    rbp
    f0df:	c3                   	ret

000000000000f0e0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>:
      {
    f0e0:	f3 0f 1e fa          	endbr64
    f0e4:	55                   	push   rbp
    f0e5:	48 89 e5             	mov    rbp,rsp
    f0e8:	48 83 ec 10          	sub    rsp,0x10
    f0ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f0f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f0f4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return _M_hash()(__k);
    f0f8:	e8 83 06 00 00       	call   f780 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv>
    f0fd:	48 89 c7             	mov    rdi,rax
    f100:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f104:	e8 97 06 00 00       	call   f7a0 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_>
    f109:	48 83 c4 10          	add    rsp,0x10
    f10d:	5d                   	pop    rbp
    f10e:	c3                   	ret
    f10f:	90                   	nop

000000000000f110 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>:
      { return __hash_code_base::_M_bucket_index(__c, _M_bucket_count); }
    f110:	f3 0f 1e fa          	endbr64
    f114:	55                   	push   rbp
    f115:	48 89 e5             	mov    rbp,rsp
    f118:	48 83 ec 10          	sub    rsp,0x10
    f11c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f120:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f124:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f128:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f12c:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    f130:	e8 1b 07 00 00       	call   f850 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm>
    f135:	48 83 c4 10          	add    rsp,0x10
    f139:	5d                   	pop    rbp
    f13a:	c3                   	ret
    f13b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f140 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>:
      {
    f140:	f3 0f 1e fa          	endbr64
    f144:	55                   	push   rbp
    f145:	48 89 e5             	mov    rbp,rsp
    f148:	48 83 ec 30          	sub    rsp,0x30
    f14c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f150:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f154:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f158:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f15c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	__node_base_ptr __before_n = _M_find_before_node(__bkt, __key, __c);
    f160:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    f164:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f168:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    f16c:	e8 6f 07 00 00       	call   f8e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m>
    f171:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	if (__before_n)
    f175:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    f17a:	74 0d                	je     f189 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m+0x49>
	  return static_cast<__node_ptr>(__before_n->_M_nxt);
    f17c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f180:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f183:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f187:	eb 08                	jmp    f191 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m+0x51>
	return nullptr;
    f189:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f190:	00 
      }
    f191:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f195:	48 83 c4 30          	add    rsp,0x30
    f199:	5d                   	pop    rbp
    f19a:	c3                   	ret
    f19b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f1a0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm>:
    {
    f1a0:	f3 0f 1e fa          	endbr64
    f1a4:	55                   	push   rbp
    f1a5:	48 89 e5             	mov    rbp,rsp
    f1a8:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
    f1af:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f1b6:	00 00 
    f1b8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f1bc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    f1c0:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    f1c4:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    f1c8:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    f1cc:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
    f1d0:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    f1d4:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
      __rehash_guard_t __rehash_guard(_M_rehash_policy);
    f1d8:	48 83 c6 20          	add    rsi,0x20
    f1dc:	48 89 75 88          	mov    QWORD PTR [rbp-0x78],rsi
    f1e0:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    f1e4:	e8 f7 08 00 00       	call   fae0 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEEC2ERS1_>
    f1e9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    f1ed:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
    f1f1:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    f1f5:	48 8b 50 18          	mov    rdx,QWORD PTR [rax+0x18]
					  __n_elt);
    f1f9:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
    f1fd:	e8 7e 54 ff ff       	call   4680 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@plt>
    f202:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    f206:	88 45 9a             	mov    BYTE PTR [rbp-0x66],al
    f209:	eb 00                	jmp    f20b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x6b>
    f20b:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    f20f:	8a 4d 9a             	mov    cl,BYTE PTR [rbp-0x66]
    f212:	88 4d a8             	mov    BYTE PTR [rbp-0x58],cl
    f215:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      if (__do_rehash.first)
    f219:	f6 45 a8 01          	test   BYTE PTR [rbp-0x58],0x1
    f21d:	74 50                	je     f26f <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xcf>
    f21f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  _M_rehash(__do_rehash.second, true_type{});
    f223:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    f227:	e8 f4 08 00 00       	call   fb20 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE>
    f22c:	eb 00                	jmp    f22e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x8e>
    f22e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  __bkt = _M_bucket_index(__code);
    f232:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    f236:	e8 d5 fe ff ff       	call   f110 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
    f23b:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    f242:	eb 00                	jmp    f244 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xa4>
    f244:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f24b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	}
    f24f:	eb 1e                	jmp    f26f <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xcf>
    f251:	f3 0f 1e fa          	endbr64
    f255:	48 89 c1             	mov    rcx,rax
    }
    f258:	89 d0                	mov    eax,edx
    f25a:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    f25e:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    f261:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    f265:	e8 f6 0a 00 00       	call   fd60 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>
    f26a:	e9 84 00 00 00       	jmp    f2f3 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x153>
    f26f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
      __rehash_guard._M_guarded_obj = nullptr;
    f273:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    f27a:	00 
      this->_M_store_code(*__node, __code);
    f27b:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    f27f:	48 83 c6 30          	add    rsi,0x30
    f283:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    f287:	e8 c4 09 00 00       	call   fc50 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeERNS_21_Hash_node_code_cacheILb1EEEm>
    f28c:	eb 00                	jmp    f28e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xee>
    f28e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
      _M_insert_bucket_begin(__bkt, __node);
    f292:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    f296:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f29a:	e8 e1 09 00 00       	call   fc80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE>
    f29f:	eb 00                	jmp    f2a1 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x101>
    f2a1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
      ++_M_element_count;
    f2a5:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
    f2a9:	48 ff c1             	inc    rcx
    f2ac:	48 89 48 18          	mov    QWORD PTR [rax+0x18],rcx
      return iterator(__node);
    f2b0:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    f2b4:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    f2b8:	e8 c3 fd ff ff       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    f2bd:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    }
    f2c1:	e8 9a 0a 00 00       	call   fd60 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>
    f2c6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f2ca:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    f2d1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f2d8:	00 00 
    f2da:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f2de:	48 39 c8             	cmp    rax,rcx
    f2e1:	75 39                	jne    f31c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x17c>
    f2e3:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    f2ea:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    f2f1:	5d                   	pop    rbp
    f2f2:	c3                   	ret
    f2f3:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    f2f7:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    f2fe:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f305:	00 00 
    f307:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f30b:	48 39 c8             	cmp    rax,rcx
    f30e:	75 0c                	jne    f31c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x17c>
    f310:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    f317:	e8 64 51 ff ff       	call   4480 <_Unwind_Resume@plt>
    f31c:	e8 af 52 ff ff       	call   45d0 <__stack_chk_fail@plt>
    f321:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f328:	00 00 00 
    f32b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f330 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2IRSA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISE_SF_EEEEOT_OT0_>:
    f330:	f3 0f 1e fa          	endbr64
    f334:	55                   	push   rbp
    f335:	48 89 e5             	mov    rbp,rsp
    f338:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f33c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f340:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f344:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f348:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f34c:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f34f:	48 89 08             	mov    QWORD PTR [rax],rcx
    f352:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f356:	8a 09                	mov    cl,BYTE PTR [rcx]
    f358:	80 e1 01             	and    cl,0x1
    f35b:	88 48 08             	mov    BYTE PTR [rax+0x8],cl
	{ }
    f35e:	5d                   	pop    rbp
    f35f:	c3                   	ret

000000000000f360 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>:
	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
    f360:	f3 0f 1e fa          	endbr64
    f364:	55                   	push   rbp
    f365:	48 89 e5             	mov    rbp,rsp
    f368:	48 83 ec 10          	sub    rsp,0x10
    f36c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f370:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f374:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    f378:	48 83 78 08 00       	cmp    QWORD PTR [rax+0x8],0x0
    f37d:	74 14                	je     f393 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x33>
    f37f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f383:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    f386:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    f38a:	e8 41 f4 ff ff       	call   e7d0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>
    f38f:	eb 00                	jmp    f391 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x31>
    f391:	eb 00                	jmp    f393 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x33>
    f393:	48 83 c4 10          	add    rsp,0x10
    f397:	5d                   	pop    rbp
    f398:	c3                   	ret
    f399:	f3 0f 1e fa          	endbr64
    f39d:	48 89 c7             	mov    rdi,rax
    f3a0:	e8 3b 75 ff ff       	call   68e0 <__clang_call_terminate>
    f3a5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f3ac:	00 00 00 
    f3af:	90                   	nop

000000000000f3b0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_>:
      {
    f3b0:	f3 0f 1e fa          	endbr64
    f3b4:	55                   	push   rbp
    f3b5:	48 89 e5             	mov    rbp,rsp
    f3b8:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    f3bf:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    f3c3:	48 89 b5 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rsi
    f3ca:	48 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdx
    f3d1:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	auto& __alloc = _M_node_allocator();
    f3d5:	e8 66 f4 ff ff       	call   e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    f3da:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
	auto __nptr = __node_alloc_traits::allocate(__alloc, 1);
    f3e1:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    f3e8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f3ec:	48 c7 45 c0 01 00 00 	mov    QWORD PTR [rbp-0x40],0x1
    f3f3:	00 
      { return __a.allocate(__n); }
    f3f4:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    f3f8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    f3fc:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    f400:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    f404:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return __allocator_base<_Tp>::allocate(__n, 0);
    f408:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f40c:	31 c0                	xor    eax,eax
    f40e:	89 c2                	mov    edx,eax
    f410:	e8 8b 01 00 00       	call   f5a0 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv>
    f415:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
	__node_ptr __n = std::__to_address(__nptr);
    f41c:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    f423:	e8 38 01 00 00       	call   f560 <_ZSt12__to_addressINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEPT_SD_>
    f428:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
	    ::new ((void*)__n) __node_type;
    f42f:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    f436:	e8 45 01 00 00       	call   f580 <_ZNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2Ev>
	    __node_alloc_traits::construct(__alloc, __n->_M_valptr(),
    f43b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    f442:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    f449:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    f450:	48 83 c0 08          	add    rax,0x8
    f454:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    f458:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
      { return _M_storage._M_ptr(); }
    f45c:	e8 df f4 ff ff       	call   e940 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    f461:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    f468:	48 89 c2             	mov    rdx,rax
					   std::forward<_Args>(__args)...);
    f46b:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    f472:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    f479:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f47d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f481:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f485:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    f489:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    f48d:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    f491:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    f495:	e8 66 01 00 00       	call   f600 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEJRS6_mEEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPSB_DpOSC_>
    f49a:	eb 00                	jmp    f49c <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0xec>
	}
    f49c:	eb 00                	jmp    f49e <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0xee>
	    return __n;
    f49e:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    f4a5:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    f4ac:	5d                   	pop    rbp
    f4ad:	c3                   	ret
    f4ae:	f3 0f 1e fa          	endbr64
    f4b2:	48 89 c1             	mov    rcx,rax
      }
    f4b5:	89 d0                	mov    eax,edx
    f4b7:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    f4be:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
	  }
    f4c4:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    f4cb:	e8 f0 4f ff ff       	call   44c0 <__cxa_begin_catch@plt>
	    __node_alloc_traits::deallocate(__alloc, __nptr, 1);
    f4d0:	48 8b 8d 68 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x98]
    f4d7:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    f4de:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    f4e2:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    f4e6:	48 c7 45 90 01 00 00 	mov    QWORD PTR [rbp-0x70],0x1
    f4ed:	00 
      { __a.deallocate(__p, __n); }
    f4ee:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    f4f2:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    f4f6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    f4fa:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    f4fe:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    f502:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    f506:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	__allocator_base<_Tp>::deallocate(__p, __n);
    f50a:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    f50e:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    f512:	e8 89 f4 ff ff       	call   e9a0 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>
    f517:	eb 00                	jmp    f519 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x169>
	    __throw_exception_again;
    f519:	e8 e2 51 ff ff       	call   4700 <__cxa_rethrow@plt>
    f51e:	eb 37                	jmp    f557 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x1a7>
    f520:	f3 0f 1e fa          	endbr64
    f524:	48 89 c1             	mov    rcx,rax
      }
    f527:	89 d0                	mov    eax,edx
    f529:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    f530:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
	  }
    f536:	e8 95 52 ff ff       	call   47d0 <__cxa_end_catch@plt>
    f53b:	eb 00                	jmp    f53d <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x18d>
    f53d:	eb 00                	jmp    f53f <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x18f>
    f53f:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    f546:	e8 35 4f ff ff       	call   4480 <_Unwind_Resume@plt>
    f54b:	f3 0f 1e fa          	endbr64
    f54f:	48 89 c7             	mov    rdi,rax
    f552:	e8 89 73 ff ff       	call   68e0 <__clang_call_terminate>
    f557:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f55e:	00 00 

000000000000f560 <_ZSt12__to_addressINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEPT_SD_>:
    {
    f560:	f3 0f 1e fa          	endbr64
    f564:	55                   	push   rbp
    f565:	48 89 e5             	mov    rbp,rsp
    f568:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      return __ptr;
    f56c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f570:	5d                   	pop    rbp
    f571:	c3                   	ret
    f572:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f579:	00 00 00 
    f57c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f580 <_ZNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2Ev>:
    struct _Hash_node
    f580:	f3 0f 1e fa          	endbr64
    f584:	55                   	push   rbp
    f585:	48 89 e5             	mov    rbp,rsp
    f588:	48 83 ec 10          	sub    rsp,0x10
    f58c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f590:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f594:	e8 b7 ee ff ff       	call   e450 <_ZNSt8__detail15_Hash_node_baseC2Ev>
    f599:	48 83 c4 10          	add    rsp,0x10
    f59d:	5d                   	pop    rbp
    f59e:	c3                   	ret
    f59f:	90                   	nop

000000000000f5a0 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv>:
      {
    f5a0:	f3 0f 1e fa          	endbr64
    f5a4:	55                   	push   rbp
    f5a5:	48 89 e5             	mov    rbp,rsp
    f5a8:	48 83 ec 20          	sub    rsp,0x20
    f5ac:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f5b0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f5b4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f5b8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f5bc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f5c0:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    f5c4:	48 b9 49 92 24 49 92 	movabs rcx,0x249249249249249
    f5cb:	24 49 02 
    f5ce:	48 39 c8             	cmp    rax,rcx
    f5d1:	76 1a                	jbe    f5ed <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f5d3:	48 b8 92 24 49 92 24 	movabs rax,0x492492492492492
    f5da:	49 92 04 
    f5dd:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    f5e1:	76 05                	jbe    f5e8 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    f5e3:	e8 68 4f ff ff       	call   4550 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f5e8:	e8 c3 4e ff ff       	call   44b0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f5ed:	48 6b 7d e8 38       	imul   rdi,QWORD PTR [rbp-0x18],0x38
    f5f2:	e8 99 4f ff ff       	call   4590 <_Znwm@plt>
    f5f7:	48 83 c4 20          	add    rsp,0x20
    f5fb:	5d                   	pop    rbp
    f5fc:	c3                   	ret
    f5fd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f600 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEJRS6_mEEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPSB_DpOSC_>:
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    f600:	f3 0f 1e fa          	endbr64
    f604:	55                   	push   rbp
    f605:	48 89 e5             	mov    rbp,rsp
    f608:	48 83 ec 20          	sub    rsp,0x20
    f60c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f610:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f614:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f618:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f61c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    f620:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f624:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    f628:	e8 13 00 00 00       	call   f640 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEC2IRS5_mQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISA_SB_EEEEOT_OT0_>
    f62d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f631:	48 83 c4 20          	add    rsp,0x20
    f635:	5d                   	pop    rbp
    f636:	c3                   	ret
    f637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f63e:	00 00 

000000000000f640 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEC2IRS5_mQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISA_SB_EEEEOT_OT0_>:
    f640:	f3 0f 1e fa          	endbr64
    f644:	55                   	push   rbp
    f645:	48 89 e5             	mov    rbp,rsp
    f648:	48 83 ec 20          	sub    rsp,0x20
    f64c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f650:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f654:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f658:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f65c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f660:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f664:	e8 a7 68 ff ff       	call   5f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    f669:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f66d:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f671:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f674:	48 89 48 20          	mov    QWORD PTR [rax+0x20],rcx
	{ }
    f678:	48 83 c4 20          	add    rsp,0x20
    f67c:	5d                   	pop    rbp
    f67d:	c3                   	ret
    f67e:	66 90                	xchg   ax,ax

000000000000f680 <_ZNSt8__detail22_Hashtable_hash_traitsISt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE22__small_size_thresholdEv>:
      { return std::__is_fast_hash<_Hash>::value ? 0 : 20; }
    f680:	f3 0f 1e fa          	endbr64
    f684:	55                   	push   rbp
    f685:	48 89 e5             	mov    rbp,rsp
    f688:	b8 14 00 00 00       	mov    eax,0x14
    f68d:	5d                   	pop    rbp
    f68e:	c3                   	ret
    f68f:	90                   	nop

000000000000f690 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv>:
      _M_eq() const { return _EqualEBO::_M_cget(); }
    f690:	f3 0f 1e fa          	endbr64
    f694:	55                   	push   rbp
    f695:	48 89 e5             	mov    rbp,rsp
    f698:	48 83 ec 10          	sub    rsp,0x10
    f69c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6a0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f6a4:	e8 57 00 00 00       	call   f700 <_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>
    f6a9:	48 83 c4 10          	add    rsp,0x10
    f6ad:	5d                   	pop    rbp
    f6ae:	c3                   	ret
    f6af:	90                   	nop

000000000000f6b0 <_ZNKSt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      { return __x == __y; }
    f6b0:	f3 0f 1e fa          	endbr64
    f6b4:	55                   	push   rbp
    f6b5:	48 89 e5             	mov    rbp,rsp
    f6b8:	48 83 ec 20          	sub    rsp,0x20
    f6bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f6c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f6c8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f6cc:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    f6d0:	e8 4b 71 ff ff       	call   6820 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    f6d5:	24 01                	and    al,0x1
    f6d7:	48 83 c4 20          	add    rsp,0x20
    f6db:	5d                   	pop    rbp
    f6dc:	c3                   	ret
    f6dd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f6e0 <_ZNKSt8__detail10_Select1stclIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSE_>:
      { return std::forward<_Tp>(__x).first; }
    f6e0:	f3 0f 1e fa          	endbr64
    f6e4:	55                   	push   rbp
    f6e5:	48 89 e5             	mov    rbp,rsp
    f6e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6ec:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f6f0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f6f4:	5d                   	pop    rbp
    f6f5:	c3                   	ret
    f6f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f6fd:	00 00 00 

000000000000f700 <_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>:
      const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
    f700:	f3 0f 1e fa          	endbr64
    f704:	55                   	push   rbp
    f705:	48 89 e5             	mov    rbp,rsp
    f708:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f70c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f710:	5d                   	pop    rbp
    f711:	c3                   	ret
    f712:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f719:	00 00 00 
    f71c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f720 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
      { return static_cast<const _Tp*>(_M_addr()); }
    f720:	f3 0f 1e fa          	endbr64
    f724:	55                   	push   rbp
    f725:	48 89 e5             	mov    rbp,rsp
    f728:	48 83 ec 10          	sub    rsp,0x10
    f72c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f730:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f734:	e8 07 00 00 00       	call   f740 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>
    f739:	48 83 c4 10          	add    rsp,0x10
    f73d:	5d                   	pop    rbp
    f73e:	c3                   	ret
    f73f:	90                   	nop

000000000000f740 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>:
      {
    f740:	f3 0f 1e fa          	endbr64
    f744:	55                   	push   rbp
    f745:	48 89 e5             	mov    rbp,rsp
    f748:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f74c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
        return static_cast<const void*>(&_M_storage);
    f750:	5d                   	pop    rbp
    f751:	c3                   	ret
    f752:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f759:	00 00 00 
    f75c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f760 <_ZNSt8__detail19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>:
      : _M_cur(__p) { }
    f760:	f3 0f 1e fa          	endbr64
    f764:	55                   	push   rbp
    f765:	48 89 e5             	mov    rbp,rsp
    f768:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f76c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f770:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f774:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f778:	48 89 08             	mov    QWORD PTR [rax],rcx
    f77b:	5d                   	pop    rbp
    f77c:	c3                   	ret
    f77d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f780 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv>:
      _M_hash() const { return __ebo_hash::_M_cget(); }
    f780:	f3 0f 1e fa          	endbr64
    f784:	55                   	push   rbp
    f785:	48 89 e5             	mov    rbp,rsp
    f788:	48 83 ec 10          	sub    rsp,0x10
    f78c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f790:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f794:	e8 67 00 00 00       	call   f800 <_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>
    f799:	48 83 c4 10          	add    rsp,0x10
    f79d:	5d                   	pop    rbp
    f79e:	c3                   	ret
    f79f:	90                   	nop

000000000000f7a0 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_>:
    : public __hash_base<size_t, _StrT>
    {
      [[__nodiscard__]]
      size_t
      operator()(const _StrT& __s) const noexcept
      { return _Hash_impl::hash(__s.data(), __s.length() * sizeof(_CharT)); }
    f7a0:	f3 0f 1e fa          	endbr64
    f7a4:	55                   	push   rbp
    f7a5:	48 89 e5             	mov    rbp,rsp
    f7a8:	48 83 ec 20          	sub    rsp,0x20
    f7ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f7b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f7b4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f7b8:	e8 63 98 ff ff       	call   9020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    f7bd:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    f7c1:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f7c5:	e8 b6 68 ff ff       	call   6080 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    f7ca:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    f7ce:	48 89 c6             	mov    rsi,rax
    f7d1:	ba 07 69 0f c7       	mov    edx,0xc70f6907
    f7d6:	e8 45 00 00 00       	call   f820 <_ZNSt10_Hash_impl4hashEPKvmm>
    f7db:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    f7df:	eb 00                	jmp    f7e1 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_+0x41>
    f7e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f7e5:	48 83 c4 20          	add    rsp,0x20
    f7e9:	5d                   	pop    rbp
    f7ea:	c3                   	ret
    f7eb:	f3 0f 1e fa          	endbr64
    f7ef:	48 89 c7             	mov    rdi,rax
    f7f2:	e8 e9 70 ff ff       	call   68e0 <__clang_call_terminate>
    f7f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f7fe:	00 00 

000000000000f800 <_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>:
      const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
    f800:	f3 0f 1e fa          	endbr64
    f804:	55                   	push   rbp
    f805:	48 89 e5             	mov    rbp,rsp
    f808:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f80c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f810:	5d                   	pop    rbp
    f811:	c3                   	ret
    f812:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f819:	00 00 00 
    f81c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f820 <_ZNSt10_Hash_impl4hashEPKvmm>:
  struct _Hash_impl
  {
    static size_t
    hash(const void* __ptr, size_t __clength,
	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
    { return _Hash_bytes(__ptr, __clength, __seed); }
    f820:	f3 0f 1e fa          	endbr64
    f824:	55                   	push   rbp
    f825:	48 89 e5             	mov    rbp,rsp
    f828:	48 83 ec 20          	sub    rsp,0x20
    f82c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f830:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f834:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f838:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f83c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f840:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    f844:	e8 27 4c ff ff       	call   4470 <_ZSt11_Hash_bytesPKvmm@plt>
    f849:	48 83 c4 20          	add    rsp,0x20
    f84d:	5d                   	pop    rbp
    f84e:	c3                   	ret
    f84f:	90                   	nop

000000000000f850 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm>:
      { return _RangeHash{}(__c, __bkt_count); }
    f850:	f3 0f 1e fa          	endbr64
    f854:	55                   	push   rbp
    f855:	48 89 e5             	mov    rbp,rsp
    f858:	48 83 ec 30          	sub    rsp,0x30
    f85c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f863:	00 00 
    f865:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f869:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    f86d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    f871:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    f875:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f879:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    f87d:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    f881:	e8 2a 00 00 00       	call   f8b0 <_ZNKSt8__detail18_Mod_range_hashingclEmm>
    f886:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    f88a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f891:	00 00 
    f893:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f897:	48 39 c8             	cmp    rax,rcx
    f89a:	75 0a                	jne    f8a6 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm+0x56>
    f89c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f8a0:	48 83 c4 30          	add    rsp,0x30
    f8a4:	5d                   	pop    rbp
    f8a5:	c3                   	ret
    f8a6:	e8 25 4d ff ff       	call   45d0 <__stack_chk_fail@plt>
    f8ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f8b0 <_ZNKSt8__detail18_Mod_range_hashingclEmm>:
    { return __num % __den; }
    f8b0:	f3 0f 1e fa          	endbr64
    f8b4:	55                   	push   rbp
    f8b5:	48 89 e5             	mov    rbp,rsp
    f8b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f8bc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f8c0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f8c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f8c8:	31 c9                	xor    ecx,ecx
    f8ca:	89 ca                	mov    edx,ecx
    f8cc:	48 f7 75 e8          	div    QWORD PTR [rbp-0x18]
    f8d0:	48 89 d0             	mov    rax,rdx
    f8d3:	5d                   	pop    rbp
    f8d4:	c3                   	ret
    f8d5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f8dc:	00 00 00 
    f8df:	90                   	nop

000000000000f8e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m>:
    {
    f8e0:	f3 0f 1e fa          	endbr64
    f8e4:	55                   	push   rbp
    f8e5:	48 89 e5             	mov    rbp,rsp
    f8e8:	48 83 ec 40          	sub    rsp,0x40
    f8ec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f8f0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f8f4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f8f8:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f8fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f900:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      __node_base_ptr __prev_p = _M_buckets[__bkt];
    f904:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f907:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f90b:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    f90f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      if (!__prev_p)
    f913:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    f918:	75 0a                	jne    f924 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x44>
	return nullptr;
    f91a:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f921:	00 
    f922:	eb 7e                	jmp    f9a2 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xc2>
      for (__node_ptr __p = static_cast<__node_ptr>(__prev_p->_M_nxt);;
    f924:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f928:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f92b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f92f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  if (this->_M_equals(__k, __code, *__p))
    f933:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f937:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    f93b:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    f93f:	48 83 c1 08          	add    rcx,0x8
    f943:	e8 68 00 00 00       	call   f9b0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE>
    f948:	a8 01                	test   al,0x1
    f94a:	75 02                	jne    f94e <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x6e>
    f94c:	eb 0a                	jmp    f958 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x78>
	    return __prev_p;
    f94e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f952:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f956:	eb 4a                	jmp    f9a2 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xc2>
	  if (!__p->_M_nxt || _M_bucket_index(*__p->_M_next()) != __bkt)
    f958:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f95c:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    f960:	74 1f                	je     f981 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xa1>
    f962:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    f966:	e8 45 ee ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    f96b:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    f96f:	48 89 c6             	mov    rsi,rax
    f972:	48 83 c6 08          	add    rsi,0x8
    f976:	e8 a5 00 00 00       	call   fa20 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>
    f97b:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    f97f:	74 02                	je     f983 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xa3>
	    break;
    f981:	eb 17                	jmp    f99a <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xba>
	  __prev_p = __p;
    f983:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f987:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	   __p = __p->_M_next())
    f98b:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    f98f:	e8 1c ee ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    f994:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      for (__node_ptr __p = static_cast<__node_ptr>(__prev_p->_M_nxt);;
    f998:	eb 95                	jmp    f92f <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x4f>
      return nullptr;
    f99a:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f9a1:	00 
    }
    f9a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f9a6:	48 83 c4 40          	add    rsp,0x40
    f9aa:	5d                   	pop    rbp
    f9ab:	c3                   	ret
    f9ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f9b0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE>:
      { return _S_equals(__c, __n) && _M_key_equals(__k, __n); }
    f9b0:	f3 0f 1e fa          	endbr64
    f9b4:	55                   	push   rbp
    f9b5:	48 89 e5             	mov    rbp,rsp
    f9b8:	48 83 ec 30          	sub    rsp,0x30
    f9bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f9c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f9c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f9c8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    f9cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f9d0:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    f9d4:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    f9d8:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f9dc:	48 83 c6 28          	add    rsi,0x28
    f9e0:	e8 6b 00 00 00       	call   fa50 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE>
    f9e5:	88 c1                	mov    cl,al
    f9e7:	31 c0                	xor    eax,eax
    f9e9:	f6 c1 01             	test   cl,0x1
    f9ec:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    f9ef:	75 02                	jne    f9f3 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE+0x43>
    f9f1:	eb 14                	jmp    fa07 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE+0x57>
    f9f3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    f9f7:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f9fb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f9ff:	e8 dc f5 ff ff       	call   efe0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
    fa04:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    fa07:	8a 45 df             	mov    al,BYTE PTR [rbp-0x21]
    fa0a:	24 01                	and    al,0x1
    fa0c:	48 83 c4 30          	add    rsp,0x30
    fa10:	5d                   	pop    rbp
    fa11:	c3                   	ret
    fa12:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fa19:	00 00 00 
    fa1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000fa20 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>:
      { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
    fa20:	f3 0f 1e fa          	endbr64
    fa24:	55                   	push   rbp
    fa25:	48 89 e5             	mov    rbp,rsp
    fa28:	48 83 ec 10          	sub    rsp,0x10
    fa2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fa30:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fa34:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    fa38:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    fa3c:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    fa40:	e8 3b 00 00 00       	call   fa80 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>
    fa45:	48 83 c4 10          	add    rsp,0x10
    fa49:	5d                   	pop    rbp
    fa4a:	c3                   	ret
    fa4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fa50 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE>:
      { return __c == __n._M_hash_code; }
    fa50:	f3 0f 1e fa          	endbr64
    fa54:	55                   	push   rbp
    fa55:	48 89 e5             	mov    rbp,rsp
    fa58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fa5c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fa60:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fa64:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fa68:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    fa6b:	0f 94 c0             	sete   al
    fa6e:	24 01                	and    al,0x1
    fa70:	5d                   	pop    rbp
    fa71:	c3                   	ret
    fa72:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fa79:	00 00 00 
    fa7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000fa80 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>:
      { return _RangeHash{}(__n._M_hash_code, __bkt_count); }
    fa80:	f3 0f 1e fa          	endbr64
    fa84:	55                   	push   rbp
    fa85:	48 89 e5             	mov    rbp,rsp
    fa88:	48 83 ec 30          	sub    rsp,0x30
    fa8c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fa93:	00 00 
    fa95:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fa99:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    fa9d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    faa1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    faa5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    faa9:	48 8b 70 28          	mov    rsi,QWORD PTR [rax+0x28]
    faad:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fab1:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    fab5:	e8 f6 fd ff ff       	call   f8b0 <_ZNKSt8__detail18_Mod_range_hashingclEmm>
    faba:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    fabe:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fac5:	00 00 
    fac7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    facb:	48 39 c8             	cmp    rax,rcx
    face:	75 0a                	jne    fada <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm+0x5a>
    fad0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fad4:	48 83 c4 30          	add    rsp,0x30
    fad8:	5d                   	pop    rbp
    fad9:	c3                   	ret
    fada:	e8 f1 4a ff ff       	call   45d0 <__stack_chk_fail@plt>
    fadf:	90                   	nop

000000000000fae0 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEEC2ERS1_>:
      { }
    fae0:	f3 0f 1e fa          	endbr64
    fae4:	55                   	push   rbp
    fae5:	48 89 e5             	mov    rbp,rsp
    fae8:	48 83 ec 20          	sub    rsp,0x20
    faec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    faf0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    faf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    faf8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
      : _M_guarded_obj(std::__addressof(__policy))
    fafc:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fb00:	48 89 08             	mov    QWORD PTR [rax],rcx
      , _M_prev_state(__policy._M_state())
    fb03:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    fb07:	e8 a4 02 00 00       	call   fdb0 <_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv>
    fb0c:	48 89 c1             	mov    rcx,rax
    fb0f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    fb13:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      { }
    fb17:	48 83 c4 20          	add    rsp,0x20
    fb1b:	5d                   	pop    rbp
    fb1c:	c3                   	ret
    fb1d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000fb20 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE>:
	   typename _RehashPolicy, typename _Traits>
    void
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    _M_rehash(size_type __bkt_count, true_type /* __uks */)
    {
    fb20:	f3 0f 1e fa          	endbr64
    fb24:	55                   	push   rbp
    fb25:	48 89 e5             	mov    rbp,rsp
    fb28:	48 83 ec 50          	sub    rsp,0x50
    fb2c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    fb30:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    fb34:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    fb38:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
      __buckets_ptr __new_buckets = _M_allocate_buckets(__bkt_count);
    fb3c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    fb40:	e8 8b 02 00 00       	call   fdd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm>
    fb45:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    fb49:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      __node_ptr __p = _M_begin();
    fb4d:	e8 3e ec ff ff       	call   e790 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    fb52:	48 89 c1             	mov    rcx,rax
    fb55:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    fb59:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
      _M_before_begin._M_nxt = nullptr;
    fb5d:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    fb64:	00 
      std::size_t __bbegin_bkt = 0;
    fb65:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    fb6c:	00 
      while (__p)
    fb6d:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    fb72:	0f 84 b6 00 00 00    	je     fc2e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x10e>
	{
	  __node_ptr __next = __p->_M_next();
    fb78:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    fb7c:	e8 2f ec ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    fb81:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    fb85:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	  std::size_t __bkt
	    = __hash_code_base::_M_bucket_index(*__p, __bkt_count);
    fb89:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    fb8d:	48 83 c6 08          	add    rsi,0x8
    fb91:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    fb95:	e8 e6 fe ff ff       	call   fa80 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>
	  std::size_t __bkt
    fb9a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (!__new_buckets[__bkt])
    fb9e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fba2:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fba6:	48 83 3c c8 00       	cmp    QWORD PTR [rax+rcx*8],0x0
    fbab:	75 4b                	jne    fbf8 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0xd8>
    fbad:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
	    {
	      __p->_M_nxt = _M_before_begin._M_nxt;
    fbb1:	48 8b 4a 10          	mov    rcx,QWORD PTR [rdx+0x10]
    fbb5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fbb9:	48 89 08             	mov    QWORD PTR [rax],rcx
	      _M_before_begin._M_nxt = __p;
    fbbc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fbc0:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
	      __new_buckets[__bkt] = &_M_before_begin;
    fbc4:	48 83 c2 10          	add    rdx,0x10
    fbc8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fbcc:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fbd0:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
	      if (__p->_M_nxt)
    fbd4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fbd8:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fbdc:	74 10                	je     fbee <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0xce>
		__new_buckets[__bbegin_bkt] = __p;
    fbde:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fbe2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fbe6:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    fbea:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
	      __bbegin_bkt = __bkt;
    fbee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fbf2:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	    }
    fbf6:	eb 29                	jmp    fc21 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x101>
	  else
	    {
	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
    fbf8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fbfc:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fc00:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    fc04:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    fc07:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fc0b:	48 89 08             	mov    QWORD PTR [rax],rcx
	      __new_buckets[__bkt]->_M_nxt = __p;
    fc0e:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    fc12:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fc16:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    fc1a:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
    fc1e:	48 89 08             	mov    QWORD PTR [rax],rcx
	    }

	  __p = __next;
    fc21:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    fc25:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      while (__p)
    fc29:	e9 3f ff ff ff       	jmp    fb6d <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x4d>
    fc2e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	}

      _M_deallocate_buckets();
    fc32:	e8 b9 ea ff ff       	call   e6f0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>
    fc37:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
      _M_bucket_count = __bkt_count;
    fc3b:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fc3f:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      _M_buckets = __new_buckets;
    fc43:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    fc47:	48 89 08             	mov    QWORD PTR [rax],rcx
    }
    fc4a:	48 83 c4 50          	add    rsp,0x50
    fc4e:	5d                   	pop    rbp
    fc4f:	c3                   	ret

000000000000fc50 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeERNS_21_Hash_node_code_cacheILb1EEEm>:
      { __n._M_hash_code = __c; }
    fc50:	f3 0f 1e fa          	endbr64
    fc54:	55                   	push   rbp
    fc55:	48 89 e5             	mov    rbp,rsp
    fc58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fc5c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fc60:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    fc64:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fc68:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    fc6c:	48 89 08             	mov    QWORD PTR [rax],rcx
    fc6f:	5d                   	pop    rbp
    fc70:	c3                   	ret
    fc71:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fc78:	00 00 00 
    fc7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fc80 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE>:
      {
    fc80:	f3 0f 1e fa          	endbr64
    fc84:	55                   	push   rbp
    fc85:	48 89 e5             	mov    rbp,rsp
    fc88:	48 83 ec 30          	sub    rsp,0x30
    fc8c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fc90:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fc94:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    fc98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fc9c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (_M_buckets[__bkt])
    fca0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fca3:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fca7:	48 83 3c c8 00       	cmp    QWORD PTR [rax+rcx*8],0x0
    fcac:	74 2d                	je     fcdb <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0x5b>
    fcae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
    fcb2:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    fcb5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    fcb9:	48 8b 0c d1          	mov    rcx,QWORD PTR [rcx+rdx*8]
    fcbd:	48 8b 11             	mov    rdx,QWORD PTR [rcx]
    fcc0:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fcc4:	48 89 11             	mov    QWORD PTR [rcx],rdx
	    _M_buckets[__bkt]->_M_nxt = __node;
    fcc7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fccb:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fcce:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    fcd2:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
    fcd6:	48 89 08             	mov    QWORD PTR [rax],rcx
	  }
    fcd9:	eb 72                	jmp    fd4d <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0xcd>
    fcdb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    __node->_M_nxt = _M_before_begin._M_nxt;
    fcdf:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    fce3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fce7:	48 89 11             	mov    QWORD PTR [rcx],rdx
	    _M_before_begin._M_nxt = __node;
    fcea:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fcee:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	    if (__node->_M_nxt)
    fcf2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    fcf6:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fcfa:	74 3b                	je     fd37 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0xb7>
    fcfc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	      _M_buckets[_M_bucket_index(*__node->_M_next())] = __node;
    fd00:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fd04:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    fd08:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fd0b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    fd0f:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    fd13:	e8 98 ea ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    fd18:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    fd1c:	48 89 c6             	mov    rsi,rax
    fd1f:	48 83 c6 08          	add    rsi,0x8
    fd23:	e8 f8 fc ff ff       	call   fa20 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>
    fd28:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    fd2c:	48 89 c1             	mov    rcx,rax
    fd2f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fd33:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
    fd37:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    _M_buckets[__bkt] = &_M_before_begin;
    fd3b:	48 89 c2             	mov    rdx,rax
    fd3e:	48 83 c2 10          	add    rdx,0x10
    fd42:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fd45:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fd49:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
      }
    fd4d:	48 83 c4 30          	add    rsp,0x30
    fd51:	5d                   	pop    rbp
    fd52:	c3                   	ret
    fd53:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fd5a:	00 00 00 
    fd5d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000fd60 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>:
      {
    fd60:	f3 0f 1e fa          	endbr64
    fd64:	55                   	push   rbp
    fd65:	48 89 e5             	mov    rbp,rsp
    fd68:	48 83 ec 10          	sub    rsp,0x10
    fd6c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fd70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fd74:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	if (_M_guarded_obj)
    fd78:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fd7c:	74 14                	je     fd92 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x32>
    fd7e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
	  _M_guarded_obj->_M_reset(_M_prev_state);
    fd82:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    fd85:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    fd89:	e8 f2 01 00 00       	call   ff80 <_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm>
    fd8e:	eb 00                	jmp    fd90 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x30>
    fd90:	eb 00                	jmp    fd92 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x32>
      }
    fd92:	48 83 c4 10          	add    rsp,0x10
    fd96:	5d                   	pop    rbp
    fd97:	c3                   	ret
    fd98:	f3 0f 1e fa          	endbr64
    fd9c:	48 89 c7             	mov    rdi,rax
	  _M_guarded_obj->_M_reset(_M_prev_state);
    fd9f:	e8 3c 6b ff ff       	call   68e0 <__clang_call_terminate>
    fda4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fdab:	00 00 00 
    fdae:	66 90                	xchg   ax,ax

000000000000fdb0 <_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv>:
    { return _M_next_resize; }
    fdb0:	f3 0f 1e fa          	endbr64
    fdb4:	55                   	push   rbp
    fdb5:	48 89 e5             	mov    rbp,rsp
    fdb8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fdbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fdc0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    fdc4:	5d                   	pop    rbp
    fdc5:	c3                   	ret
    fdc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fdcd:	00 00 00 

000000000000fdd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm>:
      {
    fdd0:	f3 0f 1e fa          	endbr64
    fdd4:	55                   	push   rbp
    fdd5:	48 89 e5             	mov    rbp,rsp
    fdd8:	48 83 ec 20          	sub    rsp,0x20
    fddc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    fde0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    fde4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    fde8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__builtin_expect(__bkt_count == 1, false))
    fdec:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    fdf1:	75 16                	jne    fe09 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm+0x39>
    fdf3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    _M_single_bucket = nullptr;
    fdf7:	48 c7 40 30 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    fdfe:	00 
	    return &_M_single_bucket;
    fdff:	48 83 c0 30          	add    rax,0x30
    fe03:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fe07:	eb 11                	jmp    fe1a <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm+0x4a>
    fe09:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
    fe0d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    fe11:	e8 1a 00 00 00       	call   fe30 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm>
    fe16:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    fe1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fe1e:	48 83 c4 20          	add    rsp,0x20
    fe22:	5d                   	pop    rbp
    fe23:	c3                   	ret
    fe24:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fe2b:	00 00 00 
    fe2e:	66 90                	xchg   ax,ax

000000000000fe30 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm>:
    {
    fe30:	f3 0f 1e fa          	endbr64
    fe34:	55                   	push   rbp
    fe35:	48 89 e5             	mov    rbp,rsp
    fe38:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    fe3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fe46:	00 00 
    fe48:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fe4c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    fe50:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    fe54:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      __buckets_alloc_type __alloc(_M_node_allocator());
    fe58:	e8 e3 e9 ff ff       	call   e840 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    fe5d:	48 8d 4d f7          	lea    rcx,[rbp-0x9]
    fe61:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    fe65:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    fe69:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fe6d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      auto __ptr = __buckets_alloc_traits::allocate(__alloc, __bkt_count);
    fe71:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    fe75:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    fe79:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { return __a.allocate(__n); }
    fe7d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    fe81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fe85:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    fe89:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    fe8d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return __allocator_base<_Tp>::allocate(__n, 0);
    fe91:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    fe95:	31 c0                	xor    eax,eax
    fe97:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fe9a:	89 c2                	mov    edx,eax
    fe9c:	e8 7f 00 00 00       	call   ff20 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv>
    fea1:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      __buckets_ptr __p = std::__to_address(__ptr);
    fea5:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    fea9:	e8 52 00 00 00       	call   ff00 <_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_>
    feae:	8b 75 8c             	mov    esi,DWORD PTR [rbp-0x74]
    feb1:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      __builtin_memset(__p, 0, __bkt_count * sizeof(__node_base_ptr));
    feb5:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    feb9:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    febd:	48 c1 e2 03          	shl    rdx,0x3
    fec1:	e8 5a 46 ff ff       	call   4520 <memset@plt>
      return __p;
    fec6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    feca:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    fece:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fed5:	00 00 
    fed7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    fedb:	48 39 c8             	cmp    rax,rcx
    fede:	75 0d                	jne    feed <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm+0xbd>
    fee0:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    fee4:	48 81 c4 80 00 00 00 	add    rsp,0x80
    feeb:	5d                   	pop    rbp
    feec:	c3                   	ret
    feed:	e8 de 46 ff ff       	call   45d0 <__stack_chk_fail@plt>
    fef2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fef9:	00 00 00 
    fefc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000ff00 <_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_>:
    {
    ff00:	f3 0f 1e fa          	endbr64
    ff04:	55                   	push   rbp
    ff05:	48 89 e5             	mov    rbp,rsp
    ff08:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      return __ptr;
    ff0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ff10:	5d                   	pop    rbp
    ff11:	c3                   	ret
    ff12:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ff19:	00 00 00 
    ff1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000ff20 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv>:
      {
    ff20:	f3 0f 1e fa          	endbr64
    ff24:	55                   	push   rbp
    ff25:	48 89 e5             	mov    rbp,rsp
    ff28:	48 83 ec 20          	sub    rsp,0x20
    ff2c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    ff30:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    ff34:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    ff38:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ff3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ff40:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    ff44:	48 b9 ff ff ff ff ff 	movabs rcx,0xfffffffffffffff
    ff4b:	ff ff 0f 
    ff4e:	48 39 c8             	cmp    rax,rcx
    ff51:	76 1a                	jbe    ff6d <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ff53:	48 b8 ff ff ff ff ff 	movabs rax,0x1fffffffffffffff
    ff5a:	ff ff 1f 
    ff5d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    ff61:	76 05                	jbe    ff68 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    ff63:	e8 e8 45 ff ff       	call   4550 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ff68:	e8 43 45 ff ff       	call   44b0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ff6d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    ff71:	48 c1 e7 03          	shl    rdi,0x3
    ff75:	e8 16 46 ff ff       	call   4590 <_Znwm@plt>
    ff7a:	48 83 c4 20          	add    rsp,0x20
    ff7e:	5d                   	pop    rbp
    ff7f:	c3                   	ret

000000000000ff80 <_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm>:
    { _M_next_resize = __state; }
    ff80:	f3 0f 1e fa          	endbr64
    ff84:	55                   	push   rbp
    ff85:	48 89 e5             	mov    rbp,rsp
    ff88:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ff8c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ff90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ff94:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ff98:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    ff9c:	5d                   	pop    rbp
    ff9d:	c3                   	ret
    ff9e:	66 90                	xchg   ax,ax

000000000000ffa0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>:
    {
    ffa0:	f3 0f 1e fa          	endbr64
    ffa4:	55                   	push   rbp
    ffa5:	48 89 e5             	mov    rbp,rsp
    ffa8:	48 83 ec 50          	sub    rsp,0x50
    ffac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ffb3:	00 00 
    ffb5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ffb9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ffbd:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    ffc1:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    ffc5:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
      if (size() <= __small_size_threshold())
    ffc9:	e8 e2 ef ff ff       	call   efb0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>
    ffce:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    ffd2:	e8 f9 ef ff ff       	call   efd0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    ffd7:	48 89 c1             	mov    rcx,rax
    ffda:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ffde:	48 39 c8             	cmp    rax,rcx
    ffe1:	77 5e                	ja     10041 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xa1>
    ffe3:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	  for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ffe7:	e8 a4 e7 ff ff       	call   e790 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    ffec:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    fff0:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    fff5:	74 3b                	je     10032 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x92>
    fff7:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	    if (this->_M_key_equals(__k, *__it))
    fffb:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    ffff:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   10003:	48 83 c2 08          	add    rdx,0x8
   10007:	e8 d4 ef ff ff       	call   efe0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
   1000c:	a8 01                	test   al,0x1
   1000e:	75 02                	jne    10012 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x72>
   10010:	eb 0f                	jmp    10021 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x81>
	      return iterator(__it);
   10012:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
   10016:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
   1001a:	e8 61 f0 ff ff       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
   1001f:	eb 63                	jmp    10084 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xe4>
	    if (this->_M_key_equals(__k, *__it))
   10021:	eb 00                	jmp    10023 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x83>
	  for (auto __it = _M_begin(); __it; __it = __it->_M_next())
   10023:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
   10027:	e8 84 e7 ff ff       	call   e7b0 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
   1002c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   10030:	eb be                	jmp    fff0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x50>
   10032:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	  return end();
   10036:	e8 75 00 00 00       	call   100b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>
   1003b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   1003f:	eb 43                	jmp    10084 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xe4>
   10041:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
      __hash_code __code = this->_M_hash_code(__k);
   10045:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   10049:	e8 92 f0 ff ff       	call   f0e0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>
   1004e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   10052:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      std::size_t __bkt = _M_bucket_index(__code);
   10056:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   1005a:	e8 b1 f0 ff ff       	call   f110 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
   1005f:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   10063:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return iterator(_M_find_node(__bkt, __k, __code));
   10067:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
   1006b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   1006f:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   10073:	e8 c8 f0 ff ff       	call   f140 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>
   10078:	48 89 c6             	mov    rsi,rax
   1007b:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
   1007f:	e8 fc ef ff ff       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    }
   10084:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   10088:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1008c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10093:	00 00 
   10095:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10099:	48 39 c8             	cmp    rax,rcx
   1009c:	75 0a                	jne    100a8 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x108>
   1009e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   100a2:	48 83 c4 50          	add    rsp,0x50
   100a6:	5d                   	pop    rbp
   100a7:	c3                   	ret
   100a8:	e8 23 45 ff ff       	call   45d0 <__stack_chk_fail@plt>
   100ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000100b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>:
      { return iterator(nullptr); }
   100b0:	f3 0f 1e fa          	endbr64
   100b4:	55                   	push   rbp
   100b5:	48 89 e5             	mov    rbp,rsp
   100b8:	48 83 ec 20          	sub    rsp,0x20
   100bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   100c3:	00 00 
   100c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   100c9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   100cd:	31 c0                	xor    eax,eax
   100cf:	89 c6                	mov    esi,eax
   100d1:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
   100d5:	e8 a6 ef ff ff       	call   f080 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
   100da:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   100de:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   100e2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   100e9:	00 00 
   100eb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   100ef:	48 39 c8             	cmp    rax,rcx
   100f2:	75 0a                	jne    100fe <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv+0x4e>
   100f4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   100f8:	48 83 c4 20          	add    rsp,0x20
   100fc:	5d                   	pop    rbp
   100fd:	c3                   	ret
   100fe:	e8 cd 44 ff ff       	call   45d0 <__stack_chk_fail@plt>
   10103:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1010a:	00 00 00 
   1010d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010110 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_>:
      {
   10110:	f3 0f 1e fa          	endbr64
   10114:	55                   	push   rbp
   10115:	48 89 e5             	mov    rbp,rsp
   10118:	48 83 ec 30          	sub    rsp,0x30
   1011c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10123:	00 00 
   10125:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   10129:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   1012d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   10131:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	auto __ite = static_cast<__hashtable*>(this)->find(__k);
   10135:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   10139:	e8 62 fe ff ff       	call   ffa0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>
   1013e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	if (!__ite._M_cur)
   10142:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   10147:	75 1e                	jne    10167 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x57>
	  __throw_out_of_range(__N("unordered_map::at"));
   10149:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10150:	00 00 
   10152:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10156:	48 39 c8             	cmp    rax,rcx
   10159:	75 39                	jne    10194 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x84>
   1015b:	48 8d 3d 06 13 00 00 	lea    rdi,[rip+0x1306]        # 11468 <_IO_stdin_used+0x468>
   10162:	e8 89 45 ff ff       	call   46f0 <_ZSt20__throw_out_of_rangePKc@plt>
   10167:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
	return __ite->second;
   1016b:	e8 30 00 00 00       	call   101a0 <_ZNKSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEptEv>
   10170:	48 83 c0 20          	add    rax,0x20
   10174:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   10178:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   1017f:	00 00 
   10181:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10185:	48 39 c8             	cmp    rax,rcx
   10188:	75 0a                	jne    10194 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x84>
   1018a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   1018e:	48 83 c4 30          	add    rsp,0x30
   10192:	5d                   	pop    rbp
   10193:	c3                   	ret
   10194:	e8 37 44 ff ff       	call   45d0 <__stack_chk_fail@plt>
   10199:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000101a0 <_ZNKSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEptEv>:
      { return this->_M_cur->_M_valptr(); }
   101a0:	f3 0f 1e fa          	endbr64
   101a4:	55                   	push   rbp
   101a5:	48 89 e5             	mov    rbp,rsp
   101a8:	48 83 ec 10          	sub    rsp,0x10
   101ac:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   101b0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   101b4:	48 8b 00             	mov    rax,QWORD PTR [rax]
   101b7:	48 83 c0 08          	add    rax,0x8
   101bb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   101bf:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
      { return _M_storage._M_ptr(); }
   101c3:	e8 78 e7 ff ff       	call   e940 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
      { return this->_M_cur->_M_valptr(); }
   101c8:	48 83 c4 10          	add    rsp,0x10
   101cc:	5d                   	pop    rbp
   101cd:	c3                   	ret
   101ce:	66 90                	xchg   ax,ax

Disassembly of section .fini:

00000000000101d0 <_fini>:
   101d0:	f3 0f 1e fa          	endbr64
   101d4:	48 83 ec 08          	sub    rsp,0x8
   101d8:	48 83 c4 08          	add    rsp,0x8
   101dc:	c3                   	ret
