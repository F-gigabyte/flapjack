
flapjack:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	f3 0f 1e fa          	endbr64
    4004:	48 83 ec 08          	sub    rsp,0x8
    4008:	48 8b 05 e9 2f 01 00 	mov    rax,QWORD PTR [rip+0x12fe9]        # 16ff8 <__gmon_start__@Base>
    400f:	48 85 c0             	test   rax,rax
    4012:	74 02                	je     4016 <_init+0x16>
    4014:	ff d0                	call   rax
    4016:	48 83 c4 08          	add    rsp,0x8
    401a:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <.plt>:
    4020:	ff 35 7a 2d 01 00    	push   QWORD PTR [rip+0x12d7a]        # 16da0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 7c 2d 01 00    	jmp    QWORD PTR [rip+0x12d7c]        # 16da8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4030:	f3 0f 1e fa          	endbr64
    4034:	68 00 00 00 00       	push   0x0
    4039:	e9 e2 ff ff ff       	jmp    4020 <_init+0x20>
    403e:	66 90                	xchg   ax,ax
    4040:	f3 0f 1e fa          	endbr64
    4044:	68 01 00 00 00       	push   0x1
    4049:	e9 d2 ff ff ff       	jmp    4020 <_init+0x20>
    404e:	66 90                	xchg   ax,ax
    4050:	f3 0f 1e fa          	endbr64
    4054:	68 02 00 00 00       	push   0x2
    4059:	e9 c2 ff ff ff       	jmp    4020 <_init+0x20>
    405e:	66 90                	xchg   ax,ax
    4060:	f3 0f 1e fa          	endbr64
    4064:	68 03 00 00 00       	push   0x3
    4069:	e9 b2 ff ff ff       	jmp    4020 <_init+0x20>
    406e:	66 90                	xchg   ax,ax
    4070:	f3 0f 1e fa          	endbr64
    4074:	68 04 00 00 00       	push   0x4
    4079:	e9 a2 ff ff ff       	jmp    4020 <_init+0x20>
    407e:	66 90                	xchg   ax,ax
    4080:	f3 0f 1e fa          	endbr64
    4084:	68 05 00 00 00       	push   0x5
    4089:	e9 92 ff ff ff       	jmp    4020 <_init+0x20>
    408e:	66 90                	xchg   ax,ax
    4090:	f3 0f 1e fa          	endbr64
    4094:	68 06 00 00 00       	push   0x6
    4099:	e9 82 ff ff ff       	jmp    4020 <_init+0x20>
    409e:	66 90                	xchg   ax,ax
    40a0:	f3 0f 1e fa          	endbr64
    40a4:	68 07 00 00 00       	push   0x7
    40a9:	e9 72 ff ff ff       	jmp    4020 <_init+0x20>
    40ae:	66 90                	xchg   ax,ax
    40b0:	f3 0f 1e fa          	endbr64
    40b4:	68 08 00 00 00       	push   0x8
    40b9:	e9 62 ff ff ff       	jmp    4020 <_init+0x20>
    40be:	66 90                	xchg   ax,ax
    40c0:	f3 0f 1e fa          	endbr64
    40c4:	68 09 00 00 00       	push   0x9
    40c9:	e9 52 ff ff ff       	jmp    4020 <_init+0x20>
    40ce:	66 90                	xchg   ax,ax
    40d0:	f3 0f 1e fa          	endbr64
    40d4:	68 0a 00 00 00       	push   0xa
    40d9:	e9 42 ff ff ff       	jmp    4020 <_init+0x20>
    40de:	66 90                	xchg   ax,ax
    40e0:	f3 0f 1e fa          	endbr64
    40e4:	68 0b 00 00 00       	push   0xb
    40e9:	e9 32 ff ff ff       	jmp    4020 <_init+0x20>
    40ee:	66 90                	xchg   ax,ax
    40f0:	f3 0f 1e fa          	endbr64
    40f4:	68 0c 00 00 00       	push   0xc
    40f9:	e9 22 ff ff ff       	jmp    4020 <_init+0x20>
    40fe:	66 90                	xchg   ax,ax
    4100:	f3 0f 1e fa          	endbr64
    4104:	68 0d 00 00 00       	push   0xd
    4109:	e9 12 ff ff ff       	jmp    4020 <_init+0x20>
    410e:	66 90                	xchg   ax,ax
    4110:	f3 0f 1e fa          	endbr64
    4114:	68 0e 00 00 00       	push   0xe
    4119:	e9 02 ff ff ff       	jmp    4020 <_init+0x20>
    411e:	66 90                	xchg   ax,ax
    4120:	f3 0f 1e fa          	endbr64
    4124:	68 0f 00 00 00       	push   0xf
    4129:	e9 f2 fe ff ff       	jmp    4020 <_init+0x20>
    412e:	66 90                	xchg   ax,ax
    4130:	f3 0f 1e fa          	endbr64
    4134:	68 10 00 00 00       	push   0x10
    4139:	e9 e2 fe ff ff       	jmp    4020 <_init+0x20>
    413e:	66 90                	xchg   ax,ax
    4140:	f3 0f 1e fa          	endbr64
    4144:	68 11 00 00 00       	push   0x11
    4149:	e9 d2 fe ff ff       	jmp    4020 <_init+0x20>
    414e:	66 90                	xchg   ax,ax
    4150:	f3 0f 1e fa          	endbr64
    4154:	68 12 00 00 00       	push   0x12
    4159:	e9 c2 fe ff ff       	jmp    4020 <_init+0x20>
    415e:	66 90                	xchg   ax,ax
    4160:	f3 0f 1e fa          	endbr64
    4164:	68 13 00 00 00       	push   0x13
    4169:	e9 b2 fe ff ff       	jmp    4020 <_init+0x20>
    416e:	66 90                	xchg   ax,ax
    4170:	f3 0f 1e fa          	endbr64
    4174:	68 14 00 00 00       	push   0x14
    4179:	e9 a2 fe ff ff       	jmp    4020 <_init+0x20>
    417e:	66 90                	xchg   ax,ax
    4180:	f3 0f 1e fa          	endbr64
    4184:	68 15 00 00 00       	push   0x15
    4189:	e9 92 fe ff ff       	jmp    4020 <_init+0x20>
    418e:	66 90                	xchg   ax,ax
    4190:	f3 0f 1e fa          	endbr64
    4194:	68 16 00 00 00       	push   0x16
    4199:	e9 82 fe ff ff       	jmp    4020 <_init+0x20>
    419e:	66 90                	xchg   ax,ax
    41a0:	f3 0f 1e fa          	endbr64
    41a4:	68 17 00 00 00       	push   0x17
    41a9:	e9 72 fe ff ff       	jmp    4020 <_init+0x20>
    41ae:	66 90                	xchg   ax,ax
    41b0:	f3 0f 1e fa          	endbr64
    41b4:	68 18 00 00 00       	push   0x18
    41b9:	e9 62 fe ff ff       	jmp    4020 <_init+0x20>
    41be:	66 90                	xchg   ax,ax
    41c0:	f3 0f 1e fa          	endbr64
    41c4:	68 19 00 00 00       	push   0x19
    41c9:	e9 52 fe ff ff       	jmp    4020 <_init+0x20>
    41ce:	66 90                	xchg   ax,ax
    41d0:	f3 0f 1e fa          	endbr64
    41d4:	68 1a 00 00 00       	push   0x1a
    41d9:	e9 42 fe ff ff       	jmp    4020 <_init+0x20>
    41de:	66 90                	xchg   ax,ax
    41e0:	f3 0f 1e fa          	endbr64
    41e4:	68 1b 00 00 00       	push   0x1b
    41e9:	e9 32 fe ff ff       	jmp    4020 <_init+0x20>
    41ee:	66 90                	xchg   ax,ax
    41f0:	f3 0f 1e fa          	endbr64
    41f4:	68 1c 00 00 00       	push   0x1c
    41f9:	e9 22 fe ff ff       	jmp    4020 <_init+0x20>
    41fe:	66 90                	xchg   ax,ax
    4200:	f3 0f 1e fa          	endbr64
    4204:	68 1d 00 00 00       	push   0x1d
    4209:	e9 12 fe ff ff       	jmp    4020 <_init+0x20>
    420e:	66 90                	xchg   ax,ax
    4210:	f3 0f 1e fa          	endbr64
    4214:	68 1e 00 00 00       	push   0x1e
    4219:	e9 02 fe ff ff       	jmp    4020 <_init+0x20>
    421e:	66 90                	xchg   ax,ax
    4220:	f3 0f 1e fa          	endbr64
    4224:	68 1f 00 00 00       	push   0x1f
    4229:	e9 f2 fd ff ff       	jmp    4020 <_init+0x20>
    422e:	66 90                	xchg   ax,ax
    4230:	f3 0f 1e fa          	endbr64
    4234:	68 20 00 00 00       	push   0x20
    4239:	e9 e2 fd ff ff       	jmp    4020 <_init+0x20>
    423e:	66 90                	xchg   ax,ax
    4240:	f3 0f 1e fa          	endbr64
    4244:	68 21 00 00 00       	push   0x21
    4249:	e9 d2 fd ff ff       	jmp    4020 <_init+0x20>
    424e:	66 90                	xchg   ax,ax
    4250:	f3 0f 1e fa          	endbr64
    4254:	68 22 00 00 00       	push   0x22
    4259:	e9 c2 fd ff ff       	jmp    4020 <_init+0x20>
    425e:	66 90                	xchg   ax,ax
    4260:	f3 0f 1e fa          	endbr64
    4264:	68 23 00 00 00       	push   0x23
    4269:	e9 b2 fd ff ff       	jmp    4020 <_init+0x20>
    426e:	66 90                	xchg   ax,ax
    4270:	f3 0f 1e fa          	endbr64
    4274:	68 24 00 00 00       	push   0x24
    4279:	e9 a2 fd ff ff       	jmp    4020 <_init+0x20>
    427e:	66 90                	xchg   ax,ax
    4280:	f3 0f 1e fa          	endbr64
    4284:	68 25 00 00 00       	push   0x25
    4289:	e9 92 fd ff ff       	jmp    4020 <_init+0x20>
    428e:	66 90                	xchg   ax,ax
    4290:	f3 0f 1e fa          	endbr64
    4294:	68 26 00 00 00       	push   0x26
    4299:	e9 82 fd ff ff       	jmp    4020 <_init+0x20>
    429e:	66 90                	xchg   ax,ax
    42a0:	f3 0f 1e fa          	endbr64
    42a4:	68 27 00 00 00       	push   0x27
    42a9:	e9 72 fd ff ff       	jmp    4020 <_init+0x20>
    42ae:	66 90                	xchg   ax,ax
    42b0:	f3 0f 1e fa          	endbr64
    42b4:	68 28 00 00 00       	push   0x28
    42b9:	e9 62 fd ff ff       	jmp    4020 <_init+0x20>
    42be:	66 90                	xchg   ax,ax
    42c0:	f3 0f 1e fa          	endbr64
    42c4:	68 29 00 00 00       	push   0x29
    42c9:	e9 52 fd ff ff       	jmp    4020 <_init+0x20>
    42ce:	66 90                	xchg   ax,ax
    42d0:	f3 0f 1e fa          	endbr64
    42d4:	68 2a 00 00 00       	push   0x2a
    42d9:	e9 42 fd ff ff       	jmp    4020 <_init+0x20>
    42de:	66 90                	xchg   ax,ax
    42e0:	f3 0f 1e fa          	endbr64
    42e4:	68 2b 00 00 00       	push   0x2b
    42e9:	e9 32 fd ff ff       	jmp    4020 <_init+0x20>
    42ee:	66 90                	xchg   ax,ax
    42f0:	f3 0f 1e fa          	endbr64
    42f4:	68 2c 00 00 00       	push   0x2c
    42f9:	e9 22 fd ff ff       	jmp    4020 <_init+0x20>
    42fe:	66 90                	xchg   ax,ax
    4300:	f3 0f 1e fa          	endbr64
    4304:	68 2d 00 00 00       	push   0x2d
    4309:	e9 12 fd ff ff       	jmp    4020 <_init+0x20>
    430e:	66 90                	xchg   ax,ax
    4310:	f3 0f 1e fa          	endbr64
    4314:	68 2e 00 00 00       	push   0x2e
    4319:	e9 02 fd ff ff       	jmp    4020 <_init+0x20>
    431e:	66 90                	xchg   ax,ax
    4320:	f3 0f 1e fa          	endbr64
    4324:	68 2f 00 00 00       	push   0x2f
    4329:	e9 f2 fc ff ff       	jmp    4020 <_init+0x20>
    432e:	66 90                	xchg   ax,ax
    4330:	f3 0f 1e fa          	endbr64
    4334:	68 30 00 00 00       	push   0x30
    4339:	e9 e2 fc ff ff       	jmp    4020 <_init+0x20>
    433e:	66 90                	xchg   ax,ax
    4340:	f3 0f 1e fa          	endbr64
    4344:	68 31 00 00 00       	push   0x31
    4349:	e9 d2 fc ff ff       	jmp    4020 <_init+0x20>
    434e:	66 90                	xchg   ax,ax
    4350:	f3 0f 1e fa          	endbr64
    4354:	68 32 00 00 00       	push   0x32
    4359:	e9 c2 fc ff ff       	jmp    4020 <_init+0x20>
    435e:	66 90                	xchg   ax,ax
    4360:	f3 0f 1e fa          	endbr64
    4364:	68 33 00 00 00       	push   0x33
    4369:	e9 b2 fc ff ff       	jmp    4020 <_init+0x20>
    436e:	66 90                	xchg   ax,ax
    4370:	f3 0f 1e fa          	endbr64
    4374:	68 34 00 00 00       	push   0x34
    4379:	e9 a2 fc ff ff       	jmp    4020 <_init+0x20>
    437e:	66 90                	xchg   ax,ax
    4380:	f3 0f 1e fa          	endbr64
    4384:	68 35 00 00 00       	push   0x35
    4389:	e9 92 fc ff ff       	jmp    4020 <_init+0x20>
    438e:	66 90                	xchg   ax,ax
    4390:	f3 0f 1e fa          	endbr64
    4394:	68 36 00 00 00       	push   0x36
    4399:	e9 82 fc ff ff       	jmp    4020 <_init+0x20>
    439e:	66 90                	xchg   ax,ax
    43a0:	f3 0f 1e fa          	endbr64
    43a4:	68 37 00 00 00       	push   0x37
    43a9:	e9 72 fc ff ff       	jmp    4020 <_init+0x20>
    43ae:	66 90                	xchg   ax,ax
    43b0:	f3 0f 1e fa          	endbr64
    43b4:	68 38 00 00 00       	push   0x38
    43b9:	e9 62 fc ff ff       	jmp    4020 <_init+0x20>
    43be:	66 90                	xchg   ax,ax
    43c0:	f3 0f 1e fa          	endbr64
    43c4:	68 39 00 00 00       	push   0x39
    43c9:	e9 52 fc ff ff       	jmp    4020 <_init+0x20>
    43ce:	66 90                	xchg   ax,ax
    43d0:	f3 0f 1e fa          	endbr64
    43d4:	68 3a 00 00 00       	push   0x3a
    43d9:	e9 42 fc ff ff       	jmp    4020 <_init+0x20>
    43de:	66 90                	xchg   ax,ax
    43e0:	f3 0f 1e fa          	endbr64
    43e4:	68 3b 00 00 00       	push   0x3b
    43e9:	e9 32 fc ff ff       	jmp    4020 <_init+0x20>
    43ee:	66 90                	xchg   ax,ax
    43f0:	f3 0f 1e fa          	endbr64
    43f4:	68 3c 00 00 00       	push   0x3c
    43f9:	e9 22 fc ff ff       	jmp    4020 <_init+0x20>
    43fe:	66 90                	xchg   ax,ax

Disassembly of section .plt.got:

0000000000004400 <__register_frame_info@plt>:
    4400:	f3 0f 1e fa          	endbr64
    4404:	ff 25 9e 2b 01 00    	jmp    QWORD PTR [rip+0x12b9e]        # 16fa8 <__register_frame_info@Base>
    440a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004410 <__cxa_finalize@plt>:
    4410:	f3 0f 1e fa          	endbr64
    4414:	ff 25 96 2b 01 00    	jmp    QWORD PTR [rip+0x12b96]        # 16fb0 <__cxa_finalize@GLIBC_2.2.5>
    441a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004420 <__deregister_frame_info@plt>:
    4420:	f3 0f 1e fa          	endbr64
    4424:	ff 25 9e 2b 01 00    	jmp    QWORD PTR [rip+0x12b9e]        # 16fc8 <__deregister_frame_info@Base>
    442a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000004430 <_Znam@plt>:
    4430:	f3 0f 1e fa          	endbr64
    4434:	ff 25 76 29 01 00    	jmp    QWORD PTR [rip+0x12976]        # 16db0 <_Znam@GLIBCXX_3.4>
    443a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004440 <__errno_location@plt>:
    4440:	f3 0f 1e fa          	endbr64
    4444:	ff 25 6e 29 01 00    	jmp    QWORD PTR [rip+0x1296e]        # 16db8 <__errno_location@GLIBC_2.2.5>
    444a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004450 <_ZSt11_Hash_bytesPKvmm@plt>:
    4450:	f3 0f 1e fa          	endbr64
    4454:	ff 25 66 29 01 00    	jmp    QWORD PTR [rip+0x12966]        # 16dc0 <_ZSt11_Hash_bytesPKvmm@CXXABI_1.3.5>
    445a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004460 <_Unwind_Resume@plt>:
    4460:	f3 0f 1e fa          	endbr64
    4464:	ff 25 5e 29 01 00    	jmp    QWORD PTR [rip+0x1295e]        # 16dc8 <_Unwind_Resume@Base>
    446a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004470 <_ZSt9terminatev@plt>:
    4470:	f3 0f 1e fa          	endbr64
    4474:	ff 25 56 29 01 00    	jmp    QWORD PTR [rip+0x12956]        # 16dd0 <_ZSt9terminatev@GLIBCXX_3.4>
    447a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004480 <realpath@plt>:
    4480:	f3 0f 1e fa          	endbr64
    4484:	ff 25 4e 29 01 00    	jmp    QWORD PTR [rip+0x1294e]        # 16dd8 <realpath@GLIBC_2.3>
    448a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004490 <_ZSt17__throw_bad_allocv@plt>:
    4490:	f3 0f 1e fa          	endbr64
    4494:	ff 25 46 29 01 00    	jmp    QWORD PTR [rip+0x12946]        # 16de0 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    449a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044a0 <__cxa_begin_catch@plt>:
    44a0:	f3 0f 1e fa          	endbr64
    44a4:	ff 25 3e 29 01 00    	jmp    QWORD PTR [rip+0x1293e]        # 16de8 <__cxa_begin_catch@CXXABI_1.3>
    44aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044b0 <strlen@plt>:
    44b0:	f3 0f 1e fa          	endbr64
    44b4:	ff 25 36 29 01 00    	jmp    QWORD PTR [rip+0x12936]        # 16df0 <strlen@GLIBC_2.2.5>
    44ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044c0 <memcmp@plt>:
    44c0:	f3 0f 1e fa          	endbr64
    44c4:	ff 25 2e 29 01 00    	jmp    QWORD PTR [rip+0x1292e]        # 16df8 <memcmp@GLIBC_2.2.5>
    44ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044d0 <__cxa_allocate_exception@plt>:
    44d0:	f3 0f 1e fa          	endbr64
    44d4:	ff 25 26 29 01 00    	jmp    QWORD PTR [rip+0x12926]        # 16e00 <__cxa_allocate_exception@CXXABI_1.3>
    44da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044e0 <getcwd@plt>:
    44e0:	f3 0f 1e fa          	endbr64
    44e4:	ff 25 1e 29 01 00    	jmp    QWORD PTR [rip+0x1291e]        # 16e08 <getcwd@GLIBC_2.2.5>
    44ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000044f0 <_ZSt20__throw_length_errorPKc@plt>:
    44f0:	f3 0f 1e fa          	endbr64
    44f4:	ff 25 16 29 01 00    	jmp    QWORD PTR [rip+0x12916]        # 16e10 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    44fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004500 <memset@plt>:
    4500:	f3 0f 1e fa          	endbr64
    4504:	ff 25 0e 29 01 00    	jmp    QWORD PTR [rip+0x1290e]        # 16e18 <memset@GLIBC_2.2.5>
    450a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004510 <_ZSt19__throw_logic_errorPKc@plt>:
    4510:	f3 0f 1e fa          	endbr64
    4514:	ff 25 06 29 01 00    	jmp    QWORD PTR [rip+0x12906]        # 16e20 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    451a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004520 <__cxa_free_exception@plt>:
    4520:	f3 0f 1e fa          	endbr64
    4524:	ff 25 fe 28 01 00    	jmp    QWORD PTR [rip+0x128fe]        # 16e28 <__cxa_free_exception@CXXABI_1.3>
    452a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004530 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4530:	f3 0f 1e fa          	endbr64
    4534:	ff 25 f6 28 01 00    	jmp    QWORD PTR [rip+0x128f6]        # 16e30 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    453a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004540 <memcpy@plt>:
    4540:	f3 0f 1e fa          	endbr64
    4544:	ff 25 ee 28 01 00    	jmp    QWORD PTR [rip+0x128ee]        # 16e38 <memcpy@GLIBC_2.14>
    454a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004550 <stat@plt>:
    4550:	f3 0f 1e fa          	endbr64
    4554:	ff 25 e6 28 01 00    	jmp    QWORD PTR [rip+0x128e6]        # 16e40 <stat@GLIBC_2.33>
    455a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004560 <fclose@plt>:
    4560:	f3 0f 1e fa          	endbr64
    4564:	ff 25 de 28 01 00    	jmp    QWORD PTR [rip+0x128de]        # 16e48 <fclose@GLIBC_2.2.5>
    456a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004570 <_Znwm@plt>:
    4570:	f3 0f 1e fa          	endbr64
    4574:	ff 25 d6 28 01 00    	jmp    QWORD PTR [rip+0x128d6]        # 16e50 <_Znwm@GLIBCXX_3.4>
    457a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004580 <_ZdlPvm@plt>:
    4580:	f3 0f 1e fa          	endbr64
    4584:	ff 25 ce 28 01 00    	jmp    QWORD PTR [rip+0x128ce]        # 16e58 <_ZdlPvm@CXXABI_1.3.9>
    458a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004590 <fileno@plt>:
    4590:	f3 0f 1e fa          	endbr64
    4594:	ff 25 c6 28 01 00    	jmp    QWORD PTR [rip+0x128c6]        # 16e60 <fileno@GLIBC_2.2.5>
    459a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045a0 <freopen@plt>:
    45a0:	f3 0f 1e fa          	endbr64
    45a4:	ff 25 be 28 01 00    	jmp    QWORD PTR [rip+0x128be]        # 16e68 <freopen@GLIBC_2.2.5>
    45aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045b0 <__stack_chk_fail@plt>:
    45b0:	f3 0f 1e fa          	endbr64
    45b4:	ff 25 b6 28 01 00    	jmp    QWORD PTR [rip+0x128b6]        # 16e70 <__stack_chk_fail@GLIBC_2.4>
    45ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045c0 <tcgetattr@plt>:
    45c0:	f3 0f 1e fa          	endbr64
    45c4:	ff 25 ae 28 01 00    	jmp    QWORD PTR [rip+0x128ae]        # 16e78 <tcgetattr@GLIBC_2.2.5>
    45ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045d0 <fputs@plt>:
    45d0:	f3 0f 1e fa          	endbr64
    45d4:	ff 25 a6 28 01 00    	jmp    QWORD PTR [rip+0x128a6]        # 16e80 <fputs@GLIBC_2.2.5>
    45da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045e0 <fflush@plt>:
    45e0:	f3 0f 1e fa          	endbr64
    45e4:	ff 25 9e 28 01 00    	jmp    QWORD PTR [rip+0x1289e]        # 16e88 <fflush@GLIBC_2.2.5>
    45ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000045f0 <fopen@plt>:
    45f0:	f3 0f 1e fa          	endbr64
    45f4:	ff 25 96 28 01 00    	jmp    QWORD PTR [rip+0x12896]        # 16e90 <fopen@GLIBC_2.2.5>
    45fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004600 <free@plt>:
    4600:	f3 0f 1e fa          	endbr64
    4604:	ff 25 8e 28 01 00    	jmp    QWORD PTR [rip+0x1288e]        # 16e98 <free@GLIBC_2.2.5>
    460a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004610 <exit@plt>:
    4610:	f3 0f 1e fa          	endbr64
    4614:	ff 25 86 28 01 00    	jmp    QWORD PTR [rip+0x12886]        # 16ea0 <exit@GLIBC_2.2.5>
    461a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004620 <getenv@plt>:
    4620:	f3 0f 1e fa          	endbr64
    4624:	ff 25 7e 28 01 00    	jmp    QWORD PTR [rip+0x1287e]        # 16ea8 <getenv@GLIBC_2.2.5>
    462a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004630 <wait@plt>:
    4630:	f3 0f 1e fa          	endbr64
    4634:	ff 25 76 28 01 00    	jmp    QWORD PTR [rip+0x12876]        # 16eb0 <wait@GLIBC_2.2.5>
    463a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004640 <tcsetattr@plt>:
    4640:	f3 0f 1e fa          	endbr64
    4644:	ff 25 6e 28 01 00    	jmp    QWORD PTR [rip+0x1286e]        # 16eb8 <tcsetattr@GLIBC_2.2.5>
    464a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004650 <_ZdaPv@plt>:
    4650:	f3 0f 1e fa          	endbr64
    4654:	ff 25 66 28 01 00    	jmp    QWORD PTR [rip+0x12866]        # 16ec0 <_ZdaPv@GLIBCXX_3.4>
    465a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004660 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@plt>:
    4660:	f3 0f 1e fa          	endbr64
    4664:	ff 25 5e 28 01 00    	jmp    QWORD PTR [rip+0x1285e]        # 16ec8 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@GLIBCXX_3.4.18>
    466a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004670 <vfprintf@plt>:
    4670:	f3 0f 1e fa          	endbr64
    4674:	ff 25 56 28 01 00    	jmp    QWORD PTR [rip+0x12856]        # 16ed0 <vfprintf@GLIBC_2.2.5>
    467a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004680 <vfork@plt>:
    4680:	f3 0f 1e fa          	endbr64
    4684:	ff 25 4e 28 01 00    	jmp    QWORD PTR [rip+0x1284e]        # 16ed8 <vfork@GLIBC_2.2.5>
    468a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@plt>:
    4690:	f3 0f 1e fa          	endbr64
    4694:	ff 25 46 28 01 00    	jmp    QWORD PTR [rip+0x12846]        # 16ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@GLIBCXX_3.4.31>
    469a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046a0 <strcmp@plt>:
    46a0:	f3 0f 1e fa          	endbr64
    46a4:	ff 25 3e 28 01 00    	jmp    QWORD PTR [rip+0x1283e]        # 16ee8 <strcmp@GLIBC_2.2.5>
    46aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046b0 <fprintf@plt>:
    46b0:	f3 0f 1e fa          	endbr64
    46b4:	ff 25 36 28 01 00    	jmp    QWORD PTR [rip+0x12836]        # 16ef0 <fprintf@GLIBC_2.2.5>
    46ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046c0 <read@plt>:
    46c0:	f3 0f 1e fa          	endbr64
    46c4:	ff 25 2e 28 01 00    	jmp    QWORD PTR [rip+0x1282e]        # 16ef8 <read@GLIBC_2.2.5>
    46ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046d0 <_ZSt20__throw_out_of_rangePKc@plt>:
    46d0:	f3 0f 1e fa          	endbr64
    46d4:	ff 25 26 28 01 00    	jmp    QWORD PTR [rip+0x12826]        # 16f00 <_ZSt20__throw_out_of_rangePKc@GLIBCXX_3.4>
    46da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046e0 <__cxa_rethrow@plt>:
    46e0:	f3 0f 1e fa          	endbr64
    46e4:	ff 25 1e 28 01 00    	jmp    QWORD PTR [rip+0x1281e]        # 16f08 <__cxa_rethrow@CXXABI_1.3>
    46ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000046f0 <chdir@plt>:
    46f0:	f3 0f 1e fa          	endbr64
    46f4:	ff 25 16 28 01 00    	jmp    QWORD PTR [rip+0x12816]        # 16f10 <chdir@GLIBC_2.2.5>
    46fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004700 <iscntrl@plt>:
    4700:	f3 0f 1e fa          	endbr64
    4704:	ff 25 0e 28 01 00    	jmp    QWORD PTR [rip+0x1280e]        # 16f18 <iscntrl@GLIBC_2.2.5>
    470a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004710 <fread@plt>:
    4710:	f3 0f 1e fa          	endbr64
    4714:	ff 25 06 28 01 00    	jmp    QWORD PTR [rip+0x12806]        # 16f20 <fread@GLIBC_2.2.5>
    471a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004720 <opendir@plt>:
    4720:	f3 0f 1e fa          	endbr64
    4724:	ff 25 fe 27 01 00    	jmp    QWORD PTR [rip+0x127fe]        # 16f28 <opendir@GLIBC_2.2.5>
    472a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004730 <setenv@plt>:
    4730:	f3 0f 1e fa          	endbr64
    4734:	ff 25 f6 27 01 00    	jmp    QWORD PTR [rip+0x127f6]        # 16f30 <setenv@GLIBC_2.2.5>
    473a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004740 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    4740:	f3 0f 1e fa          	endbr64
    4744:	ff 25 ee 27 01 00    	jmp    QWORD PTR [rip+0x127ee]        # 16f38 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    474a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004750 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4750:	f3 0f 1e fa          	endbr64
    4754:	ff 25 e6 27 01 00    	jmp    QWORD PTR [rip+0x127e6]        # 16f40 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    475a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004760 <readdir@plt>:
    4760:	f3 0f 1e fa          	endbr64
    4764:	ff 25 de 27 01 00    	jmp    QWORD PTR [rip+0x127de]        # 16f48 <readdir@GLIBC_2.2.5>
    476a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004770 <snprintf@plt>:
    4770:	f3 0f 1e fa          	endbr64
    4774:	ff 25 d6 27 01 00    	jmp    QWORD PTR [rip+0x127d6]        # 16f50 <snprintf@GLIBC_2.2.5>
    477a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004780 <closedir@plt>:
    4780:	f3 0f 1e fa          	endbr64
    4784:	ff 25 ce 27 01 00    	jmp    QWORD PTR [rip+0x127ce]        # 16f58 <closedir@GLIBC_2.2.5>
    478a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004790 <memmove@plt>:
    4790:	f3 0f 1e fa          	endbr64
    4794:	ff 25 c6 27 01 00    	jmp    QWORD PTR [rip+0x127c6]        # 16f60 <memmove@GLIBC_2.2.5>
    479a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047a0 <_exit@plt>:
    47a0:	f3 0f 1e fa          	endbr64
    47a4:	ff 25 be 27 01 00    	jmp    QWORD PTR [rip+0x127be]        # 16f68 <_exit@GLIBC_2.2.5>
    47aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047b0 <__cxa_end_catch@plt>:
    47b0:	f3 0f 1e fa          	endbr64
    47b4:	ff 25 b6 27 01 00    	jmp    QWORD PTR [rip+0x127b6]        # 16f70 <__cxa_end_catch@CXXABI_1.3>
    47ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047c0 <access@plt>:
    47c0:	f3 0f 1e fa          	endbr64
    47c4:	ff 25 ae 27 01 00    	jmp    QWORD PTR [rip+0x127ae]        # 16f78 <access@GLIBC_2.2.5>
    47ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047d0 <execve@plt>:
    47d0:	f3 0f 1e fa          	endbr64
    47d4:	ff 25 a6 27 01 00    	jmp    QWORD PTR [rip+0x127a6]        # 16f80 <execve@GLIBC_2.2.5>
    47da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047e0 <__cxa_throw@plt>:
    47e0:	f3 0f 1e fa          	endbr64
    47e4:	ff 25 9e 27 01 00    	jmp    QWORD PTR [rip+0x1279e]        # 16f88 <__cxa_throw@CXXABI_1.3>
    47ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000047f0 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    47f0:	f3 0f 1e fa          	endbr64
    47f4:	ff 25 96 27 01 00    	jmp    QWORD PTR [rip+0x12796]        # 16f90 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    47fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000004800 <_start>:
    4800:	f3 0f 1e fa          	endbr64
    4804:	31 ed                	xor    ebp,ebp
    4806:	49 89 d1             	mov    r9,rdx
    4809:	5e                   	pop    rsi
    480a:	48 89 e2             	mov    rdx,rsp
    480d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    4811:	50                   	push   rax
    4812:	54                   	push   rsp
    4813:	45 31 c0             	xor    r8d,r8d
    4816:	31 c9                	xor    ecx,ecx
    4818:	48 8d 3d f1 5f 00 00 	lea    rdi,[rip+0x5ff1]        # a810 <main>
    481f:	ff 15 93 27 01 00    	call   QWORD PTR [rip+0x12793]        # 16fb8 <__libc_start_main@GLIBC_2.34>
    4825:	f4                   	hlt
    4826:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    482d:	00 00 00 
    4830:	f3 0f 1e fa          	endbr64
    4834:	80 3d dd 27 01 00 00 	cmp    BYTE PTR [rip+0x127dd],0x0        # 17018 <__bss_start>
    483b:	75 24                	jne    4861 <_start+0x61>
    483d:	48 83 3d 63 27 01 00 	cmp    QWORD PTR [rip+0x12763],0x0        # 16fa8 <__register_frame_info@Base>
    4844:	00 
    4845:	c6 05 cc 27 01 00 01 	mov    BYTE PTR [rip+0x127cc],0x1        # 17018 <__bss_start>
    484c:	74 13                	je     4861 <_start+0x61>
    484e:	48 8d 3d 4b f7 00 00 	lea    rdi,[rip+0xf74b]        # 13fa0 <GCC_except_table264+0x19dc>
    4855:	48 8d 35 c4 27 01 00 	lea    rsi,[rip+0x127c4]        # 17020 <__bss_start+0x8>
    485c:	e9 9f fb ff ff       	jmp    4400 <__register_frame_info@plt>
    4861:	c3                   	ret
    4862:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    4869:	1f 84 00 00 00 00 00 
    4870:	f3 0f 1e fa          	endbr64
    4874:	80 3d e5 27 01 00 00 	cmp    BYTE PTR [rip+0x127e5],0x0        # 17060 <__bss_start+0x48>
    487b:	75 39                	jne    48b6 <_start+0xb6>
    487d:	50                   	push   rax
    487e:	48 83 3d 2a 27 01 00 	cmp    QWORD PTR [rip+0x1272a],0x0        # 16fb0 <__cxa_finalize@GLIBC_2.2.5>
    4885:	00 
    4886:	c6 05 d3 27 01 00 01 	mov    BYTE PTR [rip+0x127d3],0x1        # 17060 <__bss_start+0x48>
    488d:	74 0c                	je     489b <_start+0x9b>
    488f:	48 8b 3d 72 27 01 00 	mov    rdi,QWORD PTR [rip+0x12772]        # 17008 <__dso_handle>
    4896:	e8 75 fb ff ff       	call   4410 <__cxa_finalize@plt>
    489b:	48 83 3d 25 27 01 00 	cmp    QWORD PTR [rip+0x12725],0x0        # 16fc8 <__deregister_frame_info@Base>
    48a2:	00 
    48a3:	48 8d 64 24 08       	lea    rsp,[rsp+0x8]
    48a8:	74 0c                	je     48b6 <_start+0xb6>
    48aa:	48 8d 3d ef f6 00 00 	lea    rdi,[rip+0xf6ef]        # 13fa0 <GCC_except_table264+0x19dc>
    48b1:	e9 6a fb ff ff       	jmp    4420 <__deregister_frame_info@plt>
    48b6:	c3                   	ret
    48b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    48be:	00 00 

00000000000048c0 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:
    closedir(dir);
    return 0;
}

int dir_cmd(TerminalIO& terminal, const std::string& current_dir, const std::vector<std::string>& args)
{
    48c0:	f3 0f 1e fa          	endbr64
    48c4:	55                   	push   rbp
    48c5:	48 89 e5             	mov    rbp,rsp
    48c8:	48 83 ec 50          	sub    rsp,0x50
    48cc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    48d0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    48d4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    if(args.size() == 0)
    48d8:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    48dc:	e8 7f 15 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    48e1:	48 83 f8 00          	cmp    rax,0x0
    48e5:	75 1b                	jne    4902 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x42>
    {
        int ret = perform_dir_cmd(terminal, current_dir);
    48e7:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    48eb:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    48ef:	e8 cc 00 00 00       	call   49c0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    48f4:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
        return ret;
    48f7:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    48fa:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    48fd:	e9 a8 00 00 00       	jmp    49aa <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xea>
    }
    else
    {
        int ret = 0;
    4902:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
        for(size_t i = 0; i < args.size(); i++)
    4909:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    4910:	00 
    4911:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4915:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4919:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    491d:	e8 3e 15 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4922:	48 89 c1             	mov    rcx,rax
    4925:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4929:	48 39 c8             	cmp    rax,rcx
    492c:	73 76                	jae    49a4 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xe4>
        {
            terminal.print("%s:\r\n", args[i].c_str());
    492e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4932:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4936:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    493a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    493e:	e8 3d 15 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4943:	48 89 c7             	mov    rdi,rax
    4946:	e8 65 15 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    494b:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    494f:	48 89 c2             	mov    rdx,rax
    4952:	48 8d 35 af c6 00 00 	lea    rsi,[rip+0xc6af]        # 11008 <_IO_stdin_used+0x8>
    4959:	b0 00                	mov    al,0x0
    495b:	e8 f0 48 00 00       	call   9250 <_ZN10TerminalIO5printEPKcz>
            int path_ret = perform_dir_cmd(terminal, args[i]);
    4960:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4964:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4968:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    496c:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4970:	e8 0b 15 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4975:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    4979:	48 89 c6             	mov    rsi,rax
    497c:	e8 3f 00 00 00       	call   49c0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4981:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
            if(path_ret != 0)
    4984:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
    4988:	74 07                	je     4991 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xd1>
            {
                ret = -1;
    498a:	c7 45 d8 ff ff ff ff 	mov    DWORD PTR [rbp-0x28],0xffffffff
            }
        }
    4991:	eb 00                	jmp    4993 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xd3>
        for(size_t i = 0; i < args.size(); i++)
    4993:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4997:	48 83 c0 01          	add    rax,0x1
    499b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    499f:	e9 6d ff ff ff       	jmp    4911 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x51>
        return ret; 
    49a4:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    49a7:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    }
}
    49aa:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    49ad:	48 83 c4 50          	add    rsp,0x50
    49b1:	5d                   	pop    rbp
    49b2:	c3                   	ret
    49b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    49ba:	84 00 00 00 00 00 

00000000000049c0 <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
    49c0:	55                   	push   rbp
    49c1:	48 89 e5             	mov    rbp,rsp
    49c4:	48 83 ec 30          	sub    rsp,0x30
    49c8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    49cc:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    DIR* dir = opendir(path.c_str());
    49d0:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    49d4:	e8 d7 14 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    49d9:	48 89 c7             	mov    rdi,rax
    49dc:	e8 3f fd ff ff       	call   4720 <opendir@plt>
    49e1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    if(dir == NULL)
    49e5:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    49ea:	75 32                	jne    4a1e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5e>
        terminal.print_error("Error opening directory %s\r\n", path.c_str());
    49ec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    49f0:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    49f4:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    49f8:	e8 b3 14 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    49fd:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    4a01:	48 89 c2             	mov    rdx,rax
    4a04:	48 8d 35 2e c6 00 00 	lea    rsi,[rip+0xc62e]        # 11039 <_IO_stdin_used+0x39>
    4a0b:	b0 00                	mov    al,0x0
    4a0d:	e8 1e 49 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        return 1;
    4a12:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
    4a19:	e9 91 00 00 00       	jmp    4aaf <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xef>
    struct dirent* entry = readdir(dir);
    4a1e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4a22:	e8 39 fd ff ff       	call   4760 <readdir@plt>
    4a27:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    while(entry != NULL)
    4a2b:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    4a30:	74 5b                	je     4a8d <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd>
        if(std::strcmp(entry->d_name, ".") != 0 && std::strcmp(entry->d_name, "..") != 0)
    4a32:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4a36:	48 83 c7 13          	add    rdi,0x13
    4a3a:	48 8d 35 e7 c6 00 00 	lea    rsi,[rip+0xc6e7]        # 11128 <_IO_stdin_used+0x128>
    4a41:	e8 5a fc ff ff       	call   46a0 <strcmp@plt>
    4a46:	83 f8 00             	cmp    eax,0x0
    4a49:	74 33                	je     4a7e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbe>
    4a4b:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4a4f:	48 83 c7 13          	add    rdi,0x13
    4a53:	48 8d 35 cd c6 00 00 	lea    rsi,[rip+0xc6cd]        # 11127 <_IO_stdin_used+0x127>
    4a5a:	e8 41 fc ff ff       	call   46a0 <strcmp@plt>
    4a5f:	83 f8 00             	cmp    eax,0x0
    4a62:	74 1a                	je     4a7e <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbe>
            terminal.print("%s\r\n", entry->d_name);
    4a64:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    4a68:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a6c:	48 83 c2 13          	add    rdx,0x13
    4a70:	48 8d 35 da c5 00 00 	lea    rsi,[rip+0xc5da]        # 11051 <_IO_stdin_used+0x51>
    4a77:	b0 00                	mov    al,0x0
    4a79:	e8 d2 47 00 00       	call   9250 <_ZN10TerminalIO5printEPKcz>
        entry = readdir(dir);
    4a7e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4a82:	e8 d9 fc ff ff       	call   4760 <readdir@plt>
    4a87:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    while(entry != NULL)
    4a8b:	eb 9e                	jmp    4a2b <_ZL15perform_dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b>
    terminal.print("\r\n");
    4a8d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    4a91:	48 8d 35 9e c9 00 00 	lea    rsi,[rip+0xc99e]        # 11436 <_IO_stdin_used+0x436>
    4a98:	b0 00                	mov    al,0x0
    4a9a:	e8 b1 47 00 00       	call   9250 <_ZN10TerminalIO5printEPKcz>
    closedir(dir);
    4a9f:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4aa3:	e8 d8 fc ff ff       	call   4780 <closedir@plt>
    return 0;
    4aa8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
}
    4aaf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    4ab2:	48 83 c4 30          	add    rsp,0x30
    4ab6:	5d                   	pop    rbp
    4ab7:	c3                   	ret
    4ab8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    4abf:	00 

0000000000004ac0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:


std::string update_current_dir(const std::string& current_dir)
{
    4ac0:	f3 0f 1e fa          	endbr64
    4ac4:	55                   	push   rbp
    4ac5:	48 89 e5             	mov    rbp,rsp
    4ac8:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    4acf:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    4ad3:	48 89 f8             	mov    rax,rdi
    4ad6:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    4ada:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ae1:	00 00 
    4ae3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ae7:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    4aeb:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    char* dir = getcwd(NULL, 0);
    4aef:	31 c0                	xor    eax,eax
    4af1:	89 c6                	mov    esi,eax
    4af3:	48 89 f7             	mov    rdi,rsi
    4af6:	e8 e5 f9 ff ff       	call   44e0 <getcwd@plt>
    4afb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    if(dir == NULL)
    4aff:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    4b04:	75 12                	jne    4b18 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x58>
    4b06:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    {
        // on error, assume we stayed in the original directory
        return current_dir;
    4b0a:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    4b0e:	e8 dd 13 00 00       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    4b13:	e9 a6 00 00 00       	jmp    4bbe <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfe>
    }
    setenv("PWD", dir, true);
    4b18:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    4b1c:	48 8d 3d ee c4 00 00 	lea    rdi,[rip+0xc4ee]        # 11011 <_IO_stdin_used+0x11>
    4b23:	ba 01 00 00 00       	mov    edx,0x1
    4b28:	e8 03 fc ff ff       	call   4730 <setenv@plt>
    if(current_dir.length() > 0)
    4b2d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    4b31:	e8 2a 15 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4b36:	48 83 f8 00          	cmp    rax,0x0
    4b3a:	76 1d                	jbe    4b59 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x99>
    {
        setenv("OLDPWD", current_dir.c_str(), true);
    4b3c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    4b40:	e8 6b 13 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4b45:	48 89 c6             	mov    rsi,rax
    4b48:	48 8d 3d bf c4 00 00 	lea    rdi,[rip+0xc4bf]        # 1100e <_IO_stdin_used+0xe>
    4b4f:	ba 01 00 00 00       	mov    edx,0x1
    4b54:	e8 d7 fb ff ff       	call   4730 <setenv@plt>
    4b59:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    }
    std::string res = dir;
    4b5d:	c6 45 b7 00          	mov    BYTE PTR [rbp-0x49],0x0
    4b61:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    4b65:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    4b69:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    4b6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b71:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b75:	e8 06 15 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    4b7a:	eb 00                	jmp    4b7c <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbc>
    4b7c:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    4b80:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    free(dir); // dir is malloced
    4b84:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    4b88:	e8 73 fa ff ff       	call   4600 <free@plt>
    return res;
    4b8d:	c6 45 b7 01          	mov    BYTE PTR [rbp-0x49],0x1
}
    4b91:	f6 45 b7 01          	test   BYTE PTR [rbp-0x49],0x1
    4b95:	75 25                	jne    4bbc <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfc>
    4b97:	eb 1a                	jmp    4bb3 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf3>
    4b99:	f3 0f 1e fa          	endbr64
    4b9d:	48 89 c1             	mov    rcx,rax
    4ba0:	89 d0                	mov    eax,edx
    4ba2:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    4ba6:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    4ba9:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    4bad:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    std::string res = dir;
    4bb1:	eb 2a                	jmp    4bdd <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x11d>
    4bb3:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
}
    4bb7:	e8 74 15 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    4bbc:	eb 00                	jmp    4bbe <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfe>
    4bbe:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4bc5:	00 00 
    4bc7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4bcb:	48 39 c8             	cmp    rax,rcx
    4bce:	75 30                	jne    4c00 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>
    4bd0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4bd4:	48 81 c4 80 00 00 00 	add    rsp,0x80
    4bdb:	5d                   	pop    rbp
    4bdc:	c3                   	ret
    std::string res = dir;
    4bdd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4be1:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    4be5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4bec:	00 00 
    4bee:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4bf2:	48 39 c8             	cmp    rax,rcx
    4bf5:	75 09                	jne    4c00 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>
    4bf7:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    4bfb:	e8 60 f8 ff ff       	call   4460 <_Unwind_Resume@plt>
    4c00:	e8 ab f9 ff ff       	call   45b0 <__stack_chk_fail@plt>
    4c05:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    4c0c:	00 00 00 00 

0000000000004c10 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:

int cd_cmd(TerminalIO& terminal, std::string& current_dir, const std::vector<std::string>& args)
{
    4c10:	f3 0f 1e fa          	endbr64
    4c14:	55                   	push   rbp
    4c15:	48 89 e5             	mov    rbp,rsp
    4c18:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    4c1f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4c26:	00 00 
    4c28:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c2c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4c30:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    4c34:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    if(args.size() == 0)
    4c38:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4c3c:	e8 1f 12 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4c41:	48 83 f8 00          	cmp    rax,0x0
    4c45:	0f 85 8b 00 00 00    	jne    4cd6 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xc6>
    {
        const char* home = getenv("HOME");
    4c4b:	48 8d 3d c3 c3 00 00 	lea    rdi,[rip+0xc3c3]        # 11015 <_IO_stdin_used+0x15>
    4c52:	e8 c9 f9 ff ff       	call   4620 <getenv@plt>
    4c57:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
        if(home == NULL)
    4c5b:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    4c60:	75 1e                	jne    4c80 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x70>
        {
            terminal.print_error("Error getting home directory\r\n");
    4c62:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    4c66:	48 8d 35 ad c3 00 00 	lea    rsi,[rip+0xc3ad]        # 1101a <_IO_stdin_used+0x1a>
    4c6d:	b0 00                	mov    al,0x0
    4c6f:	e8 bc 46 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
            return -1;
    4c74:	c7 45 b4 ff ff ff ff 	mov    DWORD PTR [rbp-0x4c],0xffffffff
    4c7b:	e9 0e 01 00 00       	jmp    4d8e <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
        }
        int value = chdir(home);
    4c80:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    4c84:	e8 67 fa ff ff       	call   46f0 <chdir@plt>
    4c89:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
        current_dir = update_current_dir(current_dir);
    4c8c:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    4c90:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    4c94:	e8 27 fe ff ff       	call   4ac0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4c99:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    4c9d:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    4ca1:	e8 ca 14 00 00       	call   6170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    4ca6:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    4caa:	e8 81 14 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
        if(value != 0)
    4caf:	83 7d 8c 00          	cmp    DWORD PTR [rbp-0x74],0x0
    4cb3:	74 16                	je     4ccb <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0xbb>
        {
            terminal.print_error("Error opening directory %s\r\n", home);
    4cb5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    4cb9:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    4cbd:	48 8d 35 75 c3 00 00 	lea    rsi,[rip+0xc375]        # 11039 <_IO_stdin_used+0x39>
    4cc4:	b0 00                	mov    al,0x0
    4cc6:	e8 65 46 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        }
        return value;
    4ccb:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    4cce:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4cd1:	e9 b8 00 00 00       	jmp    4d8e <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
    }
    else if(args.size() == 1)
    4cd6:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4cda:	e8 81 11 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4cdf:	48 83 f8 01          	cmp    rax,0x1
    4ce3:	75 76                	jne    4d5b <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x14b>
    {
        int value = chdir(args[0].c_str());
    4ce5:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4ce9:	31 c0                	xor    eax,eax
    4ceb:	89 c6                	mov    esi,eax
    4ced:	e8 8e 11 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4cf2:	48 89 c7             	mov    rdi,rax
    4cf5:	e8 b6 11 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4cfa:	48 89 c7             	mov    rdi,rax
    4cfd:	e8 ee f9 ff ff       	call   46f0 <chdir@plt>
    4d02:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
        update_current_dir(current_dir);
    4d05:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    4d09:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    4d0d:	e8 ae fd ff ff       	call   4ac0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4d12:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    4d16:	e8 15 14 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
        if(value != 0)
    4d1b:	83 7d 88 00          	cmp    DWORD PTR [rbp-0x78],0x0
    4d1f:	74 32                	je     4d53 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x143>
        {
            terminal.print_error("Error opening directory %s\r\n", args[0].c_str());
    4d21:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4d25:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    4d29:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4d2d:	31 c0                	xor    eax,eax
    4d2f:	89 c6                	mov    esi,eax
    4d31:	e8 4a 11 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4d36:	48 89 c7             	mov    rdi,rax
    4d39:	e8 72 11 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4d3e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    4d42:	48 89 c2             	mov    rdx,rax
    4d45:	48 8d 35 ed c2 00 00 	lea    rsi,[rip+0xc2ed]        # 11039 <_IO_stdin_used+0x39>
    4d4c:	b0 00                	mov    al,0x0
    4d4e:	e8 dd 45 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        }
        return value;
    4d53:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
    4d56:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4d59:	eb 33                	jmp    4d8e <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x17e>
    }
    else
    {
        terminal.print_error("Expected at most 1 argument for '@'. Got %zu\r\n", args.size());
    4d5b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    4d5f:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    4d66:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    4d6a:	e8 f1 10 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4d6f:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    4d76:	48 89 c2             	mov    rdx,rax
    4d79:	48 8d 35 d6 c2 00 00 	lea    rsi,[rip+0xc2d6]        # 11056 <_IO_stdin_used+0x56>
    4d80:	b0 00                	mov    al,0x0
    4d82:	e8 a9 45 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        return -1;
    4d87:	c7 45 b4 ff ff ff ff 	mov    DWORD PTR [rbp-0x4c],0xffffffff
    }
}
    4d8e:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4d91:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    4d97:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4d9e:	00 00 
    4da0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    4da4:	48 39 c8             	cmp    rax,rcx
    4da7:	75 0f                	jne    4db8 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x1a8>
    4da9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    4daf:	48 81 c4 90 00 00 00 	add    rsp,0x90
    4db6:	5d                   	pop    rbp
    4db7:	c3                   	ret
    4db8:	e8 f3 f7 ff ff       	call   45b0 <__stack_chk_fail@plt>
    4dbd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000004dc0 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>:

int pwd_cmd(TerminalIO& terminal, const std::string& current_dir, const std::vector<std::string>& args)
{
    4dc0:	f3 0f 1e fa          	endbr64
    4dc4:	55                   	push   rbp
    4dc5:	48 89 e5             	mov    rbp,rsp
    4dc8:	48 83 ec 30          	sub    rsp,0x30
    4dcc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    4dd0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    4dd4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    if(args.size() == 0)
    4dd8:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4ddc:	e8 7f 10 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4de1:	48 83 f8 00          	cmp    rax,0x0
    4de5:	75 2f                	jne    4e16 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x56>
    {
        terminal.print("%s\r\n", current_dir.c_str()); 
    4de7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4deb:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4def:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    4df3:	e8 b8 10 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4df8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    4dfc:	48 89 c2             	mov    rdx,rax
    4dff:	48 8d 35 4b c2 00 00 	lea    rsi,[rip+0xc24b]        # 11051 <_IO_stdin_used+0x51>
    4e06:	b0 00                	mov    al,0x0
    4e08:	e8 43 44 00 00       	call   9250 <_ZN10TerminalIO5printEPKcz>
        return 0;
    4e0d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    4e14:	eb 2d                	jmp    4e43 <_Z7pwd_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE+0x83>
    }
    else
    {
        terminal.print_error("Expected no arguments for 'pwd'. Got %zu\r\n", args.size());
    4e16:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4e1a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4e1e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    4e22:	e8 39 10 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e27:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    4e2b:	48 89 c2             	mov    rdx,rax
    4e2e:	48 8d 35 50 c2 00 00 	lea    rsi,[rip+0xc250]        # 11085 <_IO_stdin_used+0x85>
    4e35:	b0 00                	mov    al,0x0
    4e37:	e8 f4 44 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        return -1;
    4e3c:	c7 45 fc ff ff ff ff 	mov    DWORD PTR [rbp-0x4],0xffffffff
    }
}
    4e43:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    4e46:	48 83 c4 30          	add    rsp,0x30
    4e4a:	5d                   	pop    rbp
    4e4b:	c3                   	ret
    4e4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004e50 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE>:

char** get_argument_list(const std::vector<std::string>& args)
{
    4e50:	f3 0f 1e fa          	endbr64
    4e54:	55                   	push   rbp
    4e55:	48 89 e5             	mov    rbp,rsp
    4e58:	48 83 ec 40          	sub    rsp,0x40
    4e5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   char** arguments = allocate_array<char*>(args.size() + 1);
    4e60:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4e64:	e8 f7 0f 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e69:	48 89 c7             	mov    rdi,rax
    4e6c:	48 83 c7 01          	add    rdi,0x1
    4e70:	e8 0b 15 00 00       	call   6380 <_Z14allocate_arrayIPcEPT_m>
    4e75:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   for(size_t i = 0; i < args.size(); i++)
    4e79:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    4e80:	00 
    4e81:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e85:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4e89:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4e8d:	e8 ce 0f 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4e92:	48 89 c1             	mov    rcx,rax
    4e95:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e99:	48 39 c8             	cmp    rax,rcx
    4e9c:	0f 83 c3 00 00 00    	jae    4f65 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE+0x115>
   {
       arguments[i] = allocate_array<char>(args[i].length() + 1);
    4ea2:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4ea6:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4eaa:	e8 d1 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4eaf:	48 89 c7             	mov    rdi,rax
    4eb2:	e8 a9 11 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4eb7:	48 89 c7             	mov    rdi,rax
    4eba:	48 83 c7 01          	add    rdi,0x1
    4ebe:	e8 2d 15 00 00       	call   63f0 <_Z14allocate_arrayIcEPT_m>
    4ec3:	48 89 c2             	mov    rdx,rax
    4ec6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4eca:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4ece:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
       std::memcpy(arguments[i], args[i].c_str(), sizeof(char) * args[i].length());
    4ed2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4ed6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4eda:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    4ede:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ee2:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4ee6:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4eea:	e8 91 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4eef:	48 89 c7             	mov    rdi,rax
    4ef2:	e8 b9 0f 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    4ef7:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4efb:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4eff:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4f03:	e8 78 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4f08:	48 89 c7             	mov    rdi,rax
    4f0b:	e8 50 11 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4f10:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    4f14:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4f18:	48 89 c2             	mov    rdx,rax
    4f1b:	48 c1 e2 00          	shl    rdx,0x0
    4f1f:	e8 1c f6 ff ff       	call   4540 <memcpy@plt>
       arguments[i][args[i].length()] = 0;
    4f24:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f28:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4f2c:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    4f30:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4f34:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f38:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    4f3c:	e8 3f 0f 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    4f41:	48 89 c7             	mov    rdi,rax
    4f44:	e8 17 11 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    4f49:	48 89 c1             	mov    rcx,rax
    4f4c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f50:	c6 04 08 00          	mov    BYTE PTR [rax+rcx*1],0x0
   for(size_t i = 0; i < args.size(); i++)
    4f54:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4f58:	48 83 c0 01          	add    rax,0x1
    4f5c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4f60:	e9 1c ff ff ff       	jmp    4e81 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE+0x31>
   }
   arguments[args.size()] = NULL;
    4f65:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f69:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4f6d:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    4f71:	e8 ea 0e 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    4f76:	48 89 c1             	mov    rcx,rax
    4f79:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f7d:	48 c7 04 c8 00 00 00 	mov    QWORD PTR [rax+rcx*8],0x0
    4f84:	00 
   return arguments;
    4f85:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f89:	48 83 c4 40          	add    rsp,0x40
    4f8d:	5d                   	pop    rbp
    4f8e:	c3                   	ret
    4f8f:	90                   	nop

0000000000004f90 <_Z14parse_env_pathB5cxx11v>:
}

std::vector<std::string> parse_env_path()
{
    4f90:	f3 0f 1e fa          	endbr64
    4f94:	55                   	push   rbp
    4f95:	48 89 e5             	mov    rbp,rsp
    4f98:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    4f9f:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    4fa3:	48 89 f8             	mov    rax,rdi
    4fa6:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    4faa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fb1:	00 00 
    4fb3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fb7:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    std::vector<std::string> paths;
    4fbb:	c6 45 cf 00          	mov    BYTE PTR [rbp-0x31],0x0
    4fbf:	e8 7c 14 00 00       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    char* path = getenv("PATH");
    4fc4:	48 8d 3d e5 c0 00 00 	lea    rdi,[rip+0xc0e5]        # 110b0 <_IO_stdin_used+0xb0>
    4fcb:	e8 50 f6 ff ff       	call   4620 <getenv@plt>
    4fd0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    if(path == NULL)
    4fd4:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    4fd9:	75 10                	jne    4feb <_Z14parse_env_pathB5cxx11v+0x5b>
    {
        return paths;
    4fdb:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
    4fdf:	c7 45 bc 01 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1
    4fe6:	e9 f0 00 00 00       	jmp    50db <_Z14parse_env_pathB5cxx11v+0x14b>
    }
    size_t index = 0;
    4feb:	48 c7 45 b0 00 00 00 	mov    QWORD PTR [rbp-0x50],0x0
    4ff2:	00 
    std::string path_elem;
    4ff3:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    4ff7:	e8 64 14 00 00       	call   6460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    while(path[index] != 0)
    4ffc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5000:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    5004:	0f be 04 08          	movsx  eax,BYTE PTR [rax+rcx*1]
    5008:	83 f8 00             	cmp    eax,0x0
    500b:	0f 84 96 00 00 00    	je     50a7 <_Z14parse_env_pathB5cxx11v+0x117>
    {
        if(path[index] == ':')
    5011:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5015:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    5019:	0f be 04 08          	movsx  eax,BYTE PTR [rax+rcx*1]
    501d:	83 f8 3a             	cmp    eax,0x3a
    5020:	75 5b                	jne    507d <_Z14parse_env_pathB5cxx11v+0xed>
        {
            if(path_elem.length() > 0)
    5022:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5026:	e8 35 10 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    502b:	48 83 f8 00          	cmp    rax,0x0
    502f:	76 38                	jbe    5069 <_Z14parse_env_pathB5cxx11v+0xd9>
    5031:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5035:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
            {
                paths.emplace_back(path_elem);
    5039:	e8 b2 14 00 00       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    503e:	eb 00                	jmp    5040 <_Z14parse_env_pathB5cxx11v+0xb0>
            }
    5040:	eb 27                	jmp    5069 <_Z14parse_env_pathB5cxx11v+0xd9>
    5042:	f3 0f 1e fa          	endbr64
    5046:	48 89 c1             	mov    rcx,rax
    if(path_elem.length() > 0)
    {
        paths.emplace_back(path_elem);
    }
    return paths;
}
    5049:	89 d0                	mov    eax,edx
    504b:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    504f:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    5052:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5056:	e8 d5 10 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    505b:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    505f:	e8 7c 15 00 00       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5064:	e9 a0 00 00 00       	jmp    5109 <_Z14parse_env_pathB5cxx11v+0x179>
            path_elem = "";
    5069:	48 8d 35 c8 c3 00 00 	lea    rsi,[rip+0xc3c8]        # 11438 <_IO_stdin_used+0x438>
    5070:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5074:	e8 f7 14 00 00       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    5079:	eb 00                	jmp    507b <_Z14parse_env_pathB5cxx11v+0xeb>
        }
    507b:	eb 19                	jmp    5096 <_Z14parse_env_pathB5cxx11v+0x106>
            path_elem += path[index];
    507d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5081:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
    5085:	0f be 34 08          	movsx  esi,BYTE PTR [rax+rcx*1]
    5089:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    508d:	e8 0e 15 00 00       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    5092:	eb 00                	jmp    5094 <_Z14parse_env_pathB5cxx11v+0x104>
    5094:	eb 00                	jmp    5096 <_Z14parse_env_pathB5cxx11v+0x106>
        index++;
    5096:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    509a:	48 83 c0 01          	add    rax,0x1
    509e:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    while(path[index] != 0)
    50a2:	e9 55 ff ff ff       	jmp    4ffc <_Z14parse_env_pathB5cxx11v+0x6c>
    if(path_elem.length() > 0)
    50a7:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    50ab:	e8 b0 0f 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    50b0:	48 83 f8 00          	cmp    rax,0x0
    50b4:	76 11                	jbe    50c7 <_Z14parse_env_pathB5cxx11v+0x137>
    50b6:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    50ba:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
        paths.emplace_back(path_elem);
    50be:	e8 2d 14 00 00       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    50c3:	eb 00                	jmp    50c5 <_Z14parse_env_pathB5cxx11v+0x135>
    }
    50c5:	eb 00                	jmp    50c7 <_Z14parse_env_pathB5cxx11v+0x137>
    return paths;
    50c7:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
    50cb:	c7 45 bc 01 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1
}
    50d2:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    50d6:	e8 55 10 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    50db:	f6 45 cf 01          	test   BYTE PTR [rbp-0x31],0x1
    50df:	75 09                	jne    50ea <_Z14parse_env_pathB5cxx11v+0x15a>
    50e1:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    50e5:	e8 f6 14 00 00       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    50ea:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    50f1:	00 00 
    50f3:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    50f7:	48 39 c8             	cmp    rax,rcx
    50fa:	75 30                	jne    512c <_Z14parse_env_pathB5cxx11v+0x19c>
    50fc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    5100:	48 81 c4 80 00 00 00 	add    rsp,0x80
    5107:	5d                   	pop    rbp
    5108:	c3                   	ret
    5109:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    510d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    5111:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5118:	00 00 
    511a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    511e:	48 39 c8             	cmp    rax,rcx
    5121:	75 09                	jne    512c <_Z14parse_env_pathB5cxx11v+0x19c>
    5123:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    5127:	e8 34 f3 ff ff       	call   4460 <_Unwind_Resume@plt>
    512c:	e8 7f f4 ff ff       	call   45b0 <__stack_chk_fail@plt>
    5131:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    5138:	0f 1f 84 00 00 00 00 
    513f:	00 

0000000000005140 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream>:
    }
    return res;
}

int exec_process(TerminalIO& terminal, const std::vector<std::string>& args, const TerminalStream& streams)
{
    5140:	f3 0f 1e fa          	endbr64
    5144:	55                   	push   rbp
    5145:	48 89 e5             	mov    rbp,rsp
    5148:	48 81 ec e0 01 00 00 	sub    rsp,0x1e0
    514f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5156:	00 00 
    5158:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    515c:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
    5163:	48 89 b5 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rsi
    516a:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
    std::vector<std::string> paths;
    5171:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5175:	e8 c6 12 00 00       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    bool has_slash = false;
    517a:	c6 85 47 ff ff ff 00 	mov    BYTE PTR [rbp-0xb9],0x0
    for(size_t i = 0; i < args[0].length() && !has_slash; i++)
    5181:	48 c7 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],0x0
    5188:	00 00 00 00 
    518c:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    5193:	48 89 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],rax
    519a:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    51a1:	31 c0                	xor    eax,eax
    51a3:	89 c6                	mov    esi,eax
    51a5:	e8 d6 0c 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    51aa:	48 89 c7             	mov    rdi,rax
    51ad:	e8 ae 0e 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    51b2:	48 8b 8d b0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x150]
    51b9:	48 89 c2             	mov    rdx,rax
    51bc:	31 c0                	xor    eax,eax
    51be:	48 39 d1             	cmp    rcx,rdx
    51c1:	88 85 bb fe ff ff    	mov    BYTE PTR [rbp-0x145],al
    51c7:	73 0e                	jae    51d7 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x97>
    51c9:	8a 85 47 ff ff ff    	mov    al,BYTE PTR [rbp-0xb9]
    51cf:	34 ff                	xor    al,0xff
    51d1:	88 85 bb fe ff ff    	mov    BYTE PTR [rbp-0x145],al
    51d7:	8a 85 bb fe ff ff    	mov    al,BYTE PTR [rbp-0x145]
    51dd:	a8 01                	test   al,0x1
    51df:	75 02                	jne    51e3 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xa3>
    51e1:	eb 47                	jmp    522a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xea>
    {
        if(args[0][i] == '/')
    51e3:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    51ea:	31 c0                	xor    eax,eax
    51ec:	89 c6                	mov    esi,eax
    51ee:	e8 8d 0c 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    51f3:	48 89 c7             	mov    rdi,rax
    51f6:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    51fd:	e8 4e 14 00 00       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    5202:	0f be 00             	movsx  eax,BYTE PTR [rax]
    5205:	83 f8 2f             	cmp    eax,0x2f
    5208:	75 07                	jne    5211 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xd1>
        {
            has_slash = true;
    520a:	c6 85 47 ff ff ff 01 	mov    BYTE PTR [rbp-0xb9],0x1
        }
    }
    5211:	eb 00                	jmp    5213 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0xd3>
    for(size_t i = 0; i < args[0].length() && !has_slash; i++)
    5213:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    521a:	48 83 c0 01          	add    rax,0x1
    521e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    5225:	e9 62 ff ff ff       	jmp    518c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c>
    if(has_slash)
    522a:	f6 85 47 ff ff ff 01 	test   BYTE PTR [rbp-0xb9],0x1
    5231:	74 3e                	je     5271 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x131>
    {
        paths.emplace_back(args[0]);
    5233:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    523a:	31 c0                	xor    eax,eax
    523c:	89 c6                	mov    esi,eax
    523e:	e8 3d 0c 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5243:	48 89 c6             	mov    rsi,rax
    5246:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    524a:	e8 41 14 00 00       	call   6690 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_>
    524f:	eb 00                	jmp    5251 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x111>
    }
    5251:	e9 0e 01 00 00       	jmp    5364 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x224>
    5256:	f3 0f 1e fa          	endbr64
    525a:	48 89 c1             	mov    rcx,rax
            return status;
        }
    }
    terminal.print_error("Unknown command '%s'\r\n", args[0].c_str());
    return -1;
}
    525d:	89 d0                	mov    eax,edx
    525f:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    5266:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
    526c:	e9 35 08 00 00       	jmp    5aa6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
    5271:	48 8d bd 68 ff ff ff 	lea    rdi,[rbp-0x98]
        paths = parse_env_path();
    5278:	e8 13 fd ff ff       	call   4f90 <_Z14parse_env_pathB5cxx11v>
    527d:	eb 00                	jmp    527f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x13f>
    527f:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5283:	48 8d b5 68 ff ff ff 	lea    rsi,[rbp-0x98]
    528a:	e8 81 14 00 00       	call   6710 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>
    528f:	48 8d bd 68 ff ff ff 	lea    rdi,[rbp-0x98]
    5296:	e8 45 13 00 00       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
        for(size_t i = 0; i < paths.size(); i++)
    529b:	48 c7 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],0x0
    52a2:	00 00 00 00 
    52a6:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    52ad:	48 89 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rax
    52b4:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52b8:	e8 a3 0b 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    52bd:	48 89 c1             	mov    rcx,rax
    52c0:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
    52c7:	48 39 c8             	cmp    rax,rcx
    52ca:	0f 83 92 00 00 00    	jae    5362 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x222>
            if(paths[i].back() != '/')
    52d0:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    52d7:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52db:	e8 70 14 00 00       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    52e0:	48 89 c7             	mov    rdi,rax
    52e3:	e8 98 14 00 00       	call   6780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
    52e8:	0f be 00             	movsx  eax,BYTE PTR [rax]
    52eb:	83 f8 2f             	cmp    eax,0x2f
    52ee:	74 21                	je     5311 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1d1>
                paths[i] += '/';
    52f0:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    52f7:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    52fb:	e8 50 14 00 00       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5300:	48 89 c7             	mov    rdi,rax
    5303:	be 2f 00 00 00       	mov    esi,0x2f
    5308:	e8 93 12 00 00       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    530d:	eb 00                	jmp    530f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1cf>
            }
    530f:	eb 00                	jmp    5311 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x1d1>
            paths[i] += args[0];
    5311:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    5318:	31 c0                	xor    eax,eax
    531a:	89 c6                	mov    esi,eax
    531c:	e8 5f 0b 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5321:	48 89 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rax
    5328:	48 8b b5 20 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe0]
    532f:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5333:	e8 18 14 00 00       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5338:	48 8b b5 a0 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x160]
    533f:	48 89 c7             	mov    rdi,rax
    5342:	e8 89 14 00 00       	call   67d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
    5347:	eb 00                	jmp    5349 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x209>
        }
    5349:	eb 00                	jmp    534b <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x20b>
        for(size_t i = 0; i < paths.size(); i++)
    534b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    5352:	48 83 c0 01          	add    rax,0x1
    5356:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    535d:	e9 44 ff ff ff       	jmp    52a6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x166>
    5362:	eb 00                	jmp    5364 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x224>
    for(size_t i = 0; i < paths.size(); i++)
    5364:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x0
    536b:	00 00 00 00 
    536f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    5376:	48 89 85 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],rax
    537d:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5381:	e8 da 0a 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    5386:	48 89 c1             	mov    rcx,rax
    5389:	48 8b 85 98 fe ff ff 	mov    rax,QWORD PTR [rbp-0x168]
    5390:	48 39 c8             	cmp    rax,rcx
    5393:	0f 83 79 06 00 00    	jae    5a12 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8d2>
        if(access(paths[i].c_str(), X_OK) == 0)
    5399:	48 8b b5 18 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe8]
    53a0:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    53a4:	e8 a7 13 00 00       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    53a9:	48 89 c7             	mov    rdi,rax
    53ac:	e8 ff 0a 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    53b1:	48 89 c7             	mov    rdi,rax
    53b4:	be 01 00 00 00       	mov    esi,0x1
    53b9:	e8 02 f4 ff ff       	call   47c0 <access@plt>
    53be:	83 f8 00             	cmp    eax,0x0
    53c1:	0f 85 32 06 00 00    	jne    59f9 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8b9>
            char** arguments = get_argument_list(args);
    53c7:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    53ce:	e8 7d fa ff ff       	call   4e50 <_Z17get_argument_listRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE>
    53d3:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    53da:	eb 00                	jmp    53dc <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x29c>
    53dc:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
    53e3:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
            int status = 1;
    53ea:	c7 85 64 ff ff ff 01 	mov    DWORD PTR [rbp-0x9c],0x1
    53f1:	00 00 00 
            pid_t p_id = vfork();
    53f4:	e8 87 f2 ff ff       	call   4680 <vfork@plt>
    53f9:	f3 0f 1e fa          	endbr64
    53fd:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
            if(p_id == -1)
    5403:	83 bd 0c ff ff ff ff 	cmp    DWORD PTR [rbp-0xf4],0xffffffff
    540a:	75 1c                	jne    5428 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x2e8>
                terminal.print_error("Unable to create new processes\r\n");
    540c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    5413:	48 8d 35 9b bc 00 00 	lea    rsi,[rip+0xbc9b]        # 110b5 <_IO_stdin_used+0xb5>
    541a:	31 c0                	xor    eax,eax
    541c:	e8 0f 3f 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    5421:	eb 00                	jmp    5423 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x2e3>
            }
    5423:	e9 24 05 00 00       	jmp    594c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80c>
            else if(p_id == 0)
    5428:	83 bd 0c ff ff ff 00 	cmp    DWORD PTR [rbp-0xf4],0x0
    542f:	0f 85 f7 04 00 00    	jne    592c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ec>
                terminal.disable_raw_mode();
    5435:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    543c:	e8 0f 3d 00 00       	call   9150 <_ZN10TerminalIO16disable_raw_modeEv>
    5441:	eb 00                	jmp    5443 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x303>
                bool stdin_valid = true;
    5443:	c6 85 0b ff ff ff 01 	mov    BYTE PTR [rbp-0xf5],0x1
                if(streams.stdin_path.length() > 0)
    544a:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5451:	e8 0a 0c 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5456:	48 83 f8 00          	cmp    rax,0x0
    545a:	0f 86 ba 00 00 00    	jbe    551a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3da>
                    std::string current_stdin = get_file_path(stdin);
    5460:	48 8b 05 59 1b 01 00 	mov    rax,QWORD PTR [rip+0x11b59]        # 16fc0 <stdin@GLIBC_2.2.5>
    5467:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    546a:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    546e:	e8 6d 06 00 00       	call   5ae0 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    5473:	eb 00                	jmp    5475 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x335>
                    if(current_stdin.length() == 0 || streams.stdin_path != current_stdin)
    5475:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5479:	e8 e2 0b 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    547e:	48 83 f8 00          	cmp    rax,0x0
    5482:	74 18                	je     549c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x35c>
    5484:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    548b:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    548f:	e8 6c 13 00 00       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    5494:	34 ff                	xor    al,0xff
    5496:	a8 01                	test   al,0x1
    5498:	75 02                	jne    549c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x35c>
    549a:	eb 75                	jmp    5511 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3d1>
                        FILE* stdin_res = std::freopen(streams.stdin_path.c_str(), "r", stdin);    
    549c:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    54a3:	e8 08 0a 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    54a8:	48 89 c7             	mov    rdi,rax
    54ab:	48 8b 05 0e 1b 01 00 	mov    rax,QWORD PTR [rip+0x11b0e]        # 16fc0 <stdin@GLIBC_2.2.5>
    54b2:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    54b5:	48 8d 35 1a bc 00 00 	lea    rsi,[rip+0xbc1a]        # 110d6 <_IO_stdin_used+0xd6>
    54bc:	e8 df f0 ff ff       	call   45a0 <freopen@plt>
    54c1:	48 89 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rax
    54c8:	eb 00                	jmp    54ca <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x38a>
    54ca:	48 8b 85 88 fe ff ff 	mov    rax,QWORD PTR [rbp-0x178]
    54d1:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
                        stdin_valid = (stdin_res != NULL);
    54d8:	48 83 bd 00 ff ff ff 	cmp    QWORD PTR [rbp-0x100],0x0
    54df:	00 
    54e0:	0f 95 c0             	setne  al
    54e3:	24 01                	and    al,0x1
    54e5:	88 85 0b ff ff ff    	mov    BYTE PTR [rbp-0xf5],al
                    }
    54eb:	eb 24                	jmp    5511 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x3d1>
    54ed:	f3 0f 1e fa          	endbr64
    54f1:	48 89 c1             	mov    rcx,rax
}
    54f4:	89 d0                	mov    eax,edx
    54f6:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    54fd:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    5503:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5507:	e8 24 0c 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    550c:	e9 95 05 00 00       	jmp    5aa6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
    5511:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5515:	e8 16 0c 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                bool stdout_valid = true;
    551a:	c6 85 ff fe ff ff 01 	mov    BYTE PTR [rbp-0x101],0x1
                if(streams.stdout_path.length() > 0)
    5521:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5528:	48 83 c7 20          	add    rdi,0x20
    552c:	e8 2f 0b 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5531:	48 83 f8 00          	cmp    rax,0x0
    5535:	0f 86 58 01 00 00    	jbe    5693 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x553>
                    std::string current_stdout = get_file_path(stdout);
    553b:	48 8b 05 56 1a 01 00 	mov    rax,QWORD PTR [rip+0x11a56]        # 16f98 <stdout@GLIBC_2.2.5>
    5542:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    5545:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    5549:	e8 92 05 00 00       	call   5ae0 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    554e:	eb 00                	jmp    5550 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x410>
                    if(streams.stdout_append)
    5550:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    5557:	f6 40 40 01          	test   BYTE PTR [rax+0x40],0x1
    555b:	0f 84 a9 00 00 00    	je     560a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4ca>
                        if(current_stdout.length() == 0 || streams.stdout_path != current_stdout)
    5561:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    5565:	e8 f6 0a 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    556a:	48 83 f8 00          	cmp    rax,0x0
    556e:	74 1c                	je     558c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x44c>
    5570:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5577:	48 83 c7 20          	add    rdi,0x20
    557b:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    557f:	e8 7c 12 00 00       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    5584:	34 ff                	xor    al,0xff
    5586:	a8 01                	test   al,0x1
    5588:	75 02                	jne    558c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x44c>
    558a:	eb 79                	jmp    5605 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c5>
                            FILE* stdout_res = freopen(streams.stdout_path.c_str(), "a", stdout);
    558c:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5593:	48 83 c7 20          	add    rdi,0x20
    5597:	e8 14 09 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    559c:	48 89 c7             	mov    rdi,rax
    559f:	48 8b 05 f2 19 01 00 	mov    rax,QWORD PTR [rip+0x119f2]        # 16f98 <stdout@GLIBC_2.2.5>
    55a6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    55a9:	48 8d 35 28 bb 00 00 	lea    rsi,[rip+0xbb28]        # 110d8 <_IO_stdin_used+0xd8>
    55b0:	e8 eb ef ff ff       	call   45a0 <freopen@plt>
    55b5:	48 89 85 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rax
    55bc:	eb 00                	jmp    55be <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x47e>
    55be:	48 8b 85 80 fe ff ff 	mov    rax,QWORD PTR [rbp-0x180]
    55c5:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
                            stdout_valid = (stdout_res != NULL);
    55cc:	48 83 bd f0 fe ff ff 	cmp    QWORD PTR [rbp-0x110],0x0
    55d3:	00 
    55d4:	0f 95 c0             	setne  al
    55d7:	24 01                	and    al,0x1
    55d9:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
                        }
    55df:	eb 24                	jmp    5605 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4c5>
    55e1:	f3 0f 1e fa          	endbr64
    55e5:	48 89 c1             	mov    rcx,rax
}
    55e8:	89 d0                	mov    eax,edx
    55ea:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    55f1:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    55f7:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    55fb:	e8 30 0b 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5600:	e9 a1 04 00 00       	jmp    5aa6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
                    }
    5605:	e9 80 00 00 00       	jmp    568a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x54a>
                        if(current_stdout.length() == 0 || streams.stdout_path != current_stdout)
    560a:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    560e:	e8 4d 0a 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5613:	48 83 f8 00          	cmp    rax,0x0
    5617:	74 1c                	je     5635 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4f5>
    5619:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5620:	48 83 c7 20          	add    rdi,0x20
    5624:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    5628:	e8 d3 11 00 00       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    562d:	34 ff                	xor    al,0xff
    562f:	a8 01                	test   al,0x1
    5631:	75 02                	jne    5635 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x4f5>
    5633:	eb 53                	jmp    5688 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x548>
                            FILE* stdout_res = freopen(streams.stdout_path.c_str(), "w", stdout);    
    5635:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    563c:	48 83 c7 20          	add    rdi,0x20
    5640:	e8 6b 08 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5645:	48 89 c7             	mov    rdi,rax
    5648:	48 8b 05 49 19 01 00 	mov    rax,QWORD PTR [rip+0x11949]        # 16f98 <stdout@GLIBC_2.2.5>
    564f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5652:	48 8d 35 81 ba 00 00 	lea    rsi,[rip+0xba81]        # 110da <_IO_stdin_used+0xda>
    5659:	e8 42 ef ff ff       	call   45a0 <freopen@plt>
    565e:	48 89 85 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rax
    5665:	eb 00                	jmp    5667 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x527>
    5667:	48 8b 85 78 fe ff ff 	mov    rax,QWORD PTR [rbp-0x188]
    566e:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
                            stdout_valid = (stdout_res != NULL);
    5675:	48 83 bd e8 fe ff ff 	cmp    QWORD PTR [rbp-0x118],0x0
    567c:	00 
    567d:	0f 95 c0             	setne  al
    5680:	24 01                	and    al,0x1
    5682:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
    5688:	eb 00                	jmp    568a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x54a>
                }
    568a:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    568e:	e8 9d 0a 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                bool stderr_valid = true;
    5693:	c6 85 e7 fe ff ff 01 	mov    BYTE PTR [rbp-0x119],0x1
                if(streams.stderr_path.length() > 0)
    569a:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    56a1:	48 83 c7 48          	add    rdi,0x48
    56a5:	e8 b6 09 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    56aa:	48 83 f8 00          	cmp    rax,0x0
    56ae:	0f 86 58 01 00 00    	jbe    580c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6cc>
                    std::string current_stderr = get_file_path(stdout);
    56b4:	48 8b 05 dd 18 01 00 	mov    rax,QWORD PTR [rip+0x118dd]        # 16f98 <stdout@GLIBC_2.2.5>
    56bb:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    56be:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    56c2:	e8 19 04 00 00       	call   5ae0 <_ZL13get_file_pathB5cxx11P8_IO_FILE>
    56c7:	eb 00                	jmp    56c9 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x589>
                    if(streams.stderr_append)
    56c9:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    56d0:	f6 40 68 01          	test   BYTE PTR [rax+0x68],0x1
    56d4:	0f 84 a9 00 00 00    	je     5783 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x643>
                        if(current_stderr.length() == 0 || streams.stderr_path != current_stderr)
    56da:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    56de:	e8 7d 09 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    56e3:	48 83 f8 00          	cmp    rax,0x0
    56e7:	74 1c                	je     5705 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5c5>
    56e9:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    56f0:	48 83 c7 48          	add    rdi,0x48
    56f4:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    56f8:	e8 03 11 00 00       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    56fd:	34 ff                	xor    al,0xff
    56ff:	a8 01                	test   al,0x1
    5701:	75 02                	jne    5705 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5c5>
    5703:	eb 79                	jmp    577e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x63e>
                            FILE* stderr_res = freopen(streams.stderr_path.c_str(), "a", stderr);
    5705:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    570c:	48 83 c7 48          	add    rdi,0x48
    5710:	e8 9b 07 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5715:	48 89 c7             	mov    rdi,rax
    5718:	48 8b 05 b1 18 01 00 	mov    rax,QWORD PTR [rip+0x118b1]        # 16fd0 <stderr@GLIBC_2.2.5>
    571f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5722:	48 8d 35 af b9 00 00 	lea    rsi,[rip+0xb9af]        # 110d8 <_IO_stdin_used+0xd8>
    5729:	e8 72 ee ff ff       	call   45a0 <freopen@plt>
    572e:	48 89 85 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rax
    5735:	eb 00                	jmp    5737 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x5f7>
    5737:	48 8b 85 70 fe ff ff 	mov    rax,QWORD PTR [rbp-0x190]
    573e:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
                            stderr_valid = (stderr_res != NULL);
    5745:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    574c:	00 
    574d:	0f 95 c0             	setne  al
    5750:	24 01                	and    al,0x1
    5752:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
                        }
    5758:	eb 24                	jmp    577e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x63e>
    575a:	f3 0f 1e fa          	endbr64
    575e:	48 89 c1             	mov    rcx,rax
}
    5761:	89 d0                	mov    eax,edx
    5763:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
    576a:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
                }
    5770:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    5774:	e8 b7 09 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5779:	e9 28 03 00 00       	jmp    5aa6 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x966>
                    }
    577e:	e9 80 00 00 00       	jmp    5803 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c3>
                        if(current_stderr.length() == 0 || streams.stderr_path != current_stderr)
    5783:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    5787:	e8 d4 08 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    578c:	48 83 f8 00          	cmp    rax,0x0
    5790:	74 1c                	je     57ae <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x66e>
    5792:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    5799:	48 83 c7 48          	add    rdi,0x48
    579d:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    57a1:	e8 5a 10 00 00       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    57a6:	34 ff                	xor    al,0xff
    57a8:	a8 01                	test   al,0x1
    57aa:	75 02                	jne    57ae <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x66e>
    57ac:	eb 53                	jmp    5801 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c1>
                            FILE* stderr_res = freopen(streams.stderr_path.c_str(), "w", stderr);    
    57ae:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    57b5:	48 83 c7 48          	add    rdi,0x48
    57b9:	e8 f2 06 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    57be:	48 89 c7             	mov    rdi,rax
    57c1:	48 8b 05 08 18 01 00 	mov    rax,QWORD PTR [rip+0x11808]        # 16fd0 <stderr@GLIBC_2.2.5>
    57c8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57cb:	48 8d 35 08 b9 00 00 	lea    rsi,[rip+0xb908]        # 110da <_IO_stdin_used+0xda>
    57d2:	e8 c9 ed ff ff       	call   45a0 <freopen@plt>
    57d7:	48 89 85 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rax
    57de:	eb 00                	jmp    57e0 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6a0>
    57e0:	48 8b 85 68 fe ff ff 	mov    rax,QWORD PTR [rbp-0x198]
    57e7:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
                            stderr_valid = (stderr_res != NULL);
    57ee:	48 83 bd d0 fe ff ff 	cmp    QWORD PTR [rbp-0x130],0x0
    57f5:	00 
    57f6:	0f 95 c0             	setne  al
    57f9:	24 01                	and    al,0x1
    57fb:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
    5801:	eb 00                	jmp    5803 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6c3>
                }
    5803:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    5807:	e8 24 09 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
                if(!stdin_valid || !stdout_valid || !stderr_valid)
    580c:	f6 85 0b ff ff ff 01 	test   BYTE PTR [rbp-0xf5],0x1
    5813:	74 12                	je     5827 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6e7>
    5815:	f6 85 ff fe ff ff 01 	test   BYTE PTR [rbp-0x101],0x1
    581c:	74 09                	je     5827 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6e7>
    581e:	f6 85 e7 fe ff ff 01 	test   BYTE PTR [rbp-0x119],0x1
    5825:	75 6c                	jne    5893 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x753>
                    terminal.print_error("Unable to redirect child stdin, stdout and stderr\r\n");
    5827:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    582e:	48 8d 35 a7 b8 00 00 	lea    rsi,[rip+0xb8a7]        # 110dc <_IO_stdin_used+0xdc>
    5835:	31 c0                	xor    eax,eax
    5837:	e8 f4 3a 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    583c:	eb 00                	jmp    583e <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x6fe>
                    fclose(stdin);
    583e:	48 8b 05 7b 17 01 00 	mov    rax,QWORD PTR [rip+0x1177b]        # 16fc0 <stdin@GLIBC_2.2.5>
    5845:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5848:	e8 13 ed ff ff       	call   4560 <fclose@plt>
    584d:	eb 00                	jmp    584f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x70f>
                    fclose(stdout);
    584f:	48 8b 05 42 17 01 00 	mov    rax,QWORD PTR [rip+0x11742]        # 16f98 <stdout@GLIBC_2.2.5>
    5856:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    5859:	e8 02 ed ff ff       	call   4560 <fclose@plt>
    585e:	eb 00                	jmp    5860 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x720>
                    fclose(stderr);
    5860:	48 8b 05 69 17 01 00 	mov    rax,QWORD PTR [rip+0x11769]        # 16fd0 <stderr@GLIBC_2.2.5>
    5867:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    586a:	e8 f1 ec ff ff       	call   4560 <fclose@plt>
    586f:	eb 00                	jmp    5871 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x731>
                    _exit(1);
    5871:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5878:	00 00 
    587a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    587e:	48 39 c8             	cmp    rax,rcx
    5881:	0f 85 54 02 00 00    	jne    5adb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    5887:	bf 01 00 00 00       	mov    edi,0x1
    588c:	e8 0f ef ff ff       	call   47a0 <_exit@plt>
    5891:	eb 00                	jmp    5893 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x753>
                int res = execve(paths[i].c_str(), arguments, __environ);
    5893:	48 8b b5 18 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xe8]
    589a:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    589e:	e8 ad 0e 00 00       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    58a3:	48 89 c7             	mov    rdi,rax
    58a6:	e8 05 06 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    58ab:	48 89 c7             	mov    rdi,rax
    58ae:	48 8b b5 10 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf0]
    58b5:	48 8b 05 e4 16 01 00 	mov    rax,QWORD PTR [rip+0x116e4]        # 16fa0 <__environ@GLIBC_2.2.5>
    58bc:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    58bf:	e8 0c ef ff ff       	call   47d0 <execve@plt>
    58c4:	89 85 cc fe ff ff    	mov    DWORD PTR [rbp-0x134],eax
                fclose(stdin);
    58ca:	48 8b 05 ef 16 01 00 	mov    rax,QWORD PTR [rip+0x116ef]        # 16fc0 <stdin@GLIBC_2.2.5>
    58d1:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    58d4:	e8 87 ec ff ff       	call   4560 <fclose@plt>
    58d9:	eb 00                	jmp    58db <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x79b>
                fclose(stdout);
    58db:	48 8b 05 b6 16 01 00 	mov    rax,QWORD PTR [rip+0x116b6]        # 16f98 <stdout@GLIBC_2.2.5>
    58e2:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    58e5:	e8 76 ec ff ff       	call   4560 <fclose@plt>
    58ea:	eb 00                	jmp    58ec <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ac>
                fclose(stderr);
    58ec:	48 8b 05 dd 16 01 00 	mov    rax,QWORD PTR [rip+0x116dd]        # 16fd0 <stderr@GLIBC_2.2.5>
    58f3:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    58f6:	e8 65 ec ff ff       	call   4560 <fclose@plt>
    58fb:	eb 00                	jmp    58fd <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7bd>
                _exit(res);
    58fd:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    5903:	89 85 64 fe ff ff    	mov    DWORD PTR [rbp-0x19c],eax
    5909:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5910:	00 00 
    5912:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5916:	48 39 c8             	cmp    rax,rcx
    5919:	0f 85 bc 01 00 00    	jne    5adb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    591f:	8b bd 64 fe ff ff    	mov    edi,DWORD PTR [rbp-0x19c]
    5925:	e8 76 ee ff ff       	call   47a0 <_exit@plt>
    592a:	eb 00                	jmp    592c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7ec>
    592c:	48 8d bd 64 ff ff ff 	lea    rdi,[rbp-0x9c]
                wait(&status);
    5933:	e8 f8 ec ff ff       	call   4630 <wait@plt>
    5938:	eb 00                	jmp    593a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x7fa>
                terminal.enable_raw_mode();
    593a:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    5941:	e8 3a 37 00 00       	call   9080 <_ZN10TerminalIO15enable_raw_modeEv>
    5946:	eb 00                	jmp    5948 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x808>
    5948:	eb 00                	jmp    594a <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80a>
    594a:	eb 00                	jmp    594c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x80c>
            for(size_t i = 0; i < args.size(); i++)
    594c:	48 c7 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],0x0
    5953:	00 00 00 00 
    5957:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
    595e:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5965:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    596c:	e8 ef 04 00 00       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    5971:	48 89 c1             	mov    rcx,rax
    5974:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    597b:	48 39 c8             	cmp    rax,rcx
    597e:	73 41                	jae    59c1 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x881>
                delete[] arguments[i];
    5980:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    5987:	48 8b 8d c0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x140]
    598e:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    5992:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    5999:	48 83 f8 00          	cmp    rax,0x0
    599d:	74 0c                	je     59ab <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x86b>
    599f:	48 8b bd 50 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b0]
    59a6:	e8 a5 ec ff ff       	call   4650 <_ZdaPv@plt>
            }
    59ab:	eb 00                	jmp    59ad <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x86d>
            for(size_t i = 0; i < args.size(); i++)
    59ad:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
    59b4:	48 83 c0 01          	add    rax,0x1
    59b8:	48 89 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rax
    59bf:	eb 96                	jmp    5957 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x817>
            delete[] arguments;
    59c1:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    59c8:	48 89 85 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rax
    59cf:	48 83 f8 00          	cmp    rax,0x0
    59d3:	74 0c                	je     59e1 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8a1>
    59d5:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    59dc:	e8 6f ec ff ff       	call   4650 <_ZdaPv@plt>
            return status;
    59e1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    59e7:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
    59ed:	c7 85 bc fe ff ff 01 	mov    DWORD PTR [rbp-0x144],0x1
    59f4:	00 00 00 
    59f7:	eb 77                	jmp    5a70 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x930>
    }
    59f9:	eb 00                	jmp    59fb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x8bb>
    for(size_t i = 0; i < paths.size(); i++)
    59fb:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    5a02:	48 83 c0 01          	add    rax,0x1
    5a06:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    5a0d:	e9 5d f9 ff ff       	jmp    536f <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x22f>
    terminal.print_error("Unknown command '%s'\r\n", args[0].c_str());
    5a12:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    5a19:	48 89 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],rax
    5a20:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    5a27:	31 c0                	xor    eax,eax
    5a29:	89 85 44 fe ff ff    	mov    DWORD PTR [rbp-0x1bc],eax
    5a2f:	89 c6                	mov    esi,eax
    5a31:	e8 4a 04 00 00       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    5a36:	48 89 c7             	mov    rdi,rax
    5a39:	e8 72 04 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5a3e:	48 8b bd 38 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1c8]
    5a45:	48 89 c2             	mov    rdx,rax
    5a48:	8b 85 44 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1bc]
    5a4e:	48 8d 35 bb b6 00 00 	lea    rsi,[rip+0xb6bb]        # 11110 <_IO_stdin_used+0x110>
    5a55:	e8 d6 38 00 00       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    5a5a:	eb 00                	jmp    5a5c <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x91c>
    return -1;
    5a5c:	c7 85 60 ff ff ff ff 	mov    DWORD PTR [rbp-0xa0],0xffffffff
    5a63:	ff ff ff 
    5a66:	c7 85 bc fe ff ff 01 	mov    DWORD PTR [rbp-0x144],0x1
    5a6d:	00 00 00 
    5a70:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
}
    5a74:	e8 67 0b 00 00       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5a79:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    5a7f:	89 85 34 fe ff ff    	mov    DWORD PTR [rbp-0x1cc],eax
    5a85:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5a8c:	00 00 
    5a8e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5a92:	48 39 c8             	cmp    rax,rcx
    5a95:	75 44                	jne    5adb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    5a97:	8b 85 34 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1cc]
    5a9d:	48 81 c4 e0 01 00 00 	add    rsp,0x1e0
    5aa4:	5d                   	pop    rbp
    5aa5:	c3                   	ret
    5aa6:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    5aaa:	e8 31 0b 00 00       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    5aaf:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    5ab6:	48 89 85 28 fe ff ff 	mov    QWORD PTR [rbp-0x1d8],rax
    5abd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5ac4:	00 00 
    5ac6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5aca:	48 39 c8             	cmp    rax,rcx
    5acd:	75 0c                	jne    5adb <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream+0x99b>
    5acf:	48 8b bd 28 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1d8]
    5ad6:	e8 85 e9 ff ff       	call   4460 <_Unwind_Resume@plt>
    5adb:	e8 d0 ea ff ff       	call   45b0 <__stack_chk_fail@plt>

0000000000005ae0 <_ZL13get_file_pathB5cxx11P8_IO_FILE>:
{
    5ae0:	55                   	push   rbp
    5ae1:	48 89 e5             	mov    rbp,rsp
    5ae4:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    5aeb:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    5af2:	48 89 f8             	mov    rax,rdi
    5af5:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    5afc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5b03:	00 00 
    5b05:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5b09:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    5b10:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    int file_no = fileno(handle);
    5b17:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    5b1e:	e8 6d ea ff ff       	call   4590 <fileno@plt>
    5b23:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    if(file_no == -1)
    5b29:	83 bd 1c ff ff ff ff 	cmp    DWORD PTR [rbp-0xe4],0xffffffff
    5b30:	75 5e                	jne    5b90 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0xb0>
    5b32:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5b39:	48 8d 55 d7          	lea    rdx,[rbp-0x29]
    5b3d:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    5b44:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    5b4b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    5b4f:	31 c0                	xor    eax,eax
    5b51:	89 c6                	mov    esi,eax
        return NULL;
    5b53:	e8 28 05 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5b58:	eb 00                	jmp    5b5a <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x7a>
    5b5a:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    5b5e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    5b65:	e9 96 02 00 00       	jmp    5e00 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x320>
    5b6a:	f3 0f 1e fa          	endbr64
    5b6e:	48 89 c1             	mov    rcx,rax
}
    5b71:	89 d0                	mov    eax,edx
    5b73:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5b7a:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5b80:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    5b84:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
        return NULL;
    5b8b:	e9 92 02 00 00       	jmp    5e22 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x342>
    std::string proclink;
    5b90:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5b94:	e8 c7 08 00 00       	call   6460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    int buffer_size = std::snprintf(proclink.data(), 0, "/proc/self/fd/%d", file_no);
    5b99:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5b9d:	e8 1e 33 00 00       	call   8ec0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    5ba2:	48 89 c7             	mov    rdi,rax
    5ba5:	8b 8d 1c ff ff ff    	mov    ecx,DWORD PTR [rbp-0xe4]
    5bab:	31 c0                	xor    eax,eax
    5bad:	89 c6                	mov    esi,eax
    5baf:	48 8d 15 06 b6 00 00 	lea    rdx,[rip+0xb606]        # 111bc <_IO_stdin_used+0x1bc>
    5bb6:	b0 00                	mov    al,0x0
    5bb8:	e8 b3 eb ff ff       	call   4770 <snprintf@plt>
    5bbd:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    if(buffer_size < 0)
    5bc3:	83 bd 08 ff ff ff 00 	cmp    DWORD PTR [rbp-0xf8],0x0
    5bca:	7d 6b                	jge    5c37 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x157>
    5bcc:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5bd3:	48 8d 55 d6          	lea    rdx,[rbp-0x2a]
    5bd7:	48 89 95 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdx
    5bde:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    5be5:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
        return "";
    5be9:	48 8d 35 48 b8 00 00 	lea    rsi,[rip+0xb848]        # 11438 <_IO_stdin_used+0x438>
    5bf0:	e8 8b 04 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5bf5:	eb 00                	jmp    5bf7 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x117>
    5bf7:	48 8d 45 d6          	lea    rax,[rbp-0x2a]
    5bfb:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    5c02:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5c09:	00 00 00 
    5c0c:	e9 d9 01 00 00       	jmp    5dea <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5c11:	f3 0f 1e fa          	endbr64
    5c15:	48 89 c1             	mov    rcx,rax
}
    5c18:	89 d0                	mov    eax,edx
    5c1a:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5c21:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5c27:	48 8d 45 d6          	lea    rax,[rbp-0x2a]
    5c2b:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
        return "";
    5c32:	e9 be 01 00 00       	jmp    5df5 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    proclink.reserve(buffer_size / sizeof(char));
    5c37:	48 63 b5 08 ff ff ff 	movsxd rsi,DWORD PTR [rbp-0xf8]
    5c3e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5c42:	e8 99 32 00 00       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    5c47:	eb 00                	jmp    5c49 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x169>
    buffer_size = std::snprintf(proclink.data(), buffer_size, "/proc/self/fd/%d", file_no);
    5c49:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5c4d:	e8 6e 32 00 00       	call   8ec0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    5c52:	48 89 c7             	mov    rdi,rax
    5c55:	48 63 b5 08 ff ff ff 	movsxd rsi,DWORD PTR [rbp-0xf8]
    5c5c:	8b 8d 1c ff ff ff    	mov    ecx,DWORD PTR [rbp-0xe4]
    5c62:	48 8d 15 53 b5 00 00 	lea    rdx,[rip+0xb553]        # 111bc <_IO_stdin_used+0x1bc>
    5c69:	b0 00                	mov    al,0x0
    5c6b:	e8 00 eb ff ff       	call   4770 <snprintf@plt>
    5c70:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    if(buffer_size < 0)
    5c76:	83 bd 08 ff ff ff 00 	cmp    DWORD PTR [rbp-0xf8],0x0
    5c7d:	0f 8d 83 00 00 00    	jge    5d06 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x226>
    5c83:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5c8a:	48 8d 55 d5          	lea    rdx,[rbp-0x2b]
    5c8e:	48 89 95 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rdx
    5c95:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    5c9c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
        return "";
    5ca0:	48 8d 35 91 b7 00 00 	lea    rsi,[rip+0xb791]        # 11438 <_IO_stdin_used+0x438>
    5ca7:	e8 d4 03 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5cac:	eb 00                	jmp    5cae <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x1ce>
    5cae:	48 8d 45 d5          	lea    rax,[rbp-0x2b]
    5cb2:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    5cb9:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5cc0:	00 00 00 
    5cc3:	e9 22 01 00 00       	jmp    5dea <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5cc8:	f3 0f 1e fa          	endbr64
    5ccc:	48 89 c1             	mov    rcx,rax
}
    5ccf:	89 d0                	mov    eax,edx
    5cd1:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5cd8:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5cde:	e9 12 01 00 00       	jmp    5df5 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    5ce3:	f3 0f 1e fa          	endbr64
    5ce7:	48 89 c1             	mov    rcx,rax
    5cea:	89 d0                	mov    eax,edx
    5cec:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5cf3:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5cf9:	48 8d 45 d5          	lea    rax,[rbp-0x2b]
    5cfd:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
        return "";
    5d01:	e9 ef 00 00 00       	jmp    5df5 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    char* res = realpath(proclink.c_str(), NULL);
    5d06:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5d0a:	e8 a1 01 00 00       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    5d0f:	48 89 c7             	mov    rdi,rax
    5d12:	31 c0                	xor    eax,eax
    5d14:	89 c6                	mov    esi,eax
    5d16:	e8 65 e7 ff ff       	call   4480 <realpath@plt>
    5d1b:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    if(res == NULL)
    5d22:	48 83 bd f8 fe ff ff 	cmp    QWORD PTR [rbp-0x108],0x0
    5d29:	00 
    5d2a:	75 5f                	jne    5d8b <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x2ab>
    5d2c:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    5d33:	48 8d 55 d4          	lea    rdx,[rbp-0x2c]
    5d37:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
    5d3e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    5d45:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
        return "";
    5d49:	48 8d 35 e8 b6 00 00 	lea    rsi,[rip+0xb6e8]        # 11438 <_IO_stdin_used+0x438>
    5d50:	e8 2b 03 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5d55:	eb 00                	jmp    5d57 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x277>
    5d57:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
    5d5b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    5d5f:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5d66:	00 00 00 
    5d69:	eb 7f                	jmp    5dea <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5d6b:	f3 0f 1e fa          	endbr64
    5d6f:	48 89 c1             	mov    rcx,rax
}
    5d72:	89 d0                	mov    eax,edx
    5d74:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5d7b:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5d81:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
    5d85:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
        return "";
    5d89:	eb 6a                	jmp    5df5 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
    5d8b:	48 8b bd e8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x118]
    return res;
    5d92:	48 8b b5 f8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x108]
    5d99:	48 8d 55 d3          	lea    rdx,[rbp-0x2d]
    5d9d:	48 89 95 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rdx
    5da4:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    5dab:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    5daf:	e8 cc 02 00 00       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    5db4:	eb 00                	jmp    5db6 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x2d6>
    5db6:	48 8d 45 d3          	lea    rax,[rbp-0x2d]
    5dba:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    5dbe:	c7 85 04 ff ff ff 01 	mov    DWORD PTR [rbp-0xfc],0x1
    5dc5:	00 00 00 
    5dc8:	eb 20                	jmp    5dea <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x30a>
    5dca:	f3 0f 1e fa          	endbr64
    5dce:	48 89 c1             	mov    rcx,rax
}
    5dd1:	89 d0                	mov    eax,edx
    5dd3:	48 89 8d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rcx
    5dda:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    5de0:	48 8d 45 d3          	lea    rax,[rbp-0x2d]
    5de4:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    return res;
    5de8:	eb 0b                	jmp    5df5 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x315>
}
    5dea:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5dee:	e8 3d 03 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5df3:	eb 0b                	jmp    5e00 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x320>
    5df5:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    5df9:	e8 32 03 00 00       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    5dfe:	eb 22                	jmp    5e22 <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x342>
    5e00:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5e07:	00 00 
    5e09:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e0d:	48 39 c8             	cmp    rax,rcx
    5e10:	75 3c                	jne    5e4e <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x36e>
    5e12:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    5e19:	48 81 c4 20 01 00 00 	add    rsp,0x120
    5e20:	5d                   	pop    rbp
    5e21:	c3                   	ret
        return NULL;
    5e22:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    5e29:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
    5e30:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5e37:	00 00 
    5e39:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e3d:	48 39 c8             	cmp    rax,rcx
    5e40:	75 0c                	jne    5e4e <_ZL13get_file_pathB5cxx11P8_IO_FILE+0x36e>
    5e42:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    5e49:	e8 12 e6 ff ff       	call   4460 <_Unwind_Resume@plt>
    5e4e:	e8 5d e7 ff ff       	call   45b0 <__stack_chk_fail@plt>
    5e53:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5e5a:	00 00 00 
    5e5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>:
      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5e60:	f3 0f 1e fa          	endbr64
    5e64:	55                   	push   rbp
    5e65:	48 89 e5             	mov    rbp,rsp
    5e68:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5e6c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5e70:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    5e74:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    5e77:	48 29 c8             	sub    rax,rcx
    5e7a:	48 c1 f8 05          	sar    rax,0x5
    5e7e:	5d                   	pop    rbp
    5e7f:	c3                   	ret

0000000000005e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
       *  see at().)
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const_reference
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      {
    5e80:	f3 0f 1e fa          	endbr64
    5e84:	55                   	push   rbp
    5e85:	48 89 e5             	mov    rbp,rsp
    5e88:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5e8c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5e90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
    5e94:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5e97:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    5e9b:	48 c1 e1 05          	shl    rcx,0x5
    5e9f:	48 01 c8             	add    rax,rcx
    5ea2:	5d                   	pop    rbp
    5ea3:	c3                   	ret
    5ea4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5eab:	00 00 00 
    5eae:	66 90                	xchg   ax,ax

0000000000005eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
       *  happen.
      */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const _CharT*
      c_str() const _GLIBCXX_NOEXCEPT
      { return _M_data(); }
    5eb0:	f3 0f 1e fa          	endbr64
    5eb4:	55                   	push   rbp
    5eb5:	48 89 e5             	mov    rbp,rsp
    5eb8:	48 83 ec 10          	sub    rsp,0x10
    5ebc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5ec0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    5ec4:	e8 d7 09 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5ec9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    5ecd:	eb 00                	jmp    5ecf <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv+0x1f>
    5ecf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5ed3:	48 83 c4 10          	add    rsp,0x10
    5ed7:	5d                   	pop    rbp
    5ed8:	c3                   	ret
    5ed9:	f3 0f 1e fa          	endbr64
    5edd:	48 89 c7             	mov    rdi,rax
    5ee0:	e8 db 09 00 00       	call   68c0 <__clang_call_terminate>
    5ee5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5eec:	00 00 00 
    5eef:	90                   	nop

0000000000005ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>:
      {
    5ef0:	f3 0f 1e fa          	endbr64
    5ef4:	55                   	push   rbp
    5ef5:	48 89 e5             	mov    rbp,rsp
    5ef8:	48 81 ec b0 00 00 00 	sub    rsp,0xb0
    5eff:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5f06:	00 00 
    5f08:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5f0c:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    5f10:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    5f14:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    5f18:	48 89 bd 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdi
    5f1f:	48 89 f8             	mov    rax,rdi
    5f22:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
      : _M_dataplus(_M_local_data(),
    5f29:	e8 b2 09 00 00       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    5f2e:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
    5f35:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5f39:	e8 d2 09 00 00       	call   6910 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    5f3e:	48 8b bd 70 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x90]
    5f45:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    5f4c:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    5f50:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    5f54:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    [[__gnu__::__always_inline__]]
    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    { return _Base_type::select_on_container_copy_construction(__a); }
    5f58:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5f5c:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    5f60:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
       *  @return @c __rhs
      */
      [[__gnu__::__always_inline__]]
      static _GLIBCXX20_CONSTEXPR allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
      { return __rhs; }
    5f64:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    5f68:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    5f6c:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    5f70:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
      allocator() _GLIBCXX_NOTHROW { }

      __attribute__((__always_inline__))
      _GLIBCXX20_CONSTEXPR
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
      : __allocator_base<_Tp>(__a) { }
    5f74:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f78:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    5f7c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      : _M_dataplus(_M_local_data(),
    5f80:	e8 ab 09 00 00       	call   6930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    5f85:	eb 00                	jmp    5f87 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x97>
    5f87:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    5f8b:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
	_M_construct(__str._M_data(), __str._M_data() + __str.length(),
    5f8f:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5f93:	e8 08 09 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5f98:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    5f9f:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5fa3:	e8 f8 08 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    5fa8:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    5faf:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    5fb3:	e8 a8 00 00 00       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    5fb8:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    5fbf:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    5fc6:	48 8b b5 60 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa0]
    5fcd:	48 01 c2             	add    rdx,rax
    5fd0:	e8 9b 09 00 00       	call   6970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
    5fd5:	eb 00                	jmp    5fd7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0xe7>
      }
    5fd7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5fde:	00 00 
    5fe0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    5fe4:	48 39 c8             	cmp    rax,rcx
    5fe7:	75 68                	jne    6051 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x161>
    5fe9:	48 81 c4 b0 00 00 00 	add    rsp,0xb0
    5ff0:	5d                   	pop    rbp
    5ff1:	c3                   	ret
    5ff2:	f3 0f 1e fa          	endbr64
    5ff6:	48 89 c1             	mov    rcx,rax
    5ff9:	89 d0                	mov    eax,edx
    5ffb:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    5fff:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    6002:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    6006:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
      : _M_dataplus(_M_local_data(),
    600a:	eb 1c                	jmp    6028 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x138>
    600c:	f3 0f 1e fa          	endbr64
    6010:	48 8b bd 70 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x90]
    6017:	48 89 c1             	mov    rcx,rax
      }
    601a:	89 d0                	mov    eax,edx
    601c:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    6020:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    6023:	e8 98 0a 00 00       	call   6ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
      : _M_dataplus(_M_local_data(),
    6028:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    602c:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    6033:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    603a:	00 00 
    603c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6040:	48 39 c8             	cmp    rax,rcx
    6043:	75 0c                	jne    6051 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_+0x161>
    6045:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    604c:	e8 0f e4 ff ff       	call   4460 <_Unwind_Resume@plt>
    6051:	e8 5a e5 ff ff       	call   45b0 <__stack_chk_fail@plt>
    6056:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    605d:	00 00 00 

0000000000006060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
      { return _M_string_length; }
    6060:	f3 0f 1e fa          	endbr64
    6064:	55                   	push   rbp
    6065:	48 89 e5             	mov    rbp,rsp
    6068:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    606c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6070:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    6074:	5d                   	pop    rbp
    6075:	c3                   	ret
    6076:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    607d:	00 00 00 

0000000000006080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>:
      {
    6080:	f3 0f 1e fa          	endbr64
    6084:	55                   	push   rbp
    6085:	48 89 e5             	mov    rbp,rsp
    6088:	48 83 ec 50          	sub    rsp,0x50
    608c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6090:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6094:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    6098:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    609c:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
      : _M_dataplus(_M_local_data(), __a)
    60a0:	e8 3b 08 00 00       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    60a5:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    60a9:	48 89 c6             	mov    rsi,rax
    60ac:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    60b0:	e8 0b 10 00 00       	call   70c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>
	if (__s == 0)
    60b5:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    60ba:	75 29                	jne    60e5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x65>
	  std::__throw_logic_error(__N("basic_string: "
    60bc:	48 8d 3d 7f b0 00 00 	lea    rdi,[rip+0xb07f]        # 11142 <_IO_stdin_used+0x142>
    60c3:	e8 48 e4 ff ff       	call   4510 <_ZSt19__throw_logic_errorPKc@plt>
    60c8:	eb 00                	jmp    60ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x4a>
    60ca:	f3 0f 1e fa          	endbr64
    60ce:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    60d2:	48 89 c1             	mov    rcx,rax
      }
    60d5:	89 d0                	mov    eax,edx
    60d7:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    60db:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    60de:	e8 dd 09 00 00       	call   6ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
    60e3:	eb 3b                	jmp    6120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0xa0>
	const _CharT* __end = __s + traits_type::length(__s);
    60e5:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    60e9:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    60ed:	e8 0e 10 00 00       	call   7100 <_ZNSt11char_traitsIcE6lengthEPKc>
    60f2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    60f6:	eb 00                	jmp    60f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x78>
    60f8:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    60fc:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
    6100:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    6104:	48 01 c8             	add    rax,rcx
    6107:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	_M_construct(__s, __end, forward_iterator_tag());
    610b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    610f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    6113:	e8 08 10 00 00       	call   7120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
    6118:	eb 00                	jmp    611a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_+0x9a>
      }
    611a:	48 83 c4 50          	add    rsp,0x50
    611e:	5d                   	pop    rbp
    611f:	c3                   	ret
    6120:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    6124:	e8 37 e3 ff ff       	call   4460 <_Unwind_Resume@plt>
    6129:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>:
      { _M_dispose(); }
    6130:	f3 0f 1e fa          	endbr64
    6134:	55                   	push   rbp
    6135:	48 89 e5             	mov    rbp,rsp
    6138:	48 83 ec 10          	sub    rsp,0x10
    613c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6140:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6144:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6148:	e8 d3 0d 00 00       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    614d:	eb 00                	jmp    614f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev+0x1f>
    614f:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6153:	e8 68 09 00 00       	call   6ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>
    6158:	48 83 c4 10          	add    rsp,0x10
    615c:	5d                   	pop    rbp
    615d:	c3                   	ret
    615e:	f3 0f 1e fa          	endbr64
    6162:	48 89 c7             	mov    rdi,rax
    6165:	e8 56 07 00 00       	call   68c0 <__clang_call_terminate>
    616a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
      {
    6170:	f3 0f 1e fa          	endbr64
    6174:	55                   	push   rbp
    6175:	48 89 e5             	mov    rbp,rsp
    6178:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    617f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    6183:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    6187:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    618b:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
	const bool __equal_allocs = _Alloc_traits::_S_always_equal()
    618f:	c6 45 cf 01          	mov    BYTE PTR [rbp-0x31],0x1
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    6193:	e8 c8 0d 00 00       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    6198:	88 45 b7             	mov    BYTE PTR [rbp-0x49],al
    619b:	eb 00                	jmp    619d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2d>
    619d:	8a 45 b7             	mov    al,BYTE PTR [rbp-0x49]
	    && !__equal_allocs)
    61a0:	a8 01                	test   al,0x1
    61a2:	75 3d                	jne    61e1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    61a4:	eb 00                	jmp    61a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x36>
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    61a6:	b0 01                	mov    al,0x1
    61a8:	a8 01                	test   al,0x1
    61aa:	75 35                	jne    61e1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    61ac:	eb 00                	jmp    61ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x3e>
    61ae:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_destroy(_M_allocated_capacity);
    61b2:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    61b6:	e8 05 0e 00 00       	call   6fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
    61bb:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_data(_M_local_data());
    61bf:	e8 1c 07 00 00       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    61c4:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    61c8:	48 89 c6             	mov    rsi,rax
    61cb:	e8 30 09 00 00       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    61d0:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    61d4:	31 c0                	xor    eax,eax
    61d6:	89 c6                	mov    esi,eax
	    _M_set_length(0);
    61d8:	e8 93 0a 00 00       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    61dd:	eb 00                	jmp    61df <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x6f>
	  }
    61df:	eb 00                	jmp    61e1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x71>
    61e1:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
    61e5:	e8 d6 0b 00 00       	call   6dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    61ea:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    61ee:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    61f2:	e8 c9 0b 00 00       	call   6dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    61f7:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    61fb:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    61ff:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__str._M_is_local())
    6203:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6207:	e8 54 0d 00 00       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    620c:	88 45 9f             	mov    BYTE PTR [rbp-0x61],al
    620f:	eb 00                	jmp    6211 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xa1>
    6211:	8a 45 9f             	mov    al,BYTE PTR [rbp-0x61]
    6214:	a8 01                	test   al,0x1
    6216:	75 02                	jne    621a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xaa>
    6218:	eb 6e                	jmp    6288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x118>
    621a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
	    if (__builtin_expect(std::__addressof(__str) != this, true))
    621e:	48 39 45 d0          	cmp    QWORD PTR [rbp-0x30],rax
    6222:	74 5f                	je     6283 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x113>
		if (__str.size())
    6224:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6228:	e8 e3 10 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    622d:	48 83 f8 00          	cmp    rax,0x0
    6231:	74 37                	je     626a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xfa>
    6233:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
		  this->_S_copy(_M_data(), __str._M_data(), __str.size());
    6237:	e8 64 06 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    623c:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    6240:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6244:	e8 57 06 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6249:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    624d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6251:	e8 ba 10 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    6256:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    625a:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    625e:	48 89 c2             	mov    rdx,rax
    6261:	e8 da 0b 00 00       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    6266:	eb 00                	jmp    6268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xf8>
    6268:	eb 00                	jmp    626a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xfa>
		_M_set_length(__str.size());
    626a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    626e:	e8 9d 10 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    6273:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    6277:	48 89 c6             	mov    rsi,rax
    627a:	e8 f1 09 00 00       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    627f:	eb 00                	jmp    6281 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x111>
	      }
    6281:	eb 00                	jmp    6283 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x113>
	  }
    6283:	e9 ca 00 00 00       	jmp    6352 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e2>
    6288:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    pointer __data = nullptr;
    628c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    6293:	00 
	    if (!_M_is_local())
    6294:	e8 c7 0c 00 00       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    6299:	88 45 87             	mov    BYTE PTR [rbp-0x79],al
    629c:	eb 00                	jmp    629e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x12e>
    629e:	8a 45 87             	mov    al,BYTE PTR [rbp-0x79]
    62a1:	a8 01                	test   al,0x1
    62a3:	75 1e                	jne    62c3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x153>
    62a5:	eb 00                	jmp    62a7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x137>
    62a7:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
		    __data = _M_data();
    62ab:	e8 f0 05 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    62b0:	48 89 c1             	mov    rcx,rax
    62b3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    62b7:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
		    __capacity = _M_allocated_capacity;
    62bb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    62bf:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	    _M_data(__str._M_data());
    62c3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    62c7:	e8 d4 05 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    62cc:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    62d0:	48 89 c6             	mov    rsi,rax
    62d3:	e8 28 08 00 00       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_length(__str.length());
    62d8:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    62dc:	e8 7f fd ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    62e1:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    62e5:	48 89 c6             	mov    rsi,rax
    62e8:	e8 13 0c 00 00       	call   6f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
    62ed:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	    _M_capacity(__str._M_allocated_capacity);
    62f1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    62f5:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    62f9:	e8 f2 08 00 00       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	    if (__data)
    62fe:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    6303:	74 1c                	je     6321 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1b1>
		__str._M_data(__data);
    6305:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6309:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    630d:	e8 ee 07 00 00       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
		__str._M_capacity(__capacity);
    6312:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6316:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    631a:	e8 d1 08 00 00       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	      }
    631f:	eb 2f                	jmp    6350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e0>
	      __str._M_data(__str._M_use_local_data());
    6321:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6325:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    632c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6330:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6334:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6338:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return _M_local_data();
    633c:	e8 9f 05 00 00       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6341:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    6348:	48 89 c6             	mov    rsi,rax
	      __str._M_data(__str._M_use_local_data());
    634b:	e8 b0 07 00 00       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    6350:	eb 00                	jmp    6352 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1e2>
	__str.clear();
    6352:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    6356:	e8 d5 0f 00 00       	call   7330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>
    635b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
	return *this;
    635f:	48 81 c4 90 00 00 00 	add    rsp,0x90
    6366:	5d                   	pop    rbp
    6367:	c3                   	ret
    6368:	f3 0f 1e fa          	endbr64
    636c:	48 89 c7             	mov    rdi,rax
	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
    636f:	e8 4c 05 00 00       	call   68c0 <__clang_call_terminate>
    6374:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    637b:	00 00 00 
    637e:	66 90                	xchg   ax,ax

0000000000006380 <_Z14allocate_arrayIPcEPT_m>:
#include <cstdio>
#include <cstdlib>

template<class T>
T* allocate_array(std::size_t len)
{
    6380:	f3 0f 1e fa          	endbr64
    6384:	55                   	push   rbp
    6385:	48 89 e5             	mov    rbp,rsp
    6388:	48 83 ec 10          	sub    rsp,0x10
    638c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   T* res = new T[len];
    6390:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6394:	b9 08 00 00 00       	mov    ecx,0x8
    6399:	48 f7 e1             	mul    rcx
    639c:	48 89 c7             	mov    rdi,rax
    639f:	0f 90 c1             	seto   cl
    63a2:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    63a9:	f6 c1 01             	test   cl,0x1
    63ac:	48 0f 45 f8          	cmovne rdi,rax
    63b0:	e8 7b e0 ff ff       	call   4430 <_Znam@plt>
    63b5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   if(res == NULL)
    63b9:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    63be:	75 22                	jne    63e2 <_Z14allocate_arrayIPcEPT_m+0x62>
   {
        fprintf(stderr, "Error: Unable to allocate memory\r\n");
    63c0:	48 8b 05 09 0c 01 00 	mov    rax,QWORD PTR [rip+0x10c09]        # 16fd0 <stderr@GLIBC_2.2.5>
    63c7:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    63ca:	48 8d 35 fc ad 00 00 	lea    rsi,[rip+0xadfc]        # 111cd <_IO_stdin_used+0x1cd>
    63d1:	b0 00                	mov    al,0x0
    63d3:	e8 d8 e2 ff ff       	call   46b0 <fprintf@plt>
        exit(-1);
    63d8:	bf ff ff ff ff       	mov    edi,0xffffffff
    63dd:	e8 2e e2 ff ff       	call   4610 <exit@plt>
   }
   return res;
    63e2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63e6:	48 83 c4 10          	add    rsp,0x10
    63ea:	5d                   	pop    rbp
    63eb:	c3                   	ret
    63ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000063f0 <_Z14allocate_arrayIcEPT_m>:
{
    63f0:	f3 0f 1e fa          	endbr64
    63f4:	55                   	push   rbp
    63f5:	48 89 e5             	mov    rbp,rsp
    63f8:	48 83 ec 10          	sub    rsp,0x10
    63fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   T* res = new T[len];
    6400:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6404:	e8 27 e0 ff ff       	call   4430 <_Znam@plt>
    6409:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   if(res == NULL)
    640d:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    6412:	75 22                	jne    6436 <_Z14allocate_arrayIcEPT_m+0x46>
        fprintf(stderr, "Error: Unable to allocate memory\r\n");
    6414:	48 8b 05 b5 0b 01 00 	mov    rax,QWORD PTR [rip+0x10bb5]        # 16fd0 <stderr@GLIBC_2.2.5>
    641b:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    641e:	48 8d 35 a8 ad 00 00 	lea    rsi,[rip+0xada8]        # 111cd <_IO_stdin_used+0x1cd>
    6425:	b0 00                	mov    al,0x0
    6427:	e8 84 e2 ff ff       	call   46b0 <fprintf@plt>
        exit(-1);
    642c:	bf ff ff ff ff       	mov    edi,0xffffffff
    6431:	e8 da e1 ff ff       	call   4610 <exit@plt>
   return res;
    6436:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    643a:	48 83 c4 10          	add    rsp,0x10
    643e:	5d                   	pop    rbp
    643f:	c3                   	ret

0000000000006440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>:
      vector() = default;
    6440:	f3 0f 1e fa          	endbr64
    6444:	55                   	push   rbp
    6445:	48 89 e5             	mov    rbp,rsp
    6448:	48 83 ec 10          	sub    rsp,0x10
    644c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6450:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6454:	e8 17 0f 00 00       	call   7370 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    6459:	48 83 c4 10          	add    rsp,0x10
    645d:	5d                   	pop    rbp
    645e:	c3                   	ret
    645f:	90                   	nop

0000000000006460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>:
      {
    6460:	f3 0f 1e fa          	endbr64
    6464:	55                   	push   rbp
    6465:	48 89 e5             	mov    rbp,rsp
    6468:	48 83 ec 40          	sub    rsp,0x40
    646c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6473:	00 00 
    6475:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6479:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    647d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    6481:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
      : _M_dataplus(_M_local_data())
    6485:	e8 56 04 00 00       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    648a:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    648e:	48 89 c6             	mov    rsi,rax
    6491:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    6495:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    6499:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    649d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    64a1:	e8 8a 04 00 00       	call   6930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    64a6:	eb 00                	jmp    64a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x48>
    64a8:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    64ac:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    64b0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    64b4:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    64b8:	31 c0                	xor    eax,eax
    64ba:	89 c6                	mov    esi,eax
	_M_set_length(0);
    64bc:	e8 af 07 00 00       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    64c1:	eb 00                	jmp    64c3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x63>
      }
    64c3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    64ca:	00 00 
    64cc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    64d0:	48 39 c8             	cmp    rax,rcx
    64d3:	75 12                	jne    64e7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev+0x87>
    64d5:	48 83 c4 40          	add    rsp,0x40
    64d9:	5d                   	pop    rbp
    64da:	c3                   	ret
    64db:	f3 0f 1e fa          	endbr64
    64df:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data())
    64e2:	e8 d9 03 00 00       	call   68c0 <__clang_call_terminate>
    64e7:	e8 c4 e0 ff ff       	call   45b0 <__stack_chk_fail@plt>
    64ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000064f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>:
#else
      void
#endif
      vector<_Tp, _Alloc>::
      emplace_back(_Args&&... __args)
      {
    64f0:	f3 0f 1e fa          	endbr64
    64f4:	55                   	push   rbp
    64f5:	48 89 e5             	mov    rbp,rsp
    64f8:	48 83 ec 30          	sub    rsp,0x30
    64fc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    6500:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    6504:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    6508:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    650c:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    6510:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
    6514:	74 37                	je     654d <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_+0x5d>
    6516:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    651a:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
				     std::forward<_Args>(__args)...);
    651e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6522:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6526:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    652a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    652e:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6532:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6536:	e8 25 11 00 00       	call   7660 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>
    653b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
	    ++this->_M_impl._M_finish;
    653f:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    6543:	48 83 c1 20          	add    rcx,0x20
    6547:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
    654b:	eb 0d                	jmp    655a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_+0x6a>
    654d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	else
	  _M_realloc_append(std::forward<_Args>(__args)...);
    6551:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    6555:	e8 66 0e 00 00       	call   73c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_>
    655a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
#if __cplusplus > 201402L
	return back();
    655e:	e8 8d 10 00 00       	call   75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    6563:	48 83 c4 30          	add    rsp,0x30
    6567:	5d                   	pop    rbp
    6568:	c3                   	ret
    6569:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
      { return this->assign(__s); }
    6570:	f3 0f 1e fa          	endbr64
    6574:	55                   	push   rbp
    6575:	48 89 e5             	mov    rbp,rsp
    6578:	48 83 ec 10          	sub    rsp,0x10
    657c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6580:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6584:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6588:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    658c:	e8 6f 1a 00 00       	call   8000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    6591:	48 83 c4 10          	add    rsp,0x10
    6595:	5d                   	pop    rbp
    6596:	c3                   	ret
    6597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    659e:	00 00 

00000000000065a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
      {
    65a0:	f3 0f 1e fa          	endbr64
    65a4:	55                   	push   rbp
    65a5:	48 89 e5             	mov    rbp,rsp
    65a8:	48 83 ec 20          	sub    rsp,0x20
    65ac:	40 88 f0             	mov    al,sil
    65af:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65b3:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    65b6:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    65ba:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	this->push_back(__c);
    65be:	0f be 75 f7          	movsx  esi,BYTE PTR [rbp-0x9]
    65c2:	e8 69 1f 00 00       	call   8530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
    65c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	return *this;
    65cb:	48 83 c4 20          	add    rsp,0x20
    65cf:	5d                   	pop    rbp
    65d0:	c3                   	ret
    65d1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    65d8:	00 00 00 
    65db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000065e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
      {
    65e0:	f3 0f 1e fa          	endbr64
    65e4:	55                   	push   rbp
    65e5:	48 89 e5             	mov    rbp,rsp
    65e8:	48 83 ec 40          	sub    rsp,0x40
    65ec:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    65f0:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    65f4:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    65f8:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    65fb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    65ff:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    6603:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
		      _M_get_Tp_allocator());
    6607:	e8 d4 13 00 00       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    660c:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    6610:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    6614:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6618:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    661c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    __attribute__((__always_inline__)) _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
	     allocator<_Tp>&)
    {
      std::_Destroy(__first, __last);
    6620:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6624:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6628:	e8 13 20 00 00       	call   8640 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    662d:	eb 00                	jmp    662f <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x4f>
    }
    662f:	eb 00                	jmp    6631 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x51>
    6631:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      }
    6635:	e8 b6 1f 00 00       	call   85f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    663a:	48 83 c4 40          	add    rsp,0x40
    663e:	5d                   	pop    rbp
    663f:	c3                   	ret
    6640:	f3 0f 1e fa          	endbr64
    6644:	48 89 c7             	mov    rdi,rax
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6647:	e8 74 02 00 00       	call   68c0 <__clang_call_terminate>
    664c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>:
      {
    6650:	f3 0f 1e fa          	endbr64
    6654:	55                   	push   rbp
    6655:	48 89 e5             	mov    rbp,rsp
    6658:	48 83 ec 20          	sub    rsp,0x20
    665c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6660:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6664:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6668:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	__glibcxx_assert(__pos <= size());
    666c:	eb 00                	jmp    666e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x1e>
    666e:	eb 00                	jmp    6670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x20>
    6670:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return _M_data()[__pos];
    6674:	e8 27 02 00 00       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6679:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    667d:	48 83 c4 20          	add    rsp,0x20
    6681:	5d                   	pop    rbp
    6682:	c3                   	ret
    6683:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    668a:	00 00 00 
    668d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006690 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_>:
      {
    6690:	f3 0f 1e fa          	endbr64
    6694:	55                   	push   rbp
    6695:	48 89 e5             	mov    rbp,rsp
    6698:	48 83 ec 30          	sub    rsp,0x30
    669c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    66a0:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    66a4:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    66a8:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    66ac:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    66b0:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
    66b4:	74 37                	je     66ed <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_+0x5d>
    66b6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    66ba:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
				     std::forward<_Args>(__args)...);
    66be:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    66c2:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    66c6:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    66ca:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    66ce:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    66d2:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    66d6:	e8 b5 22 00 00       	call   8990 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>
    66db:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
	    ++this->_M_impl._M_finish;
    66df:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    66e3:	48 83 c1 20          	add    rcx,0x20
    66e7:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  }
    66eb:	eb 0d                	jmp    66fa <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRKS5_EEERS5_DpOT_+0x6a>
    66ed:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	  _M_realloc_append(std::forward<_Args>(__args)...);
    66f1:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    66f5:	e8 66 20 00 00       	call   8760 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_>
    66fa:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	return back();
    66fe:	e8 ed 0e 00 00       	call   75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    6703:	48 83 c4 30          	add    rsp,0x30
    6707:	5d                   	pop    rbp
    6708:	c3                   	ret
    6709:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006710 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>:
      {
    6710:	f3 0f 1e fa          	endbr64
    6714:	55                   	push   rbp
    6715:	48 89 e5             	mov    rbp,rsp
    6718:	48 83 ec 20          	sub    rsp,0x20
    671c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6720:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6724:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6728:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	constexpr bool __move_storage =
    672c:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
    6730:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6734:	e8 37 23 00 00       	call   8a70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>
    6739:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return *this;
    673d:	48 83 c4 20          	add    rsp,0x20
    6741:	5d                   	pop    rbp
    6742:	c3                   	ret
    6743:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    674a:	00 00 00 
    674d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
      {
    6750:	f3 0f 1e fa          	endbr64
    6754:	55                   	push   rbp
    6755:	48 89 e5             	mov    rbp,rsp
    6758:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    675c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6760:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	return *(this->_M_impl._M_start + __n);
    6764:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6767:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    676b:	48 c1 e1 05          	shl    rcx,0x5
    676f:	48 01 c8             	add    rax,rcx
    6772:	5d                   	pop    rbp
    6773:	c3                   	ret
    6774:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    677b:	00 00 00 
    677e:	66 90                	xchg   ax,ax

0000000000006780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
      {
    6780:	f3 0f 1e fa          	endbr64
    6784:	55                   	push   rbp
    6785:	48 89 e5             	mov    rbp,rsp
    6788:	48 83 ec 20          	sub    rsp,0x20
    678c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6790:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6794:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	__glibcxx_assert(!empty());
    6798:	eb 00                	jmp    679a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x1a>
    679a:	eb 00                	jmp    679c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x1c>
    679c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	return operator[](this->size() - 1);
    67a0:	e8 6b 0b 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    67a5:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    67a9:	48 89 c6             	mov    rsi,rax
    67ac:	48 ff ce             	dec    rsi
    67af:	e8 5c 25 00 00       	call   8d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    67b4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    67b8:	eb 00                	jmp    67ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv+0x3a>
    67ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    67be:	48 83 c4 20          	add    rsp,0x20
    67c2:	5d                   	pop    rbp
    67c3:	c3                   	ret
    67c4:	f3 0f 1e fa          	endbr64
    67c8:	48 89 c7             	mov    rdi,rax
    67cb:	e8 f0 00 00 00       	call   68c0 <__clang_call_terminate>

00000000000067d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
      { return this->append(__str); }
    67d0:	f3 0f 1e fa          	endbr64
    67d4:	55                   	push   rbp
    67d5:	48 89 e5             	mov    rbp,rsp
    67d8:	48 83 ec 10          	sub    rsp,0x10
    67dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67e4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    67e8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    67ec:	e8 5f 25 00 00       	call   8d50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
    67f1:	48 83 c4 10          	add    rsp,0x10
    67f5:	5d                   	pop    rbp
    67f6:	c3                   	ret
    67f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    67fe:	00 00 

0000000000006800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    {
    6800:	f3 0f 1e fa          	endbr64
    6804:	55                   	push   rbp
    6805:	48 89 e5             	mov    rbp,rsp
    6808:	48 83 ec 40          	sub    rsp,0x40
    680c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6810:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      return __lhs.size() == __rhs.size()
    6814:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6818:	e8 f3 0a 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    681d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6821:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6825:	e8 e6 0a 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    682a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    682e:	48 89 c2             	mov    rdx,rax
    6831:	31 c0                	xor    eax,eax
    6833:	48 39 d1             	cmp    rcx,rdx
    6836:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
	       && !_Traits::compare(__lhs.data(), __rhs.data(), __lhs.size());
    6839:	75 46                	jne    6881 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_+0x81>
    683b:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    683f:	e8 bc 27 00 00       	call   9000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    6844:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    6848:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    684c:	e8 af 27 00 00       	call   9000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    6851:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    6855:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6859:	e8 b2 0a 00 00       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    685e:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    6862:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    6866:	48 89 c2             	mov    rdx,rax
    6869:	e8 42 27 00 00       	call   8fb0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    686e:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    6871:	eb 00                	jmp    6873 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_+0x73>
    6873:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    6876:	83 f8 00             	cmp    eax,0x0
    6879:	0f 95 c0             	setne  al
    687c:	34 ff                	xor    al,0xff
    687e:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
    6881:	8a 45 ef             	mov    al,BYTE PTR [rbp-0x11]
      return __lhs.size() == __rhs.size()
    6884:	24 01                	and    al,0x1
    6886:	48 83 c4 40          	add    rsp,0x40
    688a:	5d                   	pop    rbp
    688b:	c3                   	ret
    688c:	f3 0f 1e fa          	endbr64
    6890:	48 89 c7             	mov    rdi,rax
	       && !_Traits::compare(__lhs.data(), __rhs.data(), __lhs.size());
    6893:	e8 28 00 00 00       	call   68c0 <__clang_call_terminate>
    6898:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    689f:	00 

00000000000068a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      { return _M_dataplus._M_p; }
    68a0:	f3 0f 1e fa          	endbr64
    68a4:	55                   	push   rbp
    68a5:	48 89 e5             	mov    rbp,rsp
    68a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    68ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    68b3:	5d                   	pop    rbp
    68b4:	c3                   	ret
    68b5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    68bc:	00 00 00 
    68bf:	90                   	nop

00000000000068c0 <__clang_call_terminate>:
    68c0:	f3 0f 1e fa          	endbr64
    68c4:	55                   	push   rbp
    68c5:	48 89 e5             	mov    rbp,rsp
    68c8:	e8 d3 db ff ff       	call   44a0 <__cxa_begin_catch@plt>
    68cd:	e8 9e db ff ff       	call   4470 <_ZSt9terminatev@plt>
    68d2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    68d9:	00 00 00 
    68dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000068e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      {
    68e0:	f3 0f 1e fa          	endbr64
    68e4:	55                   	push   rbp
    68e5:	48 89 e5             	mov    rbp,rsp
    68e8:	48 83 ec 10          	sub    rsp,0x10
    68ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    68f0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    68f4:	48 83 c7 10          	add    rdi,0x10
    68f8:	e8 e3 01 00 00       	call   6ae0 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
    68fd:	48 83 c4 10          	add    rsp,0x10
    6901:	5d                   	pop    rbp
    6902:	c3                   	ret
    6903:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    690a:	00 00 00 
    690d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006910 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      { return _M_dataplus; }
    6910:	f3 0f 1e fa          	endbr64
    6914:	55                   	push   rbp
    6915:	48 89 e5             	mov    rbp,rsp
    6918:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    691c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6920:	5d                   	pop    rbp
    6921:	c3                   	ret
    6922:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6929:	00 00 00 
    692c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>:
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6930:	f3 0f 1e fa          	endbr64
    6934:	55                   	push   rbp
    6935:	48 89 e5             	mov    rbp,rsp
    6938:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    693c:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    6940:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    6944:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6948:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    694c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6950:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    6954:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6958:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    695c:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    6960:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    6964:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    6968:	48 89 08             	mov    QWORD PTR [rax],rcx
    696b:	5d                   	pop    rbp
    696c:	c3                   	ret
    696d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      _GLIBCXX20_CONSTEXPR
      void
      basic_string<_CharT, _Traits, _Alloc>::
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
    6970:	f3 0f 1e fa          	endbr64
    6974:	55                   	push   rbp
    6975:	48 89 e5             	mov    rbp,rsp
    6978:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    697f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6986:	00 00 
    6988:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    698c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    6990:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    6994:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    6998:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    699c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    69a0:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    69a4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    69a8:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    69ac:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
    69b0:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    69b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    69b8:	48 8d 55 f0          	lea    rdx,[rbp-0x10]
    69bc:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    69c0:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    69c4:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return __last - __first;
    69c8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    69cc:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    69d0:	48 29 c8             	sub    rax,rcx
    69d3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax

	if (__dnew > size_type(_S_local_capacity))
    69d7:	48 83 7d e8 0f       	cmp    QWORD PTR [rbp-0x18],0xf
    69dc:	76 2c                	jbe    6a0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9a>
    69de:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
    69e2:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    69e6:	31 c0                	xor    eax,eax
    69e8:	89 c2                	mov    edx,eax
    69ea:	e8 31 01 00 00       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    69ef:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    69f3:	48 89 c6             	mov    rsi,rax
    69f6:	e8 05 01 00 00       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    69fb:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_capacity(__dnew);
    69ff:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6a03:	e8 e8 01 00 00       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  }
    6a08:	eb 08                	jmp    6a12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa2>
    6a0a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    6a0e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    6a12:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    6a16:	48 8d 7d e0          	lea    rdi,[rbp-0x20]

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }

	  basic_string* _M_guarded;
	} __guard(this);
    6a1a:	e8 f1 01 00 00       	call   6c10 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardC2EPS4_>
    6a1f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]

	this->_S_copy_chars(_M_data(), __beg, __end);
    6a23:	e8 78 fe ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6a28:	48 89 c7             	mov    rdi,rax
    6a2b:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    6a2f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    6a33:	e8 f8 01 00 00       	call   6c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
    6a38:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]

	__guard._M_guarded = 0;
    6a3c:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    6a43:	00 

	_M_set_length(__dnew);
    6a44:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6a48:	e8 23 02 00 00       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    6a4d:	eb 00                	jmp    6a4f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xdf>
    6a4f:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    6a53:	e8 88 02 00 00       	call   6ce0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>
    6a58:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a5f:	00 00 
    6a61:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6a65:	48 39 c8             	cmp    rax,rcx
    6a68:	75 4b                	jne    6ab5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x145>
    6a6a:	48 81 c4 90 00 00 00 	add    rsp,0x90
    6a71:	5d                   	pop    rbp
    6a72:	c3                   	ret
    6a73:	f3 0f 1e fa          	endbr64
    6a77:	48 89 c1             	mov    rcx,rax
    6a7a:	89 d0                	mov    eax,edx
    6a7c:	48 89 4d 90          	mov    QWORD PTR [rbp-0x70],rcx
    6a80:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    6a83:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    6a87:	e8 54 02 00 00       	call   6ce0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>
    6a8c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    6a90:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    6a97:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a9e:	00 00 
    6aa0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6aa4:	48 39 c8             	cmp    rax,rcx
    6aa7:	75 0c                	jne    6ab5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x145>
    6aa9:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    6ab0:	e8 ab d9 ff ff       	call   4460 <_Unwind_Resume@plt>
    6ab5:	e8 f6 da ff ff       	call   45b0 <__stack_chk_fail@plt>
    6aba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    6ac0:	f3 0f 1e fa          	endbr64
    6ac4:	55                   	push   rbp
    6ac5:	48 89 e5             	mov    rbp,rsp
    6ac8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6acc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6ad0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6ad4:	5d                   	pop    rbp
    6ad5:	c3                   	ret
    6ad6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6add:	00 00 00 

0000000000006ae0 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
      { return std::addressof(__r); }
    6ae0:	f3 0f 1e fa          	endbr64
    6ae4:	55                   	push   rbp
    6ae5:	48 89 e5             	mov    rbp,rsp
    6ae8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6aec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6af0:	5d                   	pop    rbp
    6af1:	c3                   	ret
    6af2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6af9:	00 00 00 
    6afc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      { _M_dataplus._M_p = __p; }
    6b00:	f3 0f 1e fa          	endbr64
    6b04:	55                   	push   rbp
    6b05:	48 89 e5             	mov    rbp,rsp
    6b08:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6b0c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6b10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6b14:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6b18:	48 89 08             	mov    QWORD PTR [rax],rcx
    6b1b:	5d                   	pop    rbp
    6b1c:	c3                   	ret
    6b1d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    {
    6b20:	f3 0f 1e fa          	endbr64
    6b24:	55                   	push   rbp
    6b25:	48 89 e5             	mov    rbp,rsp
    6b28:	48 83 ec 30          	sub    rsp,0x30
    6b2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6b30:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6b34:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    6b38:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6b3c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
      if (__capacity > max_size())
    6b40:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b44:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b47:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6b4b:	e8 d0 01 00 00       	call   6d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6b50:	48 89 c1             	mov    rcx,rax
    6b53:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6b57:	48 39 c8             	cmp    rax,rcx
    6b5a:	76 0c                	jbe    6b68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x48>
	std::__throw_length_error(__N("basic_string::_M_create"));
    6b5c:	48 8d 3d c7 a5 00 00 	lea    rdi,[rip+0xa5c7]        # 1112a <_IO_stdin_used+0x12a>
    6b63:	e8 88 d9 ff ff       	call   44f0 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    6b68:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b6c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b6f:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    6b73:	76 56                	jbe    6bcb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6b75:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b79:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6b7c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6b80:	48 d1 e1             	shl    rcx,1
    6b83:	48 39 c8             	cmp    rax,rcx
    6b86:	73 43                	jae    6bcb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6b88:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	  __capacity = 2 * __old_capacity;
    6b8c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6b90:	48 d1 e1             	shl    rcx,1
    6b93:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b97:	48 89 08             	mov    QWORD PTR [rax],rcx
	  if (__capacity > max_size())
    6b9a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6b9e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6ba1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    6ba5:	e8 76 01 00 00       	call   6d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6baa:	48 89 c1             	mov    rcx,rax
    6bad:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6bb1:	48 39 c8             	cmp    rax,rcx
    6bb4:	76 13                	jbe    6bc9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa9>
    6bb6:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	    __capacity = max_size();
    6bba:	e8 61 01 00 00       	call   6d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    6bbf:	48 89 c1             	mov    rcx,rax
    6bc2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6bc6:	48 89 08             	mov    QWORD PTR [rax],rcx
	}
    6bc9:	eb 00                	jmp    6bcb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xab>
    6bcb:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
      return _S_allocate(_M_get_allocator(), __capacity + 1);
    6bcf:	e8 ec 01 00 00       	call   6dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6bd4:	48 89 c7             	mov    rdi,rax
    6bd7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6bdb:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    6bde:	48 83 c6 01          	add    rsi,0x1
    6be2:	e8 79 01 00 00       	call   6d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_S_allocateERS3_m>
    6be7:	48 83 c4 30          	add    rsp,0x30
    6beb:	5d                   	pop    rbp
    6bec:	c3                   	ret
    6bed:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      { _M_allocated_capacity = __capacity; }
    6bf0:	f3 0f 1e fa          	endbr64
    6bf4:	55                   	push   rbp
    6bf5:	48 89 e5             	mov    rbp,rsp
    6bf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6bfc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6c04:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6c08:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    6c0c:	5d                   	pop    rbp
    6c0d:	c3                   	ret
    6c0e:	66 90                	xchg   ax,ax

0000000000006c10 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardC2EPS4_>:
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    6c10:	f3 0f 1e fa          	endbr64
    6c14:	55                   	push   rbp
    6c15:	48 89 e5             	mov    rbp,rsp
    6c18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6c1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6c24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6c28:	48 89 08             	mov    QWORD PTR [rax],rcx
    6c2b:	5d                   	pop    rbp
    6c2c:	c3                   	ret
    6c2d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
      { _S_copy(__p, __k1, __k2 - __k1); }
    6c30:	f3 0f 1e fa          	endbr64
    6c34:	55                   	push   rbp
    6c35:	48 89 e5             	mov    rbp,rsp
    6c38:	48 83 ec 20          	sub    rsp,0x20
    6c3c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6c40:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6c44:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    6c48:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6c4c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6c50:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6c54:	48 29 f2             	sub    rdx,rsi
    6c57:	e8 e4 01 00 00       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    6c5c:	eb 00                	jmp    6c5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x2e>
    6c5e:	48 83 c4 20          	add    rsp,0x20
    6c62:	5d                   	pop    rbp
    6c63:	c3                   	ret
    6c64:	f3 0f 1e fa          	endbr64
    6c68:	48 89 c7             	mov    rdi,rax
    6c6b:	e8 50 fc ff ff       	call   68c0 <__clang_call_terminate>

0000000000006c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      {
    6c70:	f3 0f 1e fa          	endbr64
    6c74:	55                   	push   rbp
    6c75:	48 89 e5             	mov    rbp,rsp
    6c78:	48 83 ec 30          	sub    rsp,0x30
    6c7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6c83:	00 00 
    6c85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6c89:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6c8d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6c91:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    6c95:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	_M_length(__n);
    6c99:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    6c9d:	e8 5e 02 00 00       	call   6f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
    6ca2:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	traits_type::assign(_M_data()[__n], _CharT());
    6ca6:	e8 f5 fb ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6cab:	48 89 c7             	mov    rdi,rax
    6cae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6cb2:	48 01 c7             	add    rdi,rax
    6cb5:	c6 45 f7 00          	mov    BYTE PTR [rbp-0x9],0x0
    6cb9:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    6cbd:	e8 ce 01 00 00       	call   6e90 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    6cc2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6cc9:	00 00 
    6ccb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6ccf:	48 39 c8             	cmp    rax,rcx
    6cd2:	75 06                	jne    6cda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm+0x6a>
    6cd4:	48 83 c4 30          	add    rsp,0x30
    6cd8:	5d                   	pop    rbp
    6cd9:	c3                   	ret
    6cda:	e8 d1 d8 ff ff       	call   45b0 <__stack_chk_fail@plt>
    6cdf:	90                   	nop

0000000000006ce0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev>:
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    6ce0:	f3 0f 1e fa          	endbr64
    6ce4:	55                   	push   rbp
    6ce5:	48 89 e5             	mov    rbp,rsp
    6ce8:	48 83 ec 10          	sub    rsp,0x10
    6cec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6cf0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6cf4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6cf8:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    6cfc:	74 10                	je     6d0e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    6cfe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6d02:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    6d05:	e8 16 02 00 00       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    6d0a:	eb 00                	jmp    6d0c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2c>
    6d0c:	eb 00                	jmp    6d0e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    6d0e:	48 83 c4 10          	add    rsp,0x10
    6d12:	5d                   	pop    rbp
    6d13:	c3                   	ret
    6d14:	f3 0f 1e fa          	endbr64
    6d18:	48 89 c7             	mov    rdi,rax
    6d1b:	e8 a0 fb ff ff       	call   68c0 <__clang_call_terminate>

0000000000006d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    6d20:	f3 0f 1e fa          	endbr64
    6d24:	55                   	push   rbp
    6d25:	48 89 e5             	mov    rbp,rsp
    6d28:	48 83 ec 10          	sub    rsp,0x10
    6d2c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6d30:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6d34:	e8 d7 fb ff ff       	call   6910 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6d39:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6d3d:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    6d44:	48 83 e8 01          	sub    rax,0x1
    6d48:	48 d1 e8             	shr    rax,1
    6d4b:	48 83 c4 10          	add    rsp,0x10
    6d4f:	5d                   	pop    rbp
    6d50:	c3                   	ret
    6d51:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6d58:	00 00 00 
    6d5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_S_allocateERS3_m>:
      {
    6d60:	f3 0f 1e fa          	endbr64
    6d64:	55                   	push   rbp
    6d65:	48 89 e5             	mov    rbp,rsp
    6d68:	48 83 ec 40          	sub    rsp,0x40
    6d6c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    6d70:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
	pointer __p = _Alloc_traits::allocate(__a, __n);
    6d74:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    6d78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    6d7c:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    6d80:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      { return __a.allocate(__n); }
    6d84:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6d88:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6d8c:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    6d90:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6d94:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
	      std::__throw_bad_array_new_length();
	    return static_cast<_Tp*>(::operator new(__n));
	  }

	return __allocator_base<_Tp>::allocate(__n, 0);
    6d98:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6d9c:	31 c0                	xor    eax,eax
    6d9e:	89 c2                	mov    edx,eax
    6da0:	e8 3b 00 00 00       	call   6de0 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    6da5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	return __p;
    6da9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6dad:	48 83 c4 40          	add    rsp,0x40
    6db1:	5d                   	pop    rbp
    6db2:	c3                   	ret
    6db3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6dba:	00 00 00 
    6dbd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      { return _M_dataplus; }
    6dc0:	f3 0f 1e fa          	endbr64
    6dc4:	55                   	push   rbp
    6dc5:	48 89 e5             	mov    rbp,rsp
    6dc8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6dcc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6dd0:	5d                   	pop    rbp
    6dd1:	c3                   	ret
    6dd2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6dd9:	00 00 00 
    6ddc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006de0 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      _GLIBCXX_NODISCARD _Tp*
      allocate(size_type __n, const void* = static_cast<const void*>(0))
      {
    6de0:	f3 0f 1e fa          	endbr64
    6de4:	55                   	push   rbp
    6de5:	48 89 e5             	mov    rbp,rsp
    6de8:	48 83 ec 20          	sub    rsp,0x20
    6dec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6df0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    6df4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    6df8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3308. std::allocator<void>().allocate(n)
	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
#endif

	if (__builtin_expect(__n > this->_M_max_size(), false))
    6dfc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6e00:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    6e04:	48 b9 ff ff ff ff ff 	movabs rcx,0x7fffffffffffffff
    6e0b:	ff ff 7f 
    6e0e:	48 39 c8             	cmp    rax,rcx
    6e11:	76 11                	jbe    6e24 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x44>
	  {
	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
	    // 3190. allocator::allocate sometimes returns too little storage
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6e13:	48 83 7d e8 ff       	cmp    QWORD PTR [rbp-0x18],0xffffffffffffffff
    6e18:	76 05                	jbe    6e1f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x3f>
	      std::__throw_bad_array_new_length();
    6e1a:	e8 11 d7 ff ff       	call   4530 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6e1f:	e8 6c d6 ff ff       	call   4490 <_ZSt17__throw_bad_allocv@plt>
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
							   __al));
	  }
#endif
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6e24:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    6e28:	48 c1 e7 00          	shl    rdi,0x0
    6e2c:	e8 3f d7 ff ff       	call   4570 <_Znwm@plt>
    6e31:	48 83 c4 20          	add    rsp,0x20
    6e35:	5d                   	pop    rbp
    6e36:	c3                   	ret
    6e37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    6e3e:	00 00 

0000000000006e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      {
    6e40:	f3 0f 1e fa          	endbr64
    6e44:	55                   	push   rbp
    6e45:	48 89 e5             	mov    rbp,rsp
    6e48:	48 83 ec 20          	sub    rsp,0x20
    6e4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6e50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6e54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	if (__n == 1)
    6e58:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    6e5d:	75 0f                	jne    6e6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x2e>
	  traits_type::assign(*__d, *__s);
    6e5f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6e63:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6e67:	e8 24 00 00 00       	call   6e90 <_ZNSt11char_traitsIcE6assignERcRKc>
    6e6c:	eb 11                	jmp    6e7f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x3f>
	  traits_type::copy(__d, __s, __n);
    6e6e:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6e72:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    6e76:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6e7a:	e8 31 00 00 00       	call   6eb0 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    6e7f:	48 83 c4 20          	add    rsp,0x20
    6e83:	5d                   	pop    rbp
    6e84:	c3                   	ret
    6e85:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6e8c:	00 00 00 
    6e8f:	90                   	nop

0000000000006e90 <_ZNSt11char_traitsIcE6assignERcRKc>:
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      {
    6e90:	f3 0f 1e fa          	endbr64
    6e94:	55                   	push   rbp
    6e95:	48 89 e5             	mov    rbp,rsp
    6e98:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6e9c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
	  std::construct_at(__builtin_addressof(__c1), __c2);
	else
#endif
	__c1 = __c2;
    6ea0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6ea4:	8a 08                	mov    cl,BYTE PTR [rax]
    6ea6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6eaa:	88 08                	mov    BYTE PTR [rax],cl
      }
    6eac:	5d                   	pop    rbp
    6ead:	c3                   	ret
    6eae:	66 90                	xchg   ax,ax

0000000000006eb0 <_ZNSt11char_traitsIcE4copyEPcPKcm>:
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      {
    6eb0:	f3 0f 1e fa          	endbr64
    6eb4:	55                   	push   rbp
    6eb5:	48 89 e5             	mov    rbp,rsp
    6eb8:	48 83 ec 30          	sub    rsp,0x30
    6ebc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6ec0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    6ec4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    6ec8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    6ecd:	75 0a                	jne    6ed9 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x29>
	  return __s1;
    6ecf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6ed3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6ed7:	eb 1d                	jmp    6ef6 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x46>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6ed9:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6edd:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    6ee1:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    6ee5:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6ee9:	e8 52 d6 ff ff       	call   4540 <memcpy@plt>
    6eee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6ef2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    6ef6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6efa:	48 83 c4 30          	add    rsp,0x30
    6efe:	5d                   	pop    rbp
    6eff:	c3                   	ret

0000000000006f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      { _M_string_length = __length; }
    6f00:	f3 0f 1e fa          	endbr64
    6f04:	55                   	push   rbp
    6f05:	48 89 e5             	mov    rbp,rsp
    6f08:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6f0c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6f10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6f14:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    6f18:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    6f1c:	5d                   	pop    rbp
    6f1d:	c3                   	ret
    6f1e:	66 90                	xchg   ax,ax

0000000000006f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      {
    6f20:	f3 0f 1e fa          	endbr64
    6f24:	55                   	push   rbp
    6f25:	48 89 e5             	mov    rbp,rsp
    6f28:	48 83 ec 10          	sub    rsp,0x10
    6f2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6f30:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    6f34:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
	if (!_M_is_local())
    6f38:	e8 23 00 00 00       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    6f3d:	a8 01                	test   al,0x1
    6f3f:	75 0d                	jne    6f4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x2e>
    6f41:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	  _M_destroy(_M_allocated_capacity);
    6f45:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    6f49:	e8 72 00 00 00       	call   6fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    6f4e:	48 83 c4 10          	add    rsp,0x10
    6f52:	5d                   	pop    rbp
    6f53:	c3                   	ret
    6f54:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6f5b:	00 00 00 
    6f5e:	66 90                	xchg   ax,ax

0000000000006f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      {
    6f60:	f3 0f 1e fa          	endbr64
    6f64:	55                   	push   rbp
    6f65:	48 89 e5             	mov    rbp,rsp
    6f68:	48 83 ec 20          	sub    rsp,0x20
    6f6c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    6f70:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    6f74:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	if (_M_data() == _M_local_data())
    6f78:	e8 23 f9 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6f7d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    6f81:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6f85:	e8 b6 00 00 00       	call   7040 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6f8a:	48 89 c1             	mov    rcx,rax
    6f8d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6f91:	48 39 c8             	cmp    rax,rcx
    6f94:	75 11                	jne    6fa7 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x47>
    6f96:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    if (_M_string_length > _S_local_capacity)
    6f9a:	48 83 78 08 0f       	cmp    QWORD PTR [rax+0x8],0xf
    6f9f:	76 00                	jbe    6fa1 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x41>
	    return true;
    6fa1:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
    6fa5:	eb 04                	jmp    6fab <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv+0x4b>
	return false;
    6fa7:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
      }
    6fab:	8a 45 ff             	mov    al,BYTE PTR [rbp-0x1]
    6fae:	24 01                	and    al,0x1
    6fb0:	48 83 c4 20          	add    rsp,0x20
    6fb4:	5d                   	pop    rbp
    6fb5:	c3                   	ret
    6fb6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6fbd:	00 00 00 

0000000000006fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6fc0:	f3 0f 1e fa          	endbr64
    6fc4:	55                   	push   rbp
    6fc5:	48 89 e5             	mov    rbp,rsp
    6fc8:	48 83 ec 50          	sub    rsp,0x50
    6fcc:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6fd0:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    6fd4:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    6fd8:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    6fdc:	e8 df fd ff ff       	call   6dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    6fe1:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    6fe5:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    6fe9:	e8 b2 f8 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    6fee:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    6ff2:	48 89 c1             	mov    rcx,rax
    6ff5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    6ff9:	48 83 c0 01          	add    rax,0x1
    6ffd:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7001:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    7005:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    7009:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    700d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7011:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7015:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    7019:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    701d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7021:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	if (std::__is_constant_evaluated())
	  {
	    ::operator delete(__p);
	    return;
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    7025:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7029:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    702d:	e8 5e 00 00 00       	call   7090 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    7032:	eb 00                	jmp    7034 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm+0x74>
    7034:	48 83 c4 50          	add    rsp,0x50
    7038:	5d                   	pop    rbp
    7039:	c3                   	ret
    703a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007040 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      {
    7040:	f3 0f 1e fa          	endbr64
    7044:	55                   	push   rbp
    7045:	48 89 e5             	mov    rbp,rsp
    7048:	48 83 ec 10          	sub    rsp,0x10
    704c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7050:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    7054:	48 83 c7 10          	add    rdi,0x10
    7058:	e8 13 00 00 00       	call   7070 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
    705d:	48 83 c4 10          	add    rsp,0x10
    7061:	5d                   	pop    rbp
    7062:	c3                   	ret
    7063:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    706a:	00 00 00 
    706d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007070 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
    7070:	f3 0f 1e fa          	endbr64
    7074:	55                   	push   rbp
    7075:	48 89 e5             	mov    rbp,rsp
    7078:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    707c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7080:	5d                   	pop    rbp
    7081:	c3                   	ret
    7082:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7089:	00 00 00 
    708c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007090 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
      {
    7090:	f3 0f 1e fa          	endbr64
    7094:	55                   	push   rbp
    7095:	48 89 e5             	mov    rbp,rsp
    7098:	48 83 ec 20          	sub    rsp,0x20
    709c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    70a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    70a4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    70a8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    70ac:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    70b0:	48 c1 e6 00          	shl    rsi,0x0
    70b4:	e8 c7 d4 ff ff       	call   4580 <_ZdlPvm@plt>
      }
    70b9:	48 83 c4 20          	add    rsp,0x20
    70bd:	5d                   	pop    rbp
    70be:	c3                   	ret
    70bf:	90                   	nop

00000000000070c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>:
	: allocator_type(__a), _M_p(__dat) { }
    70c0:	f3 0f 1e fa          	endbr64
    70c4:	55                   	push   rbp
    70c5:	48 89 e5             	mov    rbp,rsp
    70c8:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    70cc:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    70d0:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    70d4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    70d8:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    70dc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    70e0:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    70e4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      : __allocator_base<_Tp>(__a) { }
    70e8:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    70ec:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    70f0:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    70f4:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    70f8:	48 89 08             	mov    QWORD PTR [rax],rcx
    70fb:	5d                   	pop    rbp
    70fc:	c3                   	ret
    70fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007100 <_ZNSt11char_traitsIcE6lengthEPKc>:
      {
    7100:	f3 0f 1e fa          	endbr64
    7104:	55                   	push   rbp
    7105:	48 89 e5             	mov    rbp,rsp
    7108:	48 83 ec 10          	sub    rsp,0x10
    710c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return __builtin_strlen(__s);
    7110:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7114:	e8 97 d3 ff ff       	call   44b0 <strlen@plt>
    7119:	48 83 c4 10          	add    rsp,0x10
    711d:	5d                   	pop    rbp
    711e:	c3                   	ret
    711f:	90                   	nop

0000000000007120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      {
    7120:	f3 0f 1e fa          	endbr64
    7124:	55                   	push   rbp
    7125:	48 89 e5             	mov    rbp,rsp
    7128:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    712f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7136:	00 00 
    7138:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    713c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    7140:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    7144:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    7148:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    714c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    7150:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    7154:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7158:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    715c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      return std::__distance(__first, __last,
    7160:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7164:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    7168:	48 8d 55 f0          	lea    rdx,[rbp-0x10]
    716c:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    7170:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    7174:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return __last - __first;
    7178:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    717c:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    7180:	48 29 c8             	sub    rax,rcx
    7183:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	if (__dnew > size_type(_S_local_capacity))
    7187:	48 83 7d e8 0f       	cmp    QWORD PTR [rbp-0x18],0xf
    718c:	76 2c                	jbe    71ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9a>
    718e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_data(_M_create(__dnew, size_type(0)));
    7192:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    7196:	31 c0                	xor    eax,eax
    7198:	89 c2                	mov    edx,eax
    719a:	e8 81 f9 ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    719f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    71a3:	48 89 c6             	mov    rsi,rax
    71a6:	e8 55 f9 ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    71ab:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	    _M_capacity(__dnew);
    71af:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    71b3:	e8 38 fa ff ff       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  }
    71b8:	eb 08                	jmp    71c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa2>
    71ba:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    71be:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    71c2:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    71c6:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
	} __guard(this);
    71ca:	e8 a1 00 00 00       	call   7270 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_>
    71cf:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	this->_S_copy_chars(_M_data(), __beg, __end);
    71d3:	e8 c8 f6 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    71d8:	48 89 c7             	mov    rdi,rax
    71db:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    71df:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    71e3:	e8 a8 00 00 00       	call   7290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
    71e8:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	__guard._M_guarded = 0;
    71ec:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    71f3:	00 
	_M_set_length(__dnew);
    71f4:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    71f8:	e8 73 fa ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    71fd:	eb 00                	jmp    71ff <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xdf>
    71ff:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    7203:	e8 c8 00 00 00       	call   72d0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>
    7208:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    720f:	00 00 
    7211:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7215:	48 39 c8             	cmp    rax,rcx
    7218:	75 4b                	jne    7265 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x145>
    721a:	48 81 c4 90 00 00 00 	add    rsp,0x90
    7221:	5d                   	pop    rbp
    7222:	c3                   	ret
    7223:	f3 0f 1e fa          	endbr64
    7227:	48 89 c1             	mov    rcx,rax
    722a:	89 d0                	mov    eax,edx
    722c:	48 89 4d 90          	mov    QWORD PTR [rbp-0x70],rcx
    7230:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    7233:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    7237:	e8 94 00 00 00       	call   72d0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>
    723c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    7240:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    7247:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    724e:	00 00 
    7250:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7254:	48 39 c8             	cmp    rax,rcx
    7257:	75 0c                	jne    7265 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x145>
    7259:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    7260:	e8 fb d1 ff ff       	call   4460 <_Unwind_Resume@plt>
    7265:	e8 46 d3 ff ff       	call   45b0 <__stack_chk_fail@plt>
    726a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007270 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_>:
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    7270:	f3 0f 1e fa          	endbr64
    7274:	55                   	push   rbp
    7275:	48 89 e5             	mov    rbp,rsp
    7278:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    727c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7280:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7284:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7288:	48 89 08             	mov    QWORD PTR [rax],rcx
    728b:	5d                   	pop    rbp
    728c:	c3                   	ret
    728d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      { _S_copy(__p, __k1, __k2 - __k1); }
    7290:	f3 0f 1e fa          	endbr64
    7294:	55                   	push   rbp
    7295:	48 89 e5             	mov    rbp,rsp
    7298:	48 83 ec 20          	sub    rsp,0x20
    729c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    72a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    72a4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    72a8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    72ac:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    72b0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    72b4:	48 29 f2             	sub    rdx,rsi
    72b7:	e8 84 fb ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    72bc:	eb 00                	jmp    72be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x2e>
    72be:	48 83 c4 20          	add    rsp,0x20
    72c2:	5d                   	pop    rbp
    72c3:	c3                   	ret
    72c4:	f3 0f 1e fa          	endbr64
    72c8:	48 89 c7             	mov    rdi,rax
    72cb:	e8 f0 f5 ff ff       	call   68c0 <__clang_call_terminate>

00000000000072d0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev>:
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    72d0:	f3 0f 1e fa          	endbr64
    72d4:	55                   	push   rbp
    72d5:	48 89 e5             	mov    rbp,rsp
    72d8:	48 83 ec 10          	sub    rsp,0x10
    72dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    72e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72e4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    72e8:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    72ec:	74 10                	je     72fe <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    72ee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    72f2:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    72f5:	e8 26 fc ff ff       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    72fa:	eb 00                	jmp    72fc <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2c>
    72fc:	eb 00                	jmp    72fe <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev+0x2e>
    72fe:	48 83 c4 10          	add    rsp,0x10
    7302:	5d                   	pop    rbp
    7303:	c3                   	ret
    7304:	f3 0f 1e fa          	endbr64
    7308:	48 89 c7             	mov    rdi,rax
    730b:	e8 b0 f5 ff ff       	call   68c0 <__clang_call_terminate>

0000000000007310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      { return _M_string_length; }
    7310:	f3 0f 1e fa          	endbr64
    7314:	55                   	push   rbp
    7315:	48 89 e5             	mov    rbp,rsp
    7318:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    731c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7320:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7324:	5d                   	pop    rbp
    7325:	c3                   	ret
    7326:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    732d:	00 00 00 

0000000000007330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>:
      { _M_set_length(0); }
    7330:	f3 0f 1e fa          	endbr64
    7334:	55                   	push   rbp
    7335:	48 89 e5             	mov    rbp,rsp
    7338:	48 83 ec 10          	sub    rsp,0x10
    733c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7340:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7344:	31 c0                	xor    eax,eax
    7346:	89 c6                	mov    esi,eax
    7348:	e8 23 f9 ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    734d:	eb 00                	jmp    734f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv+0x1f>
    734f:	48 83 c4 10          	add    rsp,0x10
    7353:	5d                   	pop    rbp
    7354:	c3                   	ret
    7355:	f3 0f 1e fa          	endbr64
    7359:	48 89 c7             	mov    rdi,rax
    735c:	e8 5f f5 ff ff       	call   68c0 <__clang_call_terminate>
    7361:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7368:	00 00 00 
    736b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007370 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>:
      _Vector_base() = default;
    7370:	f3 0f 1e fa          	endbr64
    7374:	55                   	push   rbp
    7375:	48 89 e5             	mov    rbp,rsp
    7378:	48 83 ec 10          	sub    rsp,0x10
    737c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7380:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7384:	e8 07 00 00 00       	call   7390 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2EvQ26is_default_constructible_vIN9__gnu_cxx14__alloc_traitsIT0_NSB_10value_typeEE6rebindIT_E5otherEE>
    7389:	48 83 c4 10          	add    rsp,0x10
    738d:	5d                   	pop    rbp
    738e:	c3                   	ret
    738f:	90                   	nop

0000000000007390 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2EvQ26is_default_constructible_vIN9__gnu_cxx14__alloc_traitsIT0_NSB_10value_typeEE6rebindIT_E5otherEE>:
	{ }
    7390:	f3 0f 1e fa          	endbr64
    7394:	55                   	push   rbp
    7395:	48 89 e5             	mov    rbp,rsp
    7398:	48 83 ec 20          	sub    rsp,0x20
    739c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    73a0:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    73a4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    73a8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    73ac:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    73b0:	e8 eb 18 00 00       	call   8ca0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
	{ }
    73b5:	48 83 c4 20          	add    rsp,0x20
    73b9:	5d                   	pop    rbp
    73ba:	c3                   	ret
    73bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000073c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_>:
  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    _M_realloc_append(const _Tp& __x)
#endif
    {
    73c0:	f3 0f 1e fa          	endbr64
    73c4:	55                   	push   rbp
    73c5:	48 89 e5             	mov    rbp,rsp
    73c8:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    73cf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73d6:	00 00 
    73d8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73dc:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    73e0:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    73e4:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    73e8:	48 89 bd 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdi
      const size_type __len = _M_check_len(1u, "vector::_M_realloc_append");
    73ef:	be 01 00 00 00       	mov    esi,0x1
    73f4:	48 8d 15 79 9d 00 00 	lea    rdx,[rip+0x9d79]        # 11174 <_IO_stdin_used+0x174>
    73fb:	e8 90 02 00 00       	call   7690 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>
    7400:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      if (__len <= 0)
    7404:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    7409:	77 00                	ja     740b <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x4b>
    740b:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
	__builtin_unreachable ();
      pointer __old_start = this->_M_impl._M_start;
    7412:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    7415:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      pointer __old_finish = this->_M_impl._M_finish;
    7419:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    741d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
      const size_type __elems = end() - begin();
    7421:	e8 ea 03 00 00       	call   7810 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    7426:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    742d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7431:	e8 3a 04 00 00       	call   7870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    7436:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    743a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    743e:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    7442:	e8 79 03 00 00       	call   77c0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>
    7447:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    744e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      pointer __new_start(this->_M_allocate(__len));
    7452:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    7456:	e8 75 04 00 00       	call   78d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    745b:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    7462:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      pointer __new_finish(__new_start);
    7466:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    746a:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
      private:
	_Guard(const _Guard&);
      };

      {
	_Guard __guard(__new_start, __len, _M_impl);
    7471:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    7475:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    7479:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    747d:	e8 be 04 00 00       	call   7940 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>
	// [res.on.arguments]).

	// If this throws, the existing elements are unchanged.
#if __cplusplus >= 201103L
	_Alloc_traits::construct(this->_M_impl,
				 std::__to_address(__new_start + __elems),
    7482:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    7486:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    748a:	48 c1 e0 05          	shl    rax,0x5
    748e:	48 01 c7             	add    rdi,rax
    7491:	e8 ea 04 00 00       	call   7980 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>
    7496:	48 8b 95 60 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa0]
    749d:	48 89 c1             	mov    rcx,rax
				 std::forward<_Args>(__args)...);
    74a0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    74a4:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    74a8:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    74ac:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    74b0:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    74b4:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    74b8:	e8 a3 01 00 00       	call   7660 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>
    74bd:	eb 00                	jmp    74bf <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0xff>
	}
    74bf:	eb 00                	jmp    74c1 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x101>
    74c1:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]

#if __cplusplus >= 201103L
	if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	  {
	    // Relocation cannot throw.
	    __new_finish = _S_relocate(__old_start, __old_finish,
    74c8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    74cc:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    74d3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    74d7:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
				       __new_start, _M_get_Tp_allocator());
    74de:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    74e2:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    74e9:	e8 f2 04 00 00       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    74ee:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    74f5:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
    74fc:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    7503:	48 89 c1             	mov    rcx,rax
	    __new_finish = _S_relocate(__old_start, __old_finish,
    7506:	e8 95 04 00 00       	call   79a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>
    750b:	48 89 c1             	mov    rcx,rax
    750e:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    7515:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	    ++__new_finish;
    751c:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    7523:	48 83 c1 20          	add    rcx,0x20
    7527:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx

	    // New storage has been fully initialized, destroy the old elements.
	    __guard_elts._M_first = __old_start;
	    __guard_elts._M_last = __old_finish;
	  }
	__guard._M_storage = __old_start;
    752e:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    7532:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	__guard._M_len = this->_M_impl._M_end_of_storage - __old_start;
    7536:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    753a:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    753e:	48 29 c8             	sub    rax,rcx
    7541:	48 c1 f8 05          	sar    rax,0x5
    7545:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7549:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
      }
    754d:	e8 ae 04 00 00       	call   7a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>
    7552:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
      // deallocate should be called before assignments to _M_impl,
      // to avoid call-clobbering

      this->_M_impl._M_start = __new_start;
    7559:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    755d:	48 89 08             	mov    QWORD PTR [rax],rcx
      this->_M_impl._M_finish = __new_finish;
    7560:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    7567:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      this->_M_impl._M_end_of_storage = __new_start + __len;
    756b:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    756f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    7573:	48 c1 e2 05          	shl    rdx,0x5
    7577:	48 01 d1             	add    rcx,rdx
    757a:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    }
    757e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7585:	00 00 
    7587:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    758b:	48 39 c8             	cmp    rax,rcx
    758e:	75 54                	jne    75e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x224>
    7590:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    7597:	5d                   	pop    rbp
    7598:	c3                   	ret
    7599:	f3 0f 1e fa          	endbr64
    759d:	48 89 c1             	mov    rcx,rax
    75a0:	89 d0                	mov    eax,edx
    75a2:	48 89 8d 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rcx
    75a9:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
      }
    75af:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    75b3:	e8 48 04 00 00       	call   7a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>
    75b8:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    75bf:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    75c6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75cd:	00 00 
    75cf:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    75d3:	48 39 c8             	cmp    rax,rcx
    75d6:	75 0c                	jne    75e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_+0x224>
    75d8:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    75df:	e8 7c ce ff ff       	call   4460 <_Unwind_Resume@plt>
    75e4:	e8 c7 cf ff ff       	call   45b0 <__stack_chk_fail@plt>
    75e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000075f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>:
       *  element of the %vector.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      reference
      back() _GLIBCXX_NOEXCEPT
      {
    75f0:	f3 0f 1e fa          	endbr64
    75f4:	55                   	push   rbp
    75f5:	48 89 e5             	mov    rbp,rsp
    75f8:	48 83 ec 30          	sub    rsp,0x30
    75fc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7603:	00 00 
    7605:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7609:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    760d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	__glibcxx_requires_nonempty();
	return *(end() - 1);
    7611:	e8 fa 01 00 00       	call   7810 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    7616:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    761a:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    761e:	be 01 00 00 00       	mov    esi,0x1
    7623:	e8 48 09 00 00       	call   7f70 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl>
    7628:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    762c:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7630:	e8 ab 09 00 00       	call   7fe0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    7635:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7639:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7640:	00 00 
    7642:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7646:	48 39 c8             	cmp    rax,rcx
    7649:	75 0a                	jne    7655 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv+0x65>
    764b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    764f:	48 83 c4 30          	add    rsp,0x30
    7653:	5d                   	pop    rbp
    7654:	c3                   	ret
    7655:	e8 56 cf ff ff       	call   45b0 <__stack_chk_fail@plt>
    765a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007660 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS8_DpOS9_>:
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    7660:	f3 0f 1e fa          	endbr64
    7664:	55                   	push   rbp
    7665:	48 89 e5             	mov    rbp,rsp
    7668:	48 83 ec 20          	sub    rsp,0x20
    766c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7670:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7674:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7678:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    767c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7680:	e8 6b e8 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    7685:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7689:	48 83 c4 20          	add    rsp,0x20
    768d:	5d                   	pop    rbp
    768e:	c3                   	ret
    768f:	90                   	nop

0000000000007690 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>:

      // Called by _M_fill_insert, _M_insert_aux etc.
      _GLIBCXX20_CONSTEXPR
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
    7690:	f3 0f 1e fa          	endbr64
    7694:	55                   	push   rbp
    7695:	48 89 e5             	mov    rbp,rsp
    7698:	48 83 ec 70          	sub    rsp,0x70
    769c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    76a3:	00 00 
    76a5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    76a9:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    76ad:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    76b1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    76b5:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    76b9:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
	if (max_size() - size() < __n)
    76bd:	e8 ae 03 00 00       	call   7a70 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    76c2:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    76c6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    76ca:	e8 91 e7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    76cf:	48 89 c1             	mov    rcx,rax
    76d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    76d6:	48 29 c8             	sub    rax,rcx
    76d9:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    76dd:	73 27                	jae    7706 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x76>
	  __throw_length_error(__N(__s));
    76df:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    76e3:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    76e7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    76ee:	00 00 
    76f0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    76f4:	48 39 c8             	cmp    rax,rcx
    76f7:	0f 85 b3 00 00 00    	jne    77b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x120>
    76fd:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    7701:	e8 ea cd ff ff       	call   44f0 <_ZSt20__throw_length_errorPKc@plt>
    7706:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]

	const size_type __len = size() + (std::max)(size(), __n);
    770a:	e8 51 e7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    770f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7713:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7717:	e8 44 e7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    771c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7720:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    7724:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    7728:	e8 73 03 00 00       	call   7aa0 <_ZSt3maxImERKT_S2_S2_>
    772d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7731:	48 89 c1             	mov    rcx,rax
    7734:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7738:	48 03 01             	add    rax,QWORD PTR [rcx]
    773b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    773f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7743:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7747:	e8 14 e7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    774c:	48 89 c1             	mov    rcx,rax
    774f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    7753:	48 39 c8             	cmp    rax,rcx
    7756:	72 1d                	jb     7775 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xe5>
    7758:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    775c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7760:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    7764:	e8 07 03 00 00       	call   7a70 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    7769:	48 89 c1             	mov    rcx,rax
    776c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    7770:	48 39 c8             	cmp    rax,rcx
    7773:	76 0f                	jbe    7784 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xf4>
    7775:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    7779:	e8 f2 02 00 00       	call   7a70 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>
    777e:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    7782:	eb 08                	jmp    778c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0xfc>
    7784:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7788:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    778c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7790:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    7794:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    779b:	00 00 
    779d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    77a1:	48 39 c8             	cmp    rax,rcx
    77a4:	75 0a                	jne    77b0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc+0x120>
    77a6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    77aa:	48 83 c4 70          	add    rsp,0x70
    77ae:	5d                   	pop    rbp
    77af:	c3                   	ret
    77b0:	e8 fb cd ff ff       	call   45b0 <__stack_chk_fail@plt>
    77b5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    77bc:	00 00 00 
    77bf:	90                   	nop

00000000000077c0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>:
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    77c0:	f3 0f 1e fa          	endbr64
    77c4:	55                   	push   rbp
    77c5:	48 89 e5             	mov    rbp,rsp
    77c8:	48 83 ec 20          	sub    rsp,0x20
    77cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    77d0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    77d4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    77d8:	e8 f3 03 00 00       	call   7bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    77dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    77e0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    77e4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    77e8:	e8 e3 03 00 00       	call   7bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    77ed:	48 89 c1             	mov    rcx,rax
    77f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    77f4:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    77f7:	48 29 c8             	sub    rax,rcx
    77fa:	48 c1 f8 05          	sar    rax,0x5
    77fe:	48 83 c4 20          	add    rsp,0x20
    7802:	5d                   	pop    rbp
    7803:	c3                   	ret
    7804:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    780b:	00 00 00 
    780e:	66 90                	xchg   ax,ax

0000000000007810 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      { return iterator(this->_M_impl._M_finish); }
    7810:	f3 0f 1e fa          	endbr64
    7814:	55                   	push   rbp
    7815:	48 89 e5             	mov    rbp,rsp
    7818:	48 83 ec 20          	sub    rsp,0x20
    781c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7823:	00 00 
    7825:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7829:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    782d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7831:	48 83 c6 08          	add    rsi,0x8
    7835:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7839:	e8 b2 03 00 00       	call   7bf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    783e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7842:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    7846:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    784d:	00 00 
    784f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7853:	48 39 c8             	cmp    rax,rcx
    7856:	75 0a                	jne    7862 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv+0x52>
    7858:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    785c:	48 83 c4 20          	add    rsp,0x20
    7860:	5d                   	pop    rbp
    7861:	c3                   	ret
    7862:	e8 49 cd ff ff       	call   45b0 <__stack_chk_fail@plt>
    7867:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    786e:	00 00 

0000000000007870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      { return iterator(this->_M_impl._M_start); }
    7870:	f3 0f 1e fa          	endbr64
    7874:	55                   	push   rbp
    7875:	48 89 e5             	mov    rbp,rsp
    7878:	48 83 ec 20          	sub    rsp,0x20
    787c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7883:	00 00 
    7885:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7889:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    788d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7891:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7895:	e8 56 03 00 00       	call   7bf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    789a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    789e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    78a2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    78a9:	00 00 
    78ab:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    78af:	48 39 c8             	cmp    rax,rcx
    78b2:	75 0a                	jne    78be <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv+0x4e>
    78b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    78b8:	48 83 c4 20          	add    rsp,0x20
    78bc:	5d                   	pop    rbp
    78bd:	c3                   	ret
    78be:	e8 ed cc ff ff       	call   45b0 <__stack_chk_fail@plt>
    78c3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    78ca:	00 00 00 
    78cd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000078d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
      {
    78d0:	f3 0f 1e fa          	endbr64
    78d4:	55                   	push   rbp
    78d5:	48 89 e5             	mov    rbp,rsp
    78d8:	48 83 ec 40          	sub    rsp,0x40
    78dc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    78e0:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    78e4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    78e8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    78ec:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    78f1:	74 37                	je     792a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x5a>
    78f3:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    78f7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    78fb:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    78ff:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      { return __a.allocate(__n); }
    7903:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7907:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    790b:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    790f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7913:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return __allocator_base<_Tp>::allocate(__n, 0);
    7917:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    791b:	31 c0                	xor    eax,eax
    791d:	89 c2                	mov    edx,eax
    791f:	e8 ec 02 00 00       	call   7c10 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>
    7924:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    7928:	eb 08                	jmp    7932 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x62>
    792a:	31 c0                	xor    eax,eax
    792c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    7930:	eb 00                	jmp    7932 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x62>
    7932:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    7936:	48 83 c4 40          	add    rsp,0x40
    793a:	5d                   	pop    rbp
    793b:	c3                   	ret
    793c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007940 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>:
	{ }
    7940:	f3 0f 1e fa          	endbr64
    7944:	55                   	push   rbp
    7945:	48 89 e5             	mov    rbp,rsp
    7948:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    794c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7950:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7954:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7958:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_storage(__s), _M_len(__l), _M_alloc(__a)
    795c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7960:	48 89 08             	mov    QWORD PTR [rax],rcx
    7963:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7967:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    796b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    796f:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	{ }
    7973:	5d                   	pop    rbp
    7974:	c3                   	ret
    7975:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    797c:	00 00 00 
    797f:	90                   	nop

0000000000007980 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>:
    using __ptr_rebind = typename pointer_traits<_Ptr>::template rebind<_Tp>;

  template<typename _Tp>
    constexpr _Tp*
    __to_address(_Tp* __ptr) noexcept
    {
    7980:	f3 0f 1e fa          	endbr64
    7984:	55                   	push   rbp
    7985:	48 89 e5             	mov    rbp,rsp
    7988:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      static_assert(!std::is_function<_Tp>::value, "not a function pointer");
      return __ptr;
    798c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7990:	5d                   	pop    rbp
    7991:	c3                   	ret
    7992:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7999:	00 00 00 
    799c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000079a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>:
      {
    79a0:	f3 0f 1e fa          	endbr64
    79a4:	55                   	push   rbp
    79a5:	48 89 e5             	mov    rbp,rsp
    79a8:	48 83 ec 20          	sub    rsp,0x20
    79ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    79b4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    79b8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
	return std::__relocate_a(__first, __last, __result, __alloc);
    79bc:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    79c0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    79c4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    79c8:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    79cc:	e8 9f 02 00 00       	call   7c70 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>
    79d1:	48 83 c4 20          	add    rsp,0x20
    79d5:	5d                   	pop    rbp
    79d6:	c3                   	ret
    79d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    79de:	00 00 

00000000000079e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      { return this->_M_impl; }
    79e0:	f3 0f 1e fa          	endbr64
    79e4:	55                   	push   rbp
    79e5:	48 89 e5             	mov    rbp,rsp
    79e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79f0:	5d                   	pop    rbp
    79f1:	c3                   	ret
    79f2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    79f9:	00 00 00 
    79fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev>:
	{
    7a00:	f3 0f 1e fa          	endbr64
    7a04:	55                   	push   rbp
    7a05:	48 89 e5             	mov    rbp,rsp
    7a08:	48 83 ec 40          	sub    rsp,0x40
    7a0c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    7a10:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7a14:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (_M_storage)
    7a18:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    7a1c:	74 48                	je     7a66 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
    7a1e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
	      deallocate(_M_alloc, _M_storage, _M_len);
    7a22:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    7a26:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    7a29:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a2d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7a31:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    7a35:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    7a39:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7a3d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7a41:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7a45:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    7a49:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    7a4d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7a51:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	__allocator_base<_Tp>::deallocate(__p, __n);
    7a55:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7a59:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7a5d:	e8 de 04 00 00       	call   7f40 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    7a62:	eb 00                	jmp    7a64 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x64>
	    __gnu_cxx::__alloc_traits<_Tp_alloc_type>::
    7a64:	eb 00                	jmp    7a66 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
	}
    7a66:	48 83 c4 40          	add    rsp,0x40
    7a6a:	5d                   	pop    rbp
    7a6b:	c3                   	ret
    7a6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007a70 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv>:
      { return _S_max_size(_M_get_Tp_allocator()); }
    7a70:	f3 0f 1e fa          	endbr64
    7a74:	55                   	push   rbp
    7a75:	48 89 e5             	mov    rbp,rsp
    7a78:	48 83 ec 10          	sub    rsp,0x10
    7a7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a80:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7a84:	e8 e7 00 00 00       	call   7b70 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    7a89:	48 89 c7             	mov    rdi,rax
    7a8c:	e8 4f 00 00 00       	call   7ae0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>
    7a91:	48 83 c4 10          	add    rsp,0x10
    7a95:	5d                   	pop    rbp
    7a96:	c3                   	ret
    7a97:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    7a9e:	00 00 

0000000000007aa0 <_ZSt3maxImERKT_S2_S2_>:
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    {
    7aa0:	f3 0f 1e fa          	endbr64
    7aa4:	55                   	push   rbp
    7aa5:	48 89 e5             	mov    rbp,rsp
    7aa8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7aac:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    7ab0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7ab4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7ab7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7abb:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    7abe:	73 0a                	jae    7aca <_ZSt3maxImERKT_S2_S2_+0x2a>
	return __b;
    7ac0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ac4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ac8:	eb 08                	jmp    7ad2 <_ZSt3maxImERKT_S2_S2_+0x32>
      return __a;
    7aca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7ace:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    }
    7ad2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ad6:	5d                   	pop    rbp
    7ad7:	c3                   	ret
    7ad8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7adf:	00 

0000000000007ae0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>:
	return __n;
      }

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
      {
    7ae0:	f3 0f 1e fa          	endbr64
    7ae4:	55                   	push   rbp
    7ae5:	48 89 e5             	mov    rbp,rsp
    7ae8:	48 83 ec 40          	sub    rsp,0x40
    7aec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7af3:	00 00 
    7af5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7af9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7afd:	48 b8 ff ff ff ff ff 	movabs rax,0x3ffffffffffffff
    7b04:	ff ff 03 
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    7b07:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7b0b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7b0f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    7b13:	48 b8 ff ff ff ff ff 	movabs rax,0x7ffffffffffffff
    7b1a:	ff ff 07 
    7b1d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7b21:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7b25:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
	return (std::min)(__diffmax, __allocmax);
    7b29:	e8 62 00 00 00       	call   7b90 <_ZSt3minImERKT_S2_S2_>
    7b2e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7b32:	eb 00                	jmp    7b34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_+0x54>
    7b34:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7b38:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b3b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7b3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7b46:	00 00 
    7b48:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7b4c:	48 39 c8             	cmp    rax,rcx
    7b4f:	75 16                	jne    7b67 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_+0x87>
    7b51:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7b55:	48 83 c4 40          	add    rsp,0x40
    7b59:	5d                   	pop    rbp
    7b5a:	c3                   	ret
    7b5b:	f3 0f 1e fa          	endbr64
    7b5f:	48 89 c7             	mov    rdi,rax
    7b62:	e8 59 ed ff ff       	call   68c0 <__clang_call_terminate>
    7b67:	e8 44 ca ff ff       	call   45b0 <__stack_chk_fail@plt>
    7b6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007b70 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      { return this->_M_impl; }
    7b70:	f3 0f 1e fa          	endbr64
    7b74:	55                   	push   rbp
    7b75:	48 89 e5             	mov    rbp,rsp
    7b78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b80:	5d                   	pop    rbp
    7b81:	c3                   	ret
    7b82:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7b89:	00 00 00 
    7b8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007b90 <_ZSt3minImERKT_S2_S2_>:
    {
    7b90:	f3 0f 1e fa          	endbr64
    7b94:	55                   	push   rbp
    7b95:	48 89 e5             	mov    rbp,rsp
    7b98:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7b9c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
      if (__b < __a)
    7ba0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ba4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7ba7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7bab:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    7bae:	73 0a                	jae    7bba <_ZSt3minImERKT_S2_S2_+0x2a>
	return __b;
    7bb0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bb4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7bb8:	eb 08                	jmp    7bc2 <_ZSt3minImERKT_S2_S2_+0x32>
      return __a;
    7bba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7bbe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    }
    7bc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bc6:	5d                   	pop    rbp
    7bc7:	c3                   	ret
    7bc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7bcf:	00 

0000000000007bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      { return _M_current; }
    7bd0:	f3 0f 1e fa          	endbr64
    7bd4:	55                   	push   rbp
    7bd5:	48 89 e5             	mov    rbp,rsp
    7bd8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be0:	5d                   	pop    rbp
    7be1:	c3                   	ret
    7be2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7be9:	00 00 00 
    7bec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007bf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>:
      : _M_current(__i) { }
    7bf0:	f3 0f 1e fa          	endbr64
    7bf4:	55                   	push   rbp
    7bf5:	48 89 e5             	mov    rbp,rsp
    7bf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bfc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7c00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c04:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    7c08:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    7c0b:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c0e:	5d                   	pop    rbp
    7c0f:	c3                   	ret

0000000000007c10 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>:
      {
    7c10:	f3 0f 1e fa          	endbr64
    7c14:	55                   	push   rbp
    7c15:	48 89 e5             	mov    rbp,rsp
    7c18:	48 83 ec 20          	sub    rsp,0x20
    7c1c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    7c20:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    7c24:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    7c28:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7c2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c30:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    7c34:	48 b9 ff ff ff ff ff 	movabs rcx,0x3ffffffffffffff
    7c3b:	ff ff 03 
    7c3e:	48 39 c8             	cmp    rax,rcx
    7c41:	76 1a                	jbe    7c5d <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7c43:	48 b8 ff ff ff ff ff 	movabs rax,0x7ffffffffffffff
    7c4a:	ff ff 07 
    7c4d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    7c51:	76 05                	jbe    7c58 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    7c53:	e8 d8 c8 ff ff       	call   4530 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7c58:	e8 33 c8 ff ff       	call   4490 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7c5d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    7c61:	48 c1 e7 05          	shl    rdi,0x5
    7c65:	e8 06 c9 ff ff       	call   4570 <_Znwm@plt>
    7c6a:	48 83 c4 20          	add    rsp,0x20
    7c6e:	5d                   	pop    rbp
    7c6f:	c3                   	ret

0000000000007c70 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
    7c70:	f3 0f 1e fa          	endbr64
    7c74:	55                   	push   rbp
    7c75:	48 89 e5             	mov    rbp,rsp
    7c78:	48 83 ec 30          	sub    rsp,0x30
    7c7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c80:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7c84:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7c88:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      return std::__relocate_a_1(std::__niter_base(__first),
    7c8c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7c90:	e8 ab 00 00 00       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7c95:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
				 std::__niter_base(__last),
    7c99:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7c9d:	e8 9e 00 00 00       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7ca2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
				 std::__niter_base(__result), __alloc);
    7ca6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    7caa:	e8 91 00 00 00       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    7caf:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    7cb3:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    7cb7:	48 89 c2             	mov    rdx,rax
    7cba:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
      return std::__relocate_a_1(std::__niter_base(__first),
    7cbe:	e8 0d 00 00 00       	call   7cd0 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>
    7cc3:	48 83 c4 30          	add    rsp,0x30
    7cc7:	5d                   	pop    rbp
    7cc8:	c3                   	ret
    7cc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000007cd0 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_>:
    {
    7cd0:	f3 0f 1e fa          	endbr64
    7cd4:	55                   	push   rbp
    7cd5:	48 89 e5             	mov    rbp,rsp
    7cd8:	48 83 ec 30          	sub    rsp,0x30
    7cdc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ce0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ce4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7ce8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      _ForwardIterator __cur = __result;
    7cec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7cf0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      for (; __first != __last; ++__first, (void)++__cur)
    7cf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7cf8:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    7cfc:	74 2b                	je     7d29 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_+0x59>
	std::__relocate_object_a(std::__addressof(*__cur),
    7cfe:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
				 std::__addressof(*__first), __alloc);
    7d02:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7d06:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
	std::__relocate_object_a(std::__addressof(*__cur),
    7d0a:	e8 51 00 00 00       	call   7d60 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    7d0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d13:	48 83 c0 20          	add    rax,0x20
    7d17:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7d1b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7d1f:	48 83 c0 20          	add    rax,0x20
    7d23:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7d27:	eb cb                	jmp    7cf4 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_+0x24>
      return __cur;
    7d29:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7d2d:	48 83 c4 30          	add    rsp,0x30
    7d31:	5d                   	pop    rbp
    7d32:	c3                   	ret
    7d33:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7d3a:	00 00 00 
    7d3d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    7d40:	f3 0f 1e fa          	endbr64
    7d44:	55                   	push   rbp
    7d45:	48 89 e5             	mov    rbp,rsp
    7d48:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d4c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d50:	5d                   	pop    rbp
    7d51:	c3                   	ret
    7d52:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7d59:	00 00 00 
    7d5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007d60 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_>:
    {
    7d60:	f3 0f 1e fa          	endbr64
    7d64:	55                   	push   rbp
    7d65:	48 89 e5             	mov    rbp,rsp
    7d68:	48 83 ec 40          	sub    rsp,0x40
    7d6c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    7d70:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    7d74:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
      __traits::construct(__alloc, __dest, std::move(*__orig));
    7d78:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    7d7c:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    7d80:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7d84:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7d88:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7d8c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    7d90:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    7d94:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    7d98:	e8 33 00 00 00       	call   7dd0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS7_DpOS8_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    7d9d:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    7da1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7da5:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    7da9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  std::destroy_at(__p);
    7dad:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7db1:	e8 6a 01 00 00       	call   7f20 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
    7db6:	eb 0c                	jmp    7dc4 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_+0x64>
    7db8:	f3 0f 1e fa          	endbr64
    7dbc:	48 89 c7             	mov    rdi,rax
    7dbf:	e8 fc ea ff ff       	call   68c0 <__clang_call_terminate>
    }
    7dc4:	48 83 c4 40          	add    rsp,0x40
    7dc8:	5d                   	pop    rbp
    7dc9:	c3                   	ret
    7dca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007dd0 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS7_DpOS8_>:
    7dd0:	f3 0f 1e fa          	endbr64
    7dd4:	55                   	push   rbp
    7dd5:	48 89 e5             	mov    rbp,rsp
    7dd8:	48 83 ec 20          	sub    rsp,0x20
    7ddc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7de0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7de4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7de8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dec:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    7df0:	e8 0b 00 00 00       	call   7e00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>
    7df5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7df9:	48 83 c4 20          	add    rsp,0x20
    7dfd:	5d                   	pop    rbp
    7dfe:	c3                   	ret
    7dff:	90                   	nop

0000000000007e00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>:
      {
    7e00:	f3 0f 1e fa          	endbr64
    7e04:	55                   	push   rbp
    7e05:	48 89 e5             	mov    rbp,rsp
    7e08:	48 83 ec 60          	sub    rsp,0x60
    7e0c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    7e10:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    7e14:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    7e18:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    7e1c:	e8 bf ea ff ff       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    7e21:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7e25:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e29:	e8 92 ef ff ff       	call   6dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    7e2e:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7e32:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    7e36:	48 89 c2             	mov    rdx,rax
    7e39:	e8 f2 ea ff ff       	call   6930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_>
    7e3e:	eb 00                	jmp    7e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x40>
	if (__str._M_is_local())
    7e40:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e44:	e8 17 f1 ff ff       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    7e49:	88 45 c7             	mov    BYTE PTR [rbp-0x39],al
    7e4c:	eb 00                	jmp    7e4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x4e>
    7e4e:	8a 45 c7             	mov    al,BYTE PTR [rbp-0x39]
    7e51:	a8 01                	test   al,0x1
    7e53:	75 02                	jne    7e57 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x57>
    7e55:	eb 3b                	jmp    7e92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x92>
    7e57:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7e5b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    7e5f:	48 83 c0 10          	add    rax,0x10
    7e63:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7e67:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7e6b:	48 83 c0 10          	add    rax,0x10
    7e6f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
			      __str.length() + 1);
    7e73:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e77:	e8 e4 e1 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    7e7c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    7e80:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    7e84:	48 89 c2             	mov    rdx,rax
    7e87:	48 83 c2 01          	add    rdx,0x1
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    7e8b:	e8 20 f0 ff ff       	call   6eb0 <_ZNSt11char_traitsIcE4copyEPcPKcm>
	  }
    7e90:	eb 26                	jmp    7eb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0xb8>
	    _M_data(__str._M_data());
    7e92:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7e96:	e8 05 ea ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    7e9b:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7e9f:	48 89 c6             	mov    rsi,rax
    7ea2:	e8 59 ec ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    7ea7:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	    _M_capacity(__str._M_allocated_capacity);
    7eab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7eaf:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    7eb3:	e8 38 ed ff ff       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    7eb8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7ebc:	e8 9f e1 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    7ec1:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    7ec5:	48 89 c6             	mov    rsi,rax
    7ec8:	e8 33 f0 ff ff       	call   6f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_use_local_data());
    7ecd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7ed1:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7ed5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7ed9:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7edd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	return _M_local_data();
    7ee1:	e8 fa e9 ff ff       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    7ee6:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    7eea:	48 89 c6             	mov    rsi,rax
	__str._M_data(__str._M_use_local_data());
    7eed:	e8 0e ec ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    7ef2:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    7ef6:	31 c0                	xor    eax,eax
    7ef8:	89 c6                	mov    esi,eax
    7efa:	e8 71 ed ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    7eff:	eb 00                	jmp    7f01 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_+0x101>
      }
    7f01:	48 83 c4 60          	add    rsp,0x60
    7f05:	5d                   	pop    rbp
    7f06:	c3                   	ret
    7f07:	f3 0f 1e fa          	endbr64
    7f0b:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    7f0e:	e8 ad e9 ff ff       	call   68c0 <__clang_call_terminate>
    7f13:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7f1a:	00 00 00 
    7f1d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007f20 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    {
    7f20:	f3 0f 1e fa          	endbr64
    7f24:	55                   	push   rbp
    7f25:	48 89 e5             	mov    rbp,rsp
    7f28:	48 83 ec 10          	sub    rsp,0x10
    7f2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	__location->~_Tp();
    7f30:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    7f34:	e8 f7 e1 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    }
    7f39:	48 83 c4 10          	add    rsp,0x10
    7f3d:	5d                   	pop    rbp
    7f3e:	c3                   	ret
    7f3f:	90                   	nop

0000000000007f40 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>:
      {
    7f40:	f3 0f 1e fa          	endbr64
    7f44:	55                   	push   rbp
    7f45:	48 89 e5             	mov    rbp,rsp
    7f48:	48 83 ec 20          	sub    rsp,0x20
    7f4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7f50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7f54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7f58:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    7f5c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7f60:	48 c1 e6 05          	shl    rsi,0x5
    7f64:	e8 17 c6 ff ff       	call   4580 <_ZdlPvm@plt>
      }
    7f69:	48 83 c4 20          	add    rsp,0x20
    7f6d:	5d                   	pop    rbp
    7f6e:	c3                   	ret
    7f6f:	90                   	nop

0000000000007f70 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl>:
      { return __normal_iterator(_M_current - __n); }
    7f70:	f3 0f 1e fa          	endbr64
    7f74:	55                   	push   rbp
    7f75:	48 89 e5             	mov    rbp,rsp
    7f78:	48 83 ec 30          	sub    rsp,0x30
    7f7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f83:	00 00 
    7f85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7f89:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    7f8d:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    7f91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7f95:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7f98:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    7f9c:	48 c1 e1 05          	shl    rcx,0x5
    7fa0:	48 29 c8             	sub    rax,rcx
    7fa3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7fa7:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    7fab:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    7faf:	e8 3c fc ff ff       	call   7bf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    7fb4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7fb8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    7fbc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7fc3:	00 00 
    7fc5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7fc9:	48 39 c8             	cmp    rax,rcx
    7fcc:	75 0a                	jne    7fd8 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEmiEl+0x68>
    7fce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    7fd2:	48 83 c4 30          	add    rsp,0x30
    7fd6:	5d                   	pop    rbp
    7fd7:	c3                   	ret
    7fd8:	e8 d3 c5 ff ff       	call   45b0 <__stack_chk_fail@plt>
    7fdd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007fe0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      { return *_M_current; }
    7fe0:	f3 0f 1e fa          	endbr64
    7fe4:	55                   	push   rbp
    7fe5:	48 89 e5             	mov    rbp,rsp
    7fe8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7fec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ff0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7ff3:	5d                   	pop    rbp
    7ff4:	c3                   	ret
    7ff5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    7ffc:	00 00 00 
    7fff:	90                   	nop

0000000000008000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
      {
    8000:	f3 0f 1e fa          	endbr64
    8004:	55                   	push   rbp
    8005:	48 89 e5             	mov    rbp,rsp
    8008:	48 83 ec 30          	sub    rsp,0x30
    800c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8010:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8014:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8018:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	return _M_replace(size_type(0), this->size(), __s,
    801c:	e8 ef f2 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8021:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8025:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8029:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
			  traits_type::length(__s));
    802d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8031:	e8 ca f0 ff ff       	call   7100 <_ZNSt11char_traitsIcE6lengthEPKc>
    8036:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    803a:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    803e:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8042:	49 89 c0             	mov    r8,rax
	return _M_replace(size_type(0), this->size(), __s,
    8045:	31 c0                	xor    eax,eax
    8047:	89 c6                	mov    esi,eax
    8049:	e8 12 00 00 00       	call   8060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    804e:	48 83 c4 30          	add    rsp,0x30
    8052:	5d                   	pop    rbp
    8053:	c3                   	ret
    8054:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    805b:	00 00 00 
    805e:	66 90                	xchg   ax,ax

0000000000008060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
    8060:	f3 0f 1e fa          	endbr64
    8064:	55                   	push   rbp
    8065:	48 89 e5             	mov    rbp,rsp
    8068:	48 83 ec 60          	sub    rsp,0x60
    806c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8070:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8074:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8078:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    807c:	4c 89 45 d8          	mov    QWORD PTR [rbp-0x28],r8
    8080:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8084:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    8088:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    808c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    8090:	48 8d 0d f7 90 00 00 	lea    rcx,[rip+0x90f7]        # 1118e <_IO_stdin_used+0x18e>
    8097:	e8 14 01 00 00       	call   81b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    809c:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]

      const size_type __old_size = this->size();
    80a0:	e8 6b f2 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    80a5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    80a9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      const size_type __new_size = __old_size + __len2 - __len1;
    80ad:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    80b1:	48 03 45 d8          	add    rax,QWORD PTR [rbp-0x28]
    80b5:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    80b9:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax

      if (__new_size <= this->capacity())
    80bd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    80c1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    80c5:	e8 46 01 00 00       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    80ca:	48 89 c1             	mov    rcx,rax
    80cd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    80d1:	48 39 c8             	cmp    rax,rcx
    80d4:	0f 87 97 00 00 00    	ja     8171 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x111>
    80da:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	{
	  pointer __p = this->_M_data() + __pos;
    80de:	e8 bd e7 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    80e3:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    80e7:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    80eb:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax

	  const size_type __how_much = __old_size - __pos - __len1;
    80ef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    80f3:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    80f7:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    80fb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	      _S_copy(this->_M_data(), __newp, __new_size);
	      this->_M_get_allocator().deallocate(__newp, __new_size);
	    }
	  else
#endif
	  if (__builtin_expect(_M_disjunct(__s), true))
    80ff:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8103:	e8 68 01 00 00       	call   8270 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    8108:	a8 01                	test   al,0x1
    810a:	75 02                	jne    810e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xae>
    810c:	eb 44                	jmp    8152 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xf2>
	    {
	      if (__how_much && __len1 != __len2)
    810e:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    8113:	74 23                	je     8138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xd8>
    8115:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8119:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
    811d:	74 19                	je     8138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xd8>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    811f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8123:	48 03 7d d8          	add    rdi,QWORD PTR [rbp-0x28]
    8127:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    812b:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    812f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    8133:	e8 e8 01 00 00       	call   8320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    8138:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    813d:	74 11                	je     8150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0xf0>
		this->_S_copy(__p, __s, __len2);
    813f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8143:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8147:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    814b:	e8 f0 ec ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	    }
    8150:	eb 1d                	jmp    816f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x10f>
    8152:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	  else
	    _M_replace_cold(__p, __len1, __s, __len2, __how_much);
    8156:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    815a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    815e:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8162:	4c 8b 45 d8          	mov    r8,QWORD PTR [rbp-0x28]
    8166:	4c 8b 4d b8          	mov    r9,QWORD PTR [rbp-0x48]
    816a:	e8 21 c5 ff ff       	call   4690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@plt>
	}
    816f:	eb 19                	jmp    818a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x12a>
    8171:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    8175:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8179:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    817d:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8181:	4c 8b 45 d8          	mov    r8,QWORD PTR [rbp-0x28]
    8185:	e8 e6 01 00 00       	call   8370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    818a:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]

      this->_M_set_length(__new_size);
    818e:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    8192:	e8 d9 ea ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    8197:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
      return *this;
    819b:	48 83 c4 60          	add    rsp,0x60
    819f:	5d                   	pop    rbp
    81a0:	c3                   	ret
    81a1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    81a8:	00 00 00 
    81ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000081b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      {
    81b0:	f3 0f 1e fa          	endbr64
    81b4:	55                   	push   rbp
    81b5:	48 89 e5             	mov    rbp,rsp
    81b8:	48 83 ec 30          	sub    rsp,0x30
    81bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    81c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    81c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    81c8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    81cc:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    81d0:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	if (this->max_size() - (this->size() - __n1) < __n2)
    81d4:	e8 47 eb ff ff       	call   6d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    81d9:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    81dd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    81e1:	e8 2a f1 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    81e6:	48 89 c1             	mov    rcx,rax
    81e9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    81ed:	48 2b 4d f0          	sub    rcx,QWORD PTR [rbp-0x10]
    81f1:	48 29 c8             	sub    rax,rcx
    81f4:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    81f8:	73 09                	jae    8203 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x53>
	  __throw_length_error(__N(__s));
    81fa:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    81fe:	e8 ed c2 ff ff       	call   44f0 <_ZSt20__throw_length_errorPKc@plt>
      }
    8203:	48 83 c4 30          	add    rsp,0x30
    8207:	5d                   	pop    rbp
    8208:	c3                   	ret
    8209:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      {
    8210:	f3 0f 1e fa          	endbr64
    8214:	55                   	push   rbp
    8215:	48 89 e5             	mov    rbp,rsp
    8218:	48 83 ec 20          	sub    rsp,0x20
    821c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8220:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8224:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	return _M_is_local() ? size_type(_S_local_capacity)
    8228:	e8 33 ed ff ff       	call   6f60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    822d:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    8230:	eb 00                	jmp    8232 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x22>
    8232:	8a 45 f7             	mov    al,BYTE PTR [rbp-0x9]
    8235:	a8 01                	test   al,0x1
    8237:	75 02                	jne    823b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
    8239:	eb 0b                	jmp    8246 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x36>
    823b:	b8 0f 00 00 00       	mov    eax,0xf
    8240:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8244:	eb 0c                	jmp    8252 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x42>
    8246:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	                     : _M_allocated_capacity;
    824a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    824e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8252:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return _M_is_local() ? size_type(_S_local_capacity)
    8256:	48 83 c4 20          	add    rsp,0x20
    825a:	5d                   	pop    rbp
    825b:	c3                   	ret
    825c:	f3 0f 1e fa          	endbr64
    8260:	48 89 c7             	mov    rdi,rax
    8263:	e8 58 e6 ff ff       	call   68c0 <__clang_call_terminate>
    8268:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    826f:	00 

0000000000008270 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      {
    8270:	f3 0f 1e fa          	endbr64
    8274:	55                   	push   rbp
    8275:	48 89 e5             	mov    rbp,rsp
    8278:	48 83 ec 50          	sub    rsp,0x50
    827c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8283:	00 00 
    8285:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8289:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    828d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8291:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    8295:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	return (less<const _CharT*>()(__s, _M_data())
    8299:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    829d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    82a1:	e8 fa e5 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    82a6:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    82aa:	48 89 c2             	mov    rdx,rax
    82ad:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    82b1:	e8 fa 01 00 00       	call   84b0 <_ZNKSt4lessIPKcEclES1_S1_>
    82b6:	88 c1                	mov    cl,al
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    82b8:	b0 01                	mov    al,0x1
    82ba:	f6 c1 01             	test   cl,0x1
    82bd:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    82c0:	75 2d                	jne    82ef <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x7f>
    82c2:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    82c6:	e8 d5 e5 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    82cb:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    82cf:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    82d3:	e8 38 f0 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    82d8:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    82dc:	48 01 c6             	add    rsi,rax
    82df:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    82e3:	48 8d 7d f6          	lea    rdi,[rbp-0xa]
    82e7:	e8 c4 01 00 00       	call   84b0 <_ZNKSt4lessIPKcEclES1_S1_>
    82ec:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    82ef:	8a 45 df             	mov    al,BYTE PTR [rbp-0x21]
    82f2:	88 45 bf             	mov    BYTE PTR [rbp-0x41],al
	return (less<const _CharT*>()(__s, _M_data())
    82f5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82fc:	00 00 
    82fe:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8302:	48 39 c8             	cmp    rax,rcx
    8305:	75 0b                	jne    8312 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0xa2>
    8307:	8a 45 bf             	mov    al,BYTE PTR [rbp-0x41]
    830a:	24 01                	and    al,0x1
    830c:	48 83 c4 50          	add    rsp,0x50
    8310:	5d                   	pop    rbp
    8311:	c3                   	ret
    8312:	e8 99 c2 ff ff       	call   45b0 <__stack_chk_fail@plt>
    8317:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    831e:	00 00 

0000000000008320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      {
    8320:	f3 0f 1e fa          	endbr64
    8324:	55                   	push   rbp
    8325:	48 89 e5             	mov    rbp,rsp
    8328:	48 83 ec 20          	sub    rsp,0x20
    832c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8330:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8334:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	if (__n == 1)
    8338:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    833d:	75 0f                	jne    834e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x2e>
	  traits_type::assign(*__d, *__s);
    833f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8343:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8347:	e8 44 eb ff ff       	call   6e90 <_ZNSt11char_traitsIcE6assignERcRKc>
    834c:	eb 11                	jmp    835f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x3f>
	  traits_type::move(__d, __s, __n);
    834e:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8352:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8356:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    835a:	e8 81 01 00 00       	call   84e0 <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    835f:	48 83 c4 20          	add    rsp,0x20
    8363:	5d                   	pop    rbp
    8364:	c3                   	ret
    8365:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    836c:	00 00 00 
    836f:	90                   	nop

0000000000008370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    {
    8370:	f3 0f 1e fa          	endbr64
    8374:	55                   	push   rbp
    8375:	48 89 e5             	mov    rbp,rsp
    8378:	48 83 ec 60          	sub    rsp,0x60
    837c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8383:	00 00 
    8385:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8389:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    838d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8391:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8395:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    8399:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
    839d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    83a1:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
      const size_type __how_much = length() - __pos - __len1;
    83a5:	e8 b6 dc ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    83aa:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83ae:	48 2b 45 e0          	sub    rax,QWORD PTR [rbp-0x20]
    83b2:	48 2b 45 d8          	sub    rax,QWORD PTR [rbp-0x28]
    83b6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      size_type __new_capacity = length() + __len2 - __len1;
    83ba:	e8 a1 dc ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    83bf:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83c3:	48 03 45 c8          	add    rax,QWORD PTR [rbp-0x38]
    83c7:	48 2b 45 d8          	sub    rax,QWORD PTR [rbp-0x28]
    83cb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
      pointer __r = _M_create(__new_capacity, capacity());
    83cf:	e8 3c fe ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    83d4:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    83d8:	48 89 c2             	mov    rdx,rax
    83db:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    83df:	e8 3c e7 ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    83e4:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      if (__pos)
    83e8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    83ed:	74 21                	je     8410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xa0>
    83ef:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
	this->_S_copy(__r, _M_data(), __pos);
    83f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    83f7:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    83fb:	e8 a0 e4 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8400:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    8404:	48 89 c6             	mov    rsi,rax
    8407:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    840b:	e8 30 ea ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    8410:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    8415:	74 1c                	je     8433 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xc3>
    8417:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
    841c:	74 15                	je     8433 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xc3>
	this->_S_copy(__r + __pos, __s, __len2);
    841e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    8422:	48 03 7d e0          	add    rdi,QWORD PTR [rbp-0x20]
    8426:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    842a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    842e:	e8 0d ea ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    8433:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    8438:	74 31                	je     846b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xfb>
    843a:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
	this->_S_copy(__r + __pos + __len2,
    843e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8442:	48 03 45 e0          	add    rax,QWORD PTR [rbp-0x20]
    8446:	48 03 45 c8          	add    rax,QWORD PTR [rbp-0x38]
    844a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
		      _M_data() + __pos + __len1, __how_much);
    844e:	e8 4d e4 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8453:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    8457:	48 89 c6             	mov    rsi,rax
    845a:	48 03 75 e0          	add    rsi,QWORD PTR [rbp-0x20]
    845e:	48 03 75 d8          	add    rsi,QWORD PTR [rbp-0x28]
    8462:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
	this->_S_copy(__r + __pos + __len2,
    8466:	e8 d5 e9 ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    846b:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_dispose();
    846f:	e8 ac ea ff ff       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    8474:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_data(__r);
    8478:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    847c:	e8 7f e6 ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    8481:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      _M_capacity(__new_capacity);
    8485:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8489:	e8 62 e7 ff ff       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    848e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8495:	00 00 
    8497:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    849b:	48 39 c8             	cmp    rax,rcx
    849e:	75 06                	jne    84a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x136>
    84a0:	48 83 c4 60          	add    rsp,0x60
    84a4:	5d                   	pop    rbp
    84a5:	c3                   	ret
    84a6:	e8 05 c1 ff ff       	call   45b0 <__stack_chk_fail@plt>
    84ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000084b0 <_ZNKSt4lessIPKcEclES1_S1_>:
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
      {
    84b0:	f3 0f 1e fa          	endbr64
    84b4:	55                   	push   rbp
    84b5:	48 89 e5             	mov    rbp,rsp
    84b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    84bc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    84c0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
	  return __x < __y;
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    84c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    84c8:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    84cc:	48 39 c8             	cmp    rax,rcx
    84cf:	0f 92 c0             	setb   al
    84d2:	24 01                	and    al,0x1
    84d4:	5d                   	pop    rbp
    84d5:	c3                   	ret
    84d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    84dd:	00 00 00 

00000000000084e0 <_ZNSt11char_traitsIcE4moveEPcPKcm>:
      {
    84e0:	f3 0f 1e fa          	endbr64
    84e4:	55                   	push   rbp
    84e5:	48 89 e5             	mov    rbp,rsp
    84e8:	48 83 ec 30          	sub    rsp,0x30
    84ec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    84f0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    84f4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    84f8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    84fd:	75 0a                	jne    8509 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x29>
	  return __s1;
    84ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8503:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8507:	eb 1d                	jmp    8526 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x46>
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    8509:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    850d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8511:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    8515:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8519:	e8 72 c2 ff ff       	call   4790 <memmove@plt>
    851e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8522:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    8526:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    852a:	48 83 c4 30          	add    rsp,0x30
    852e:	5d                   	pop    rbp
    852f:	c3                   	ret

0000000000008530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
      {
    8530:	f3 0f 1e fa          	endbr64
    8534:	55                   	push   rbp
    8535:	48 89 e5             	mov    rbp,rsp
    8538:	48 83 ec 30          	sub    rsp,0x30
    853c:	40 88 f0             	mov    al,sil
    853f:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    8546:	00 00 
    8548:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    854c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8550:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    8553:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    8557:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	const size_type __size = this->size();
    855b:	e8 b0 ed ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8560:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8564:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__size + 1 > this->capacity())
    8568:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    856c:	48 83 c0 01          	add    rax,0x1
    8570:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8574:	e8 97 fc ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8579:	48 89 c1             	mov    rcx,rax
    857c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8580:	48 39 c8             	cmp    rax,rcx
    8583:	76 1a                	jbe    859f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x6f>
    8585:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
    8589:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    858d:	31 c0                	xor    eax,eax
    858f:	89 c1                	mov    ecx,eax
    8591:	41 b8 01 00 00 00    	mov    r8d,0x1
    8597:	48 89 ca             	mov    rdx,rcx
    859a:	e8 d1 fd ff ff       	call   8370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    859f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	traits_type::assign(this->_M_data()[__size], __c);
    85a3:	e8 f8 e2 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    85a8:	48 89 c7             	mov    rdi,rax
    85ab:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    85af:	48 01 c7             	add    rdi,rax
    85b2:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    85b6:	e8 d5 e8 ff ff       	call   6e90 <_ZNSt11char_traitsIcE6assignERcRKc>
    85bb:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
	this->_M_set_length(__size + 1);
    85bf:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    85c3:	48 ff c6             	inc    rsi
    85c6:	e8 a5 e6 ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    85cb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    85d2:	00 00 
    85d4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    85d8:	48 39 c8             	cmp    rax,rcx
    85db:	75 06                	jne    85e3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0xb3>
    85dd:	48 83 c4 30          	add    rsp,0x30
    85e1:	5d                   	pop    rbp
    85e2:	c3                   	ret
    85e3:	e8 c8 bf ff ff       	call   45b0 <__stack_chk_fail@plt>
    85e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    85ef:	00 

00000000000085f0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
      {
    85f0:	f3 0f 1e fa          	endbr64
    85f4:	55                   	push   rbp
    85f5:	48 89 e5             	mov    rbp,rsp
    85f8:	48 83 ec 10          	sub    rsp,0x10
    85fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8600:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8604:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
	_M_deallocate(_M_impl._M_start,
    8608:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    860b:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
    860f:	48 29 f2             	sub    rdx,rsi
    8612:	48 c1 fa 05          	sar    rdx,0x5
	_M_deallocate(_M_impl._M_start,
    8616:	e8 b5 00 00 00       	call   86d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    861b:	eb 00                	jmp    861d <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x2d>
    861d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      }
    8621:	e8 1a 01 00 00       	call   8740 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev>
    8626:	48 83 c4 10          	add    rsp,0x10
    862a:	5d                   	pop    rbp
    862b:	c3                   	ret
    862c:	f3 0f 1e fa          	endbr64
    8630:	48 89 c7             	mov    rdi,rax
	_M_deallocate(_M_impl._M_start,
    8633:	e8 88 e2 ff ff       	call   68c0 <__clang_call_terminate>
    8638:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    863f:	00 

0000000000008640 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    {
    8640:	f3 0f 1e fa          	endbr64
    8644:	55                   	push   rbp
    8645:	48 89 e5             	mov    rbp,rsp
    8648:	48 83 ec 10          	sub    rsp,0x10
    864c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8650:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
#if __cpp_constexpr_dynamic_alloc // >= C++20
      if (std::__is_constant_evaluated())
	return std::_Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    8654:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8658:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    865c:	e8 0f 00 00 00       	call   8670 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
    8661:	48 83 c4 10          	add    rsp,0x10
    8665:	5d                   	pop    rbp
    8666:	c3                   	ret
    8667:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    866e:	00 00 

0000000000008670 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
	{
    8670:	f3 0f 1e fa          	endbr64
    8674:	55                   	push   rbp
    8675:	48 89 e5             	mov    rbp,rsp
    8678:	48 83 ec 10          	sub    rsp,0x10
    867c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8680:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
	  for (; __first != __last; ++__first)
    8684:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8688:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    868c:	74 17                	je     86a5 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x35>
	    std::_Destroy(std::__addressof(*__first));
    868e:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8692:	e8 19 00 00 00       	call   86b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    8697:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    869b:	48 83 c0 20          	add    rax,0x20
    869f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86a3:	eb df                	jmp    8684 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x14>
	}
    86a5:	48 83 c4 10          	add    rsp,0x10
    86a9:	5d                   	pop    rbp
    86aa:	c3                   	ret
    86ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000086b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    {
    86b0:	f3 0f 1e fa          	endbr64
    86b4:	55                   	push   rbp
    86b5:	48 89 e5             	mov    rbp,rsp
    86b8:	48 83 ec 10          	sub    rsp,0x10
    86bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      std::destroy_at(__pointer);
    86c0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    86c4:	e8 57 f8 ff ff       	call   7f20 <_ZSt10destroy_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
    }
    86c9:	48 83 c4 10          	add    rsp,0x10
    86cd:	5d                   	pop    rbp
    86ce:	c3                   	ret
    86cf:	90                   	nop

00000000000086d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>:
      {
    86d0:	f3 0f 1e fa          	endbr64
    86d4:	55                   	push   rbp
    86d5:	48 89 e5             	mov    rbp,rsp
    86d8:	48 83 ec 50          	sub    rsp,0x50
    86dc:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    86e0:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    86e4:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    86e8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    86ec:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
	if (__p)
    86f0:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    86f5:	74 41                	je     8738 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m+0x68>
    86f7:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
	  _Tr::deallocate(_M_impl, __p, __n);
    86fb:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    86ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8703:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    8707:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    870b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    870f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8713:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    8717:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    871b:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    871f:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8723:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8727:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    872b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    872f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8733:	e8 08 f8 ff ff       	call   7f40 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
      }
    8738:	48 83 c4 50          	add    rsp,0x50
    873c:	5d                   	pop    rbp
    873d:	c3                   	ret
    873e:	66 90                	xchg   ax,ax

0000000000008740 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev>:
      struct _Vector_impl
    8740:	f3 0f 1e fa          	endbr64
    8744:	55                   	push   rbp
    8745:	48 89 e5             	mov    rbp,rsp
    8748:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    874c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8750:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8754:	5d                   	pop    rbp
    8755:	c3                   	ret
    8756:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    875d:	00 00 00 

0000000000008760 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_>:
    {
    8760:	f3 0f 1e fa          	endbr64
    8764:	55                   	push   rbp
    8765:	48 89 e5             	mov    rbp,rsp
    8768:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    876f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8776:	00 00 
    8778:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    877c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    8780:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    8784:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    8788:	48 89 bd 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdi
      const size_type __len = _M_check_len(1u, "vector::_M_realloc_append");
    878f:	be 01 00 00 00       	mov    esi,0x1
    8794:	48 8d 15 d9 89 00 00 	lea    rdx,[rip+0x89d9]        # 11174 <_IO_stdin_used+0x174>
    879b:	e8 f0 ee ff ff       	call   7690 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc>
    87a0:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      if (__len <= 0)
    87a4:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    87a9:	77 00                	ja     87ab <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x4b>
    87ab:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
      pointer __old_start = this->_M_impl._M_start;
    87b2:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    87b5:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      pointer __old_finish = this->_M_impl._M_finish;
    87b9:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    87bd:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
      const size_type __elems = end() - begin();
    87c1:	e8 4a f0 ff ff       	call   7810 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    87c6:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    87cd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    87d1:	e8 9a f0 ff ff       	call   7870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    87d6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    87da:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    87de:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    87e2:	e8 d9 ef ff ff       	call   77c0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_>
    87e7:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    87ee:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      pointer __new_start(this->_M_allocate(__len));
    87f2:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
    87f6:	e8 d5 f0 ff ff       	call   78d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    87fb:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    8802:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      pointer __new_finish(__new_start);
    8806:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    880a:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
	_Guard __guard(__new_start, __len, _M_impl);
    8811:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    8815:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    8819:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    881d:	e8 9e 01 00 00       	call   89c0 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>
				 std::__to_address(__new_start + __elems),
    8822:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    8826:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    882a:	48 c1 e0 05          	shl    rax,0x5
    882e:	48 01 c7             	add    rdi,rax
    8831:	e8 4a f1 ff ff       	call   7980 <_ZSt12__to_addressINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_S7_>
    8836:	48 8b 95 60 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa0]
    883d:	48 89 c1             	mov    rcx,rax
				 std::forward<_Args>(__args)...);
    8840:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8844:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    8848:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    884c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    8850:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8854:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    8858:	e8 33 01 00 00       	call   8990 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>
    885d:	eb 00                	jmp    885f <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0xff>
	}
    885f:	eb 00                	jmp    8861 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x101>
    8861:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
	    __new_finish = _S_relocate(__old_start, __old_finish,
    8868:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    886c:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8873:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    8877:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
				       __new_start, _M_get_Tp_allocator());
    887e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    8882:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    8889:	e8 52 f1 ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    888e:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    8895:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
    889c:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    88a3:	48 89 c1             	mov    rcx,rax
	    __new_finish = _S_relocate(__old_start, __old_finish,
    88a6:	e8 f5 f0 ff ff       	call   79a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_>
    88ab:	48 89 c1             	mov    rcx,rax
    88ae:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    88b5:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	    ++__new_finish;
    88bc:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    88c3:	48 83 c1 20          	add    rcx,0x20
    88c7:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
	__guard._M_storage = __old_start;
    88ce:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    88d2:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
	__guard._M_len = this->_M_impl._M_end_of_storage - __old_start;
    88d6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88da:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    88de:	48 29 c8             	sub    rax,rcx
    88e1:	48 c1 f8 05          	sar    rax,0x5
    88e5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    88e9:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
      }
    88ed:	e8 0e 01 00 00       	call   8a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>
    88f2:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
      this->_M_impl._M_start = __new_start;
    88f9:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    88fd:	48 89 08             	mov    QWORD PTR [rax],rcx
      this->_M_impl._M_finish = __new_finish;
    8900:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    8907:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      this->_M_impl._M_end_of_storage = __new_start + __len;
    890b:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    890f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    8913:	48 c1 e2 05          	shl    rdx,0x5
    8917:	48 01 d1             	add    rcx,rdx
    891a:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    }
    891e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8925:	00 00 
    8927:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    892b:	48 39 c8             	cmp    rax,rcx
    892e:	75 54                	jne    8984 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x224>
    8930:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    8937:	5d                   	pop    rbp
    8938:	c3                   	ret
    8939:	f3 0f 1e fa          	endbr64
    893d:	48 89 c1             	mov    rcx,rax
    8940:	89 d0                	mov    eax,edx
    8942:	48 89 8d 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rcx
    8949:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
      }
    894f:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
    8953:	e8 a8 00 00 00       	call   8a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>
    8958:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    895f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8966:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    896d:	00 00 
    896f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8973:	48 39 c8             	cmp    rax,rcx
    8976:	75 0c                	jne    8984 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_+0x224>
    8978:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    897f:	e8 dc ba ff ff       	call   4460 <_Unwind_Resume@plt>
    8984:	e8 27 bc ff ff       	call   45b0 <__stack_chk_fail@plt>
    8989:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008990 <_ZSt12construct_atINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPS9_DpOSA_>:
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    8990:	f3 0f 1e fa          	endbr64
    8994:	55                   	push   rbp
    8995:	48 89 e5             	mov    rbp,rsp
    8998:	48 83 ec 20          	sub    rsp,0x20
    899c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    89a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    89a4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    89a8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    89ac:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    89b0:	e8 3b d5 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    89b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89b9:	48 83 c4 20          	add    rsp,0x20
    89bd:	5d                   	pop    rbp
    89be:	c3                   	ret
    89bf:	90                   	nop

00000000000089c0 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardC2EPS5_mRS6_>:
	{ }
    89c0:	f3 0f 1e fa          	endbr64
    89c4:	55                   	push   rbp
    89c5:	48 89 e5             	mov    rbp,rsp
    89c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    89cc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    89d0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    89d4:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    89d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_storage(__s), _M_len(__l), _M_alloc(__a)
    89dc:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    89e0:	48 89 08             	mov    QWORD PTR [rax],rcx
    89e3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    89e7:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    89eb:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    89ef:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	{ }
    89f3:	5d                   	pop    rbp
    89f4:	c3                   	ret
    89f5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    89fc:	00 00 00 
    89ff:	90                   	nop

0000000000008a00 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev>:
	{
    8a00:	f3 0f 1e fa          	endbr64
    8a04:	55                   	push   rbp
    8a05:	48 89 e5             	mov    rbp,rsp
    8a08:	48 83 ec 40          	sub    rsp,0x40
    8a0c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    8a10:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8a14:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (_M_storage)
    8a18:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    8a1c:	74 48                	je     8a66 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
    8a1e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
	      deallocate(_M_alloc, _M_storage, _M_len);
    8a22:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8a26:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    8a29:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a2d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    8a31:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    8a35:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { __a.deallocate(__p, __n); }
    8a39:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8a3d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    8a41:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8a45:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    8a49:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8a4d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8a51:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8a55:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8a59:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8a5d:	e8 de f4 ff ff       	call   7f40 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    8a62:	eb 00                	jmp    8a64 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x64>
	    __gnu_cxx::__alloc_traits<_Tp_alloc_type>::
    8a64:	eb 00                	jmp    8a66 <_ZZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_EN6_GuardD2Ev+0x66>
	}
    8a66:	48 83 c4 40          	add    rsp,0x40
    8a6a:	5d                   	pop    rbp
    8a6b:	c3                   	ret
    8a6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008a70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>:
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      _GLIBCXX20_CONSTEXPR
      void
      _M_move_assign(vector&& __x, true_type) noexcept
      {
    8a70:	f3 0f 1e fa          	endbr64
    8a74:	55                   	push   rbp
    8a75:	48 89 e5             	mov    rbp,rsp
    8a78:	48 83 ec 70          	sub    rsp,0x70
    8a7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8a83:	00 00 
    8a85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a89:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    8a8d:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    8a91:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    8a95:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
	vector __tmp(get_allocator());
    8a99:	48 8d 7d df          	lea    rdi,[rbp-0x21]
    8a9d:	e8 7e 00 00 00       	call   8b20 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>
    8aa2:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8aa6:	48 8d 75 df          	lea    rsi,[rbp-0x21]
    8aaa:	e8 d1 00 00 00       	call   8b80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>
    8aaf:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    8ab3:	48 8d 45 df          	lea    rax,[rbp-0x21]
    8ab7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	this->_M_impl._M_swap_data(__x._M_impl);
    8abb:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    8abf:	e8 ec 00 00 00       	call   8bb0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
    8ac4:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8ac8:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    8acc:	e8 df 00 00 00       	call   8bb0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
    8ad1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
    8ad5:	e8 06 ef ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8ada:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    8ade:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    8ae2:	e8 f9 ee ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8ae7:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    8aeb:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    8aef:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8af3:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
      }
    8af7:	e8 e4 da ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    8afc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8b03:	00 00 
    8b05:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8b09:	48 39 c8             	cmp    rax,rcx
    8b0c:	75 06                	jne    8b14 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE+0xa4>
    8b0e:	48 83 c4 70          	add    rsp,0x70
    8b12:	5d                   	pop    rbp
    8b13:	c3                   	ret
    8b14:	e8 97 ba ff ff       	call   45b0 <__stack_chk_fail@plt>
    8b19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008b20 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>:
      { return allocator_type(_M_get_Tp_allocator()); }
    8b20:	f3 0f 1e fa          	endbr64
    8b24:	55                   	push   rbp
    8b25:	48 89 e5             	mov    rbp,rsp
    8b28:	48 83 ec 40          	sub    rsp,0x40
    8b2c:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    8b30:	48 89 f8             	mov    rax,rdi
    8b33:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8b37:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8b3b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8b3f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8b43:	e8 28 f0 ff ff       	call   7b70 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    8b48:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8b4c:	48 89 c1             	mov    rcx,rax
    8b4f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8b53:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8b57:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8b5b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      : __allocator_base<_Tp>(__a) { }
    8b5f:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8b63:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    8b67:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    8b6b:	48 83 c4 40          	add    rsp,0x40
    8b6f:	5d                   	pop    rbp
    8b70:	c3                   	ret
    8b71:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8b78:	00 00 00 
    8b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008b80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>:
      : _Base(__a) { }
    8b80:	f3 0f 1e fa          	endbr64
    8b84:	55                   	push   rbp
    8b85:	48 89 e5             	mov    rbp,rsp
    8b88:	48 83 ec 10          	sub    rsp,0x10
    8b8c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8b90:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8b94:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8b98:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8b9c:	e8 8f 00 00 00       	call   8c30 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>
    8ba1:	48 83 c4 10          	add    rsp,0x10
    8ba5:	5d                   	pop    rbp
    8ba6:	c3                   	ret
    8ba7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8bae:	00 00 

0000000000008bb0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>:
	{
    8bb0:	f3 0f 1e fa          	endbr64
    8bb4:	55                   	push   rbp
    8bb5:	48 89 e5             	mov    rbp,rsp
    8bb8:	48 83 ec 40          	sub    rsp,0x40
    8bbc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8bc3:	00 00 
    8bc5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8bc9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8bcd:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8bd1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bd5:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8bd9:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    8bdd:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
	  _Vector_impl_data __tmp;
    8be1:	e8 ba 00 00 00       	call   8ca0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
    8be6:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    8bea:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	  __tmp._M_copy_data(*this);
    8bee:	e8 dd 00 00 00       	call   8cd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
    8bf3:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  _M_copy_data(__x);
    8bf7:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    8bfb:	e8 d0 00 00 00       	call   8cd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
    8c00:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
	  __x._M_copy_data(__tmp);
    8c04:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8c08:	e8 c3 00 00 00       	call   8cd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	}
    8c0d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8c14:	00 00 
    8c16:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8c1a:	48 39 c8             	cmp    rax,rcx
    8c1d:	75 06                	jne    8c25 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_+0x75>
    8c1f:	48 83 c4 40          	add    rsp,0x40
    8c23:	5d                   	pop    rbp
    8c24:	c3                   	ret
    8c25:	e8 86 b9 ff ff       	call   45b0 <__stack_chk_fail@plt>
    8c2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008c30 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_>:
      : _M_impl(__a) { }
    8c30:	f3 0f 1e fa          	endbr64
    8c34:	55                   	push   rbp
    8c35:	48 89 e5             	mov    rbp,rsp
    8c38:	48 83 ec 10          	sub    rsp,0x10
    8c3c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8c40:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8c44:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8c48:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8c4c:	e8 0f 00 00 00       	call   8c60 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_>
    8c51:	48 83 c4 10          	add    rsp,0x10
    8c55:	5d                   	pop    rbp
    8c56:	c3                   	ret
    8c57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8c5e:	00 00 

0000000000008c60 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_>:
	{ }
    8c60:	f3 0f 1e fa          	endbr64
    8c64:	55                   	push   rbp
    8c65:	48 89 e5             	mov    rbp,rsp
    8c68:	48 83 ec 30          	sub    rsp,0x30
    8c6c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8c70:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8c74:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	: _Tp_alloc_type(__a)
    8c78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8c7c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c80:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8c84:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8c88:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8c8c:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    8c90:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8c94:	e8 07 00 00 00       	call   8ca0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>
	{ }
    8c99:	48 83 c4 30          	add    rsp,0x30
    8c9d:	5d                   	pop    rbp
    8c9e:	c3                   	ret
    8c9f:	90                   	nop

0000000000008ca0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev>:
	{ }
    8ca0:	f3 0f 1e fa          	endbr64
    8ca4:	55                   	push   rbp
    8ca5:	48 89 e5             	mov    rbp,rsp
    8ca8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8cac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: _M_start(), _M_finish(), _M_end_of_storage()
    8cb0:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    8cb7:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    8cbe:	00 
    8cbf:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    8cc6:	00 
	{ }
    8cc7:	5d                   	pop    rbp
    8cc8:	c3                   	ret
    8cc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008cd0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>:
	{
    8cd0:	f3 0f 1e fa          	endbr64
    8cd4:	55                   	push   rbp
    8cd5:	48 89 e5             	mov    rbp,rsp
    8cd8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8cdc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8ce0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	  _M_start = __x._M_start;
    8ce4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8ce8:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    8ceb:	48 89 08             	mov    QWORD PTR [rax],rcx
	  _M_finish = __x._M_finish;
    8cee:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8cf2:	48 8b 49 08          	mov    rcx,QWORD PTR [rcx+0x8]
    8cf6:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  _M_end_of_storage = __x._M_end_of_storage;
    8cfa:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8cfe:	48 8b 49 10          	mov    rcx,QWORD PTR [rcx+0x10]
    8d02:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	}
    8d06:	5d                   	pop    rbp
    8d07:	c3                   	ret
    8d08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    8d0f:	00 

0000000000008d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>:
      {
    8d10:	f3 0f 1e fa          	endbr64
    8d14:	55                   	push   rbp
    8d15:	48 89 e5             	mov    rbp,rsp
    8d18:	48 83 ec 20          	sub    rsp,0x20
    8d1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8d20:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d28:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	__glibcxx_assert(__pos <= size());
    8d2c:	eb 00                	jmp    8d2e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm+0x1e>
    8d2e:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return _M_data()[__pos];
    8d32:	e8 69 db ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8d37:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    8d3b:	48 83 c4 20          	add    rsp,0x20
    8d3f:	5d                   	pop    rbp
    8d40:	c3                   	ret
    8d41:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8d48:	00 00 00 
    8d4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008d50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
      { return this->append(__str._M_data(), __str.size()); }
    8d50:	f3 0f 1e fa          	endbr64
    8d54:	55                   	push   rbp
    8d55:	48 89 e5             	mov    rbp,rsp
    8d58:	48 83 ec 20          	sub    rsp,0x20
    8d5c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8d60:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d64:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d68:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    8d6c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8d70:	e8 2b db ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8d75:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8d79:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8d7d:	e8 8e e5 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8d82:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    8d86:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    8d8a:	48 89 c2             	mov    rdx,rax
    8d8d:	e8 0e 00 00 00       	call   8da0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    8d92:	48 83 c4 20          	add    rsp,0x20
    8d96:	5d                   	pop    rbp
    8d97:	c3                   	ret
    8d98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    8d9f:	00 

0000000000008da0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>:
      {
    8da0:	f3 0f 1e fa          	endbr64
    8da4:	55                   	push   rbp
    8da5:	48 89 e5             	mov    rbp,rsp
    8da8:	48 83 ec 20          	sub    rsp,0x20
    8dac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8db0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8db4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8db8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8dbc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	_M_check_length(size_type(0), __n, "basic_string::append");
    8dc0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8dc4:	31 c0                	xor    eax,eax
    8dc6:	89 c6                	mov    esi,eax
    8dc8:	48 8d 0d d8 83 00 00 	lea    rcx,[rip+0x83d8]        # 111a7 <_IO_stdin_used+0x1a7>
    8dcf:	e8 dc f3 ff ff       	call   81b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    8dd4:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return _M_append(__s, __n);
    8dd8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8ddc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8de0:	e8 0b 00 00 00       	call   8df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8de5:	48 83 c4 20          	add    rsp,0x20
    8de9:	5d                   	pop    rbp
    8dea:	c3                   	ret
    8deb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    {
    8df0:	f3 0f 1e fa          	endbr64
    8df4:	55                   	push   rbp
    8df5:	48 89 e5             	mov    rbp,rsp
    8df8:	48 83 ec 40          	sub    rsp,0x40
    8dfc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8e00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8e04:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8e08:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8e0c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      const size_type __len = __n + this->size();
    8e10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e14:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    8e18:	e8 f3 e4 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8e1d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8e21:	48 89 c1             	mov    rcx,rax
    8e24:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8e28:	48 01 c8             	add    rax,rcx
    8e2b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__len <= this->capacity())
    8e2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8e33:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    8e37:	e8 d4 f3 ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8e3c:	48 89 c1             	mov    rcx,rax
    8e3f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e43:	48 39 c8             	cmp    rax,rcx
    8e46:	77 33                	ja     8e7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x8b>
	  if (__n)
    8e48:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    8e4d:	74 2a                	je     8e79 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x89>
    8e4f:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    8e53:	e8 48 da ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8e58:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8e5c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8e60:	e8 ab e4 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8e65:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8e69:	48 01 c7             	add    rdi,rax
    8e6c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8e70:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    8e74:	e8 c7 df ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	}
    8e79:	eb 21                	jmp    8e9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
    8e7b:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    8e7f:	e8 8c e4 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    8e84:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    8e88:	48 89 c6             	mov    rsi,rax
    8e8b:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    8e8f:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    8e93:	31 c0                	xor    eax,eax
    8e95:	89 c2                	mov    edx,eax
    8e97:	e8 d4 f4 ff ff       	call   8370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    8e9c:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      this->_M_set_length(__len);
    8ea0:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    8ea4:	e8 c7 dd ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    8ea9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
      return *this;
    8ead:	48 83 c4 40          	add    rsp,0x40
    8eb1:	5d                   	pop    rbp
    8eb2:	c3                   	ret
    8eb3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8eba:	00 00 00 
    8ebd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000008ec0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
      { return _M_data(); }
    8ec0:	f3 0f 1e fa          	endbr64
    8ec4:	55                   	push   rbp
    8ec5:	48 89 e5             	mov    rbp,rsp
    8ec8:	48 83 ec 10          	sub    rsp,0x10
    8ecc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8ed0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    8ed4:	e8 c7 d9 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8ed9:	48 83 c4 10          	add    rsp,0x10
    8edd:	5d                   	pop    rbp
    8ede:	c3                   	ret
    8edf:	90                   	nop

0000000000008ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>:
    {
    8ee0:	f3 0f 1e fa          	endbr64
    8ee4:	55                   	push   rbp
    8ee5:	48 89 e5             	mov    rbp,rsp
    8ee8:	48 83 ec 40          	sub    rsp,0x40
    8eec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8ef3:	00 00 
    8ef5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ef9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8efd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8f01:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    8f05:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
      const size_type __capacity = capacity();
    8f09:	e8 02 f3 ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    8f0e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__res <= __capacity)
    8f12:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f16:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    8f1a:	77 02                	ja     8f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0x3e>
	return;
    8f1c:	eb 6a                	jmp    8f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0xa8>
    8f1e:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      pointer __tmp = _M_create(__res, __capacity);
    8f22:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8f26:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    8f2a:	e8 f1 db ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    8f2f:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8f33:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      this->_S_copy(__tmp, _M_data(), length() + 1);
    8f37:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f3b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    8f3f:	e8 5c d9 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    8f44:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    8f48:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8f4c:	e8 0f d1 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    8f51:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    8f55:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    8f59:	48 89 c2             	mov    rdx,rax
    8f5c:	48 83 c2 01          	add    rdx,0x1
    8f60:	e8 db de ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    8f65:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_dispose();
    8f69:	e8 b2 df ff ff       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    8f6e:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_data(__tmp);
    8f72:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    8f76:	e8 85 db ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    8f7b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
      _M_capacity(__res);
    8f7f:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    8f83:	e8 68 dc ff ff       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    8f88:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f8f:	00 00 
    8f91:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8f95:	48 39 c8             	cmp    rax,rcx
    8f98:	75 06                	jne    8fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm+0xc0>
    8f9a:	48 83 c4 40          	add    rsp,0x40
    8f9e:	5d                   	pop    rbp
    8f9f:	c3                   	ret
    8fa0:	e8 0b b6 ff ff       	call   45b0 <__stack_chk_fail@plt>
    8fa5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8fac:	00 00 00 
    8faf:	90                   	nop

0000000000008fb0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      {
    8fb0:	f3 0f 1e fa          	endbr64
    8fb4:	55                   	push   rbp
    8fb5:	48 89 e5             	mov    rbp,rsp
    8fb8:	48 83 ec 20          	sub    rsp,0x20
    8fbc:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    8fc0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    8fc4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
	if (__n == 0)
    8fc8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    8fcd:	75 09                	jne    8fd8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x28>
	  return 0;
    8fcf:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8fd6:	eb 14                	jmp    8fec <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x3c>
	return __builtin_memcmp(__s1, __s2, __n);
    8fd8:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    8fdc:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    8fe0:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    8fe4:	e8 d7 b4 ff ff       	call   44c0 <memcmp@plt>
    8fe9:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
      }
    8fec:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8fef:	48 83 c4 20          	add    rsp,0x20
    8ff3:	5d                   	pop    rbp
    8ff4:	c3                   	ret
    8ff5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8ffc:	00 00 00 
    8fff:	90                   	nop

0000000000009000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
      { return _M_data(); }
    9000:	f3 0f 1e fa          	endbr64
    9004:	55                   	push   rbp
    9005:	48 89 e5             	mov    rbp,rsp
    9008:	48 83 ec 10          	sub    rsp,0x10
    900c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9010:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9014:	e8 87 d8 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9019:	48 83 c4 10          	add    rsp,0x10
    901d:	5d                   	pop    rbp
    901e:	c3                   	ret
    901f:	90                   	nop

0000000000009020 <_ZN10TerminalIOC1Ev>:
    bool special;
    char value;
};

TerminalIO::TerminalIO()
{
    9020:	f3 0f 1e fa          	endbr64
    9024:	55                   	push   rbp
    9025:	48 89 e5             	mov    rbp,rsp
    9028:	48 83 ec 10          	sub    rsp,0x10
    902c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9030:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    9034:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    if(tcgetattr(STDIN_FILENO, &original_state) == -1)
    9038:	31 ff                	xor    edi,edi
    903a:	e8 81 b5 ff ff       	call   45c0 <tcgetattr@plt>
    903f:	83 f8 ff             	cmp    eax,0xffffffff
    9042:	75 22                	jne    9066 <_ZN10TerminalIOC1Ev+0x46>
    {
        fprintf(stderr, "Unable to get terminal attributes\r\n");
    9044:	48 8b 05 85 df 00 00 	mov    rax,QWORD PTR [rip+0xdf85]        # 16fd0 <stderr@GLIBC_2.2.5>
    904b:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    904e:	48 8d 35 9b 81 00 00 	lea    rsi,[rip+0x819b]        # 111f0 <_IO_stdin_used+0x1f0>
    9055:	b0 00                	mov    al,0x0
    9057:	e8 54 b6 ff ff       	call   46b0 <fprintf@plt>
        exit(1);
    905c:	bf 01 00 00 00       	mov    edi,0x1
    9061:	e8 aa b5 ff ff       	call   4610 <exit@plt>
    9066:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    }
    enable_raw_mode();
    906a:	e8 11 00 00 00       	call   9080 <_ZN10TerminalIO15enable_raw_modeEv>
}
    906f:	48 83 c4 10          	add    rsp,0x10
    9073:	5d                   	pop    rbp
    9074:	c3                   	ret
    9075:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    907c:	00 00 00 00 

0000000000009080 <_ZN10TerminalIO15enable_raw_modeEv>:
}

// https://viewsourcecode.org/snaptoken/kilo/ for entering raw mode
// and handling user input in raw mode
void TerminalIO::enable_raw_mode()
{
    9080:	f3 0f 1e fa          	endbr64
    9084:	55                   	push   rbp
    9085:	48 89 e5             	mov    rbp,rsp
    9088:	48 83 ec 50          	sub    rsp,0x50
    908c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9093:	00 00 
    9095:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9099:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    struct termios raw;
    raw.c_lflag &= ~(ECHO | ICANON | IEXTEN | ISIG);
    909d:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    90a0:	25 f4 7f ff ff       	and    eax,0xffff7ff4
    90a5:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    raw.c_iflag &= ~(ICRNL | IXON | BRKINT | INPCK | ISTRIP);
    90a8:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
    90ab:	25 cd fa ff ff       	and    eax,0xfffffacd
    90b0:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    raw.c_oflag &= ~(OPOST);
    90b3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    90b6:	83 e0 fe             	and    eax,0xfffffffe
    90b9:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    raw.c_cflag |= (CS8);
    90bc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    90bf:	83 c8 30             	or     eax,0x30
    90c2:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw) == -1)
    90c5:	31 ff                	xor    edi,edi
    90c7:	be 02 00 00 00       	mov    esi,0x2
    90cc:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    90d0:	e8 6b b5 ff ff       	call   4640 <tcsetattr@plt>
    90d5:	83 f8 ff             	cmp    eax,0xffffffff
    90d8:	75 22                	jne    90fc <_ZN10TerminalIO15enable_raw_modeEv+0x7c>
    {
        std::fprintf(stderr, "Unable to enter raw mode\r\n");
    90da:	48 8b 05 ef de 00 00 	mov    rax,QWORD PTR [rip+0xdeef]        # 16fd0 <stderr@GLIBC_2.2.5>
    90e1:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    90e4:	48 8d 35 55 81 00 00 	lea    rsi,[rip+0x8155]        # 11240 <_IO_stdin_used+0x240>
    90eb:	b0 00                	mov    al,0x0
    90ed:	e8 be b5 ff ff       	call   46b0 <fprintf@plt>
        exit(1);
    90f2:	bf 01 00 00 00       	mov    edi,0x1
    90f7:	e8 14 b5 ff ff       	call   4610 <exit@plt>
    }
}
    90fc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9103:	00 00 
    9105:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9109:	48 39 c8             	cmp    rax,rcx
    910c:	75 06                	jne    9114 <_ZN10TerminalIO15enable_raw_modeEv+0x94>
    910e:	48 83 c4 50          	add    rsp,0x50
    9112:	5d                   	pop    rbp
    9113:	c3                   	ret
    9114:	e8 97 b4 ff ff       	call   45b0 <__stack_chk_fail@plt>
    9119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000009120 <_ZN10TerminalIOD1Ev>:
{
    9120:	f3 0f 1e fa          	endbr64
    9124:	55                   	push   rbp
    9125:	48 89 e5             	mov    rbp,rsp
    9128:	48 83 ec 10          	sub    rsp,0x10
    912c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9130:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
   disable_raw_mode(); 
    9134:	e8 17 00 00 00       	call   9150 <_ZN10TerminalIO16disable_raw_modeEv>
    9139:	eb 00                	jmp    913b <_ZN10TerminalIOD1Ev+0x1b>
}
    913b:	48 83 c4 10          	add    rsp,0x10
    913f:	5d                   	pop    rbp
    9140:	c3                   	ret
    9141:	f3 0f 1e fa          	endbr64
    9145:	48 89 c7             	mov    rdi,rax
   disable_raw_mode(); 
    9148:	e8 73 d7 ff ff       	call   68c0 <__clang_call_terminate>
    914d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009150 <_ZN10TerminalIO16disable_raw_modeEv>:
{
    9150:	f3 0f 1e fa          	endbr64
    9154:	55                   	push   rbp
    9155:	48 89 e5             	mov    rbp,rsp
    9158:	48 83 ec 10          	sub    rsp,0x10
    915c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9160:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &original_state) == -1)
    9164:	31 ff                	xor    edi,edi
    9166:	be 02 00 00 00       	mov    esi,0x2
    916b:	e8 d0 b4 ff ff       	call   4640 <tcsetattr@plt>
    9170:	83 f8 ff             	cmp    eax,0xffffffff
    9173:	75 22                	jne    9197 <_ZN10TerminalIO16disable_raw_modeEv+0x47>
        std::fprintf(stderr, "Unable to leave raw mode\r\n");
    9175:	48 8b 05 54 de 00 00 	mov    rax,QWORD PTR [rip+0xde54]        # 16fd0 <stderr@GLIBC_2.2.5>
    917c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    917f:	48 8d 35 9f 80 00 00 	lea    rsi,[rip+0x809f]        # 11225 <_IO_stdin_used+0x225>
    9186:	b0 00                	mov    al,0x0
    9188:	e8 23 b5 ff ff       	call   46b0 <fprintf@plt>
        exit(1); 
    918d:	bf 01 00 00 00       	mov    edi,0x1
    9192:	e8 79 b4 ff ff       	call   4610 <exit@plt>
}
    9197:	48 83 c4 10          	add    rsp,0x10
    919b:	5d                   	pop    rbp
    919c:	c3                   	ret
    919d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000091a0 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour>:
{
    91a0:	f3 0f 1e fa          	endbr64
    91a4:	55                   	push   rbp
    91a5:	48 89 e5             	mov    rbp,rsp
    91a8:	48 83 ec 20          	sub    rsp,0x20
    91ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    91b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    91b4:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    std::fputs("\27[", stream);
    91b7:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    91bb:	48 8d 3d 52 80 00 00 	lea    rdi,[rip+0x8052]        # 11214 <_IO_stdin_used+0x214>
    91c2:	e8 09 b4 ff ff       	call   45d0 <fputs@plt>
    int colour_val = static_cast<int>(colour);
    91c7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91ca:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    if(colour_val >= 8)
    91cd:	83 7d e8 08          	cmp    DWORD PTR [rbp-0x18],0x8
    91d1:	7c 1a                	jl     91ed <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour+0x4d>
        std::fprintf(stream, "%d;1m", colour_val + 22);
    91d3:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    91d7:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    91da:	83 c2 16             	add    edx,0x16
    91dd:	48 8d 35 33 80 00 00 	lea    rsi,[rip+0x8033]        # 11217 <_IO_stdin_used+0x217>
    91e4:	b0 00                	mov    al,0x0
    91e6:	e8 c5 b4 ff ff       	call   46b0 <fprintf@plt>
    }
    91eb:	eb 18                	jmp    9205 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour+0x65>
        std::fprintf(stream, "%dm", colour_val + 30);
    91ed:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    91f1:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    91f4:	83 c2 1e             	add    edx,0x1e
    91f7:	48 8d 35 1f 80 00 00 	lea    rsi,[rip+0x801f]        # 1121d <_IO_stdin_used+0x21d>
    91fe:	b0 00                	mov    al,0x0
    9200:	e8 ab b4 ff ff       	call   46b0 <fprintf@plt>
    std::fflush(stdout);
    9205:	48 8b 05 8c dd 00 00 	mov    rax,QWORD PTR [rip+0xdd8c]        # 16f98 <stdout@GLIBC_2.2.5>
    920c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    920f:	e8 cc b3 ff ff       	call   45e0 <fflush@plt>
}
    9214:	48 83 c4 20          	add    rsp,0x20
    9218:	5d                   	pop    rbp
    9219:	c3                   	ret
    921a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009220 <_ZN10TerminalIO17reset_text_colourEP8_IO_FILE>:
{
    9220:	f3 0f 1e fa          	endbr64
    9224:	55                   	push   rbp
    9225:	48 89 e5             	mov    rbp,rsp
    9228:	48 83 ec 10          	sub    rsp,0x10
    922c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9230:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    std::fputs("[0m", stream);
    9234:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9238:	48 8d 3d e2 7f 00 00 	lea    rdi,[rip+0x7fe2]        # 11221 <_IO_stdin_used+0x221>
    923f:	e8 8c b3 ff ff       	call   45d0 <fputs@plt>
}
    9244:	48 83 c4 10          	add    rsp,0x10
    9248:	5d                   	pop    rbp
    9249:	c3                   	ret
    924a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009250 <_ZN10TerminalIO5printEPKcz>:
{
    9250:	f3 0f 1e fa          	endbr64
    9254:	55                   	push   rbp
    9255:	48 89 e5             	mov    rbp,rsp
    9258:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    925f:	84 c0                	test   al,al
    9261:	74 29                	je     928c <_ZN10TerminalIO5printEPKcz+0x3c>
    9263:	0f 29 85 50 ff ff ff 	movaps XMMWORD PTR [rbp-0xb0],xmm0
    926a:	0f 29 8d 60 ff ff ff 	movaps XMMWORD PTR [rbp-0xa0],xmm1
    9271:	0f 29 95 70 ff ff ff 	movaps XMMWORD PTR [rbp-0x90],xmm2
    9278:	0f 29 5d 80          	movaps XMMWORD PTR [rbp-0x80],xmm3
    927c:	0f 29 65 90          	movaps XMMWORD PTR [rbp-0x70],xmm4
    9280:	0f 29 6d a0          	movaps XMMWORD PTR [rbp-0x60],xmm5
    9284:	0f 29 75 b0          	movaps XMMWORD PTR [rbp-0x50],xmm6
    9288:	0f 29 7d c0          	movaps XMMWORD PTR [rbp-0x40],xmm7
    928c:	4c 89 8d 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],r9
    9293:	4c 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],r8
    929a:	48 89 8d 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rcx
    92a1:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    92a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    92af:	00 00 
    92b1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    92b5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    92b9:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    92bd:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    va_start(args, format);
    92c4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    92c8:	48 8d 45 10          	lea    rax,[rbp+0x10]
    92cc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    92d0:	c7 45 e4 30 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x30
    92d7:	c7 45 e0 10 00 00 00 	mov    DWORD PTR [rbp-0x20],0x10
    std::vfprintf(stdout, format, args);
    92de:	48 8b 05 b3 dc 00 00 	mov    rax,QWORD PTR [rip+0xdcb3]        # 16f98 <stdout@GLIBC_2.2.5>
    92e5:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    92ec:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    92ef:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    92f3:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    92f7:	e8 74 b3 ff ff       	call   4670 <vfprintf@plt>
    92fc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    std::fflush(stdout);
    9303:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    9306:	e8 d5 b2 ff ff       	call   45e0 <fflush@plt>
}
    930b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9312:	00 00 
    9314:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9318:	48 39 c8             	cmp    rax,rcx
    931b:	75 09                	jne    9326 <_ZN10TerminalIO5printEPKcz+0xd6>
    931d:	48 81 c4 f0 00 00 00 	add    rsp,0xf0
    9324:	5d                   	pop    rbp
    9325:	c3                   	ret
    9326:	e8 85 b2 ff ff       	call   45b0 <__stack_chk_fail@plt>
    932b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009330 <_ZN10TerminalIO11print_errorEPKcz>:
{
    9330:	f3 0f 1e fa          	endbr64
    9334:	55                   	push   rbp
    9335:	48 89 e5             	mov    rbp,rsp
    9338:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    933f:	84 c0                	test   al,al
    9341:	74 29                	je     936c <_ZN10TerminalIO11print_errorEPKcz+0x3c>
    9343:	0f 29 85 50 ff ff ff 	movaps XMMWORD PTR [rbp-0xb0],xmm0
    934a:	0f 29 8d 60 ff ff ff 	movaps XMMWORD PTR [rbp-0xa0],xmm1
    9351:	0f 29 95 70 ff ff ff 	movaps XMMWORD PTR [rbp-0x90],xmm2
    9358:	0f 29 5d 80          	movaps XMMWORD PTR [rbp-0x80],xmm3
    935c:	0f 29 65 90          	movaps XMMWORD PTR [rbp-0x70],xmm4
    9360:	0f 29 6d a0          	movaps XMMWORD PTR [rbp-0x60],xmm5
    9364:	0f 29 75 b0          	movaps XMMWORD PTR [rbp-0x50],xmm6
    9368:	0f 29 7d c0          	movaps XMMWORD PTR [rbp-0x40],xmm7
    936c:	4c 89 8d 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],r9
    9373:	4c 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],r8
    937a:	48 89 8d 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rcx
    9381:	48 89 95 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rdx
    9388:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    938f:	00 00 
    9391:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9395:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9399:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    939d:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    set_text_colour(stderr, TerminalColour::LIGHT_RED);
    93a1:	48 8b 05 28 dc 00 00 	mov    rax,QWORD PTR [rip+0xdc28]        # 16fd0 <stderr@GLIBC_2.2.5>
    93a8:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    93af:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    93b2:	ba 09 00 00 00       	mov    edx,0x9
    93b7:	e8 e4 fd ff ff       	call   91a0 <_ZN10TerminalIO15set_text_colourEP8_IO_FILE14TerminalColour>
    93bc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    93c3:	48 8d 8d 20 ff ff ff 	lea    rcx,[rbp-0xe0]
    va_start(args, format);
    93ca:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    93ce:	48 8d 4d 10          	lea    rcx,[rbp+0x10]
    93d2:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    93d6:	c7 45 e4 30 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x30
    93dd:	c7 45 e0 10 00 00 00 	mov    DWORD PTR [rbp-0x20],0x10
    std::vfprintf(stderr, format, args);
    93e4:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    93e7:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    93eb:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    93ef:	e8 7c b2 ff ff       	call   4670 <vfprintf@plt>
    93f4:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    std::fflush(stderr);
    93fb:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    93fe:	e8 dd b1 ff ff       	call   45e0 <fflush@plt>
}
    9403:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    940a:	00 00 
    940c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9410:	48 39 c8             	cmp    rax,rcx
    9413:	75 09                	jne    941e <_ZN10TerminalIO11print_errorEPKcz+0xee>
    9415:	48 81 c4 f0 00 00 00 	add    rsp,0xf0
    941c:	5d                   	pop    rbp
    941d:	c3                   	ret
    941e:	e8 8d b1 ff ff       	call   45b0 <__stack_chk_fail@plt>
    9423:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    942a:	84 00 00 00 00 00 

0000000000009430 <_ZN10TerminalIO8read_keyEv>:


Key TerminalIO::read_key()
{
    9430:	f3 0f 1e fa          	endbr64
    9434:	55                   	push   rbp
    9435:	48 89 e5             	mov    rbp,rsp
    9438:	48 83 ec 30          	sub    rsp,0x30
    943c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9443:	00 00 
    9445:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9449:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    int num_read;
    char c = 0;
    944d:	c6 45 f4 00          	mov    BYTE PTR [rbp-0xc],0x0
    while((num_read = read(STDIN_FILENO, &c, 1)) != 1)
    9451:	31 ff                	xor    edi,edi
    9453:	48 8d 75 f4          	lea    rsi,[rbp-0xc]
    9457:	ba 01 00 00 00       	mov    edx,0x1
    945c:	e8 5f b2 ff ff       	call   46c0 <read@plt>
    9461:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    9464:	83 f8 01             	cmp    eax,0x1
    9467:	74 38                	je     94a1 <_ZN10TerminalIO8read_keyEv+0x71>
    {
        if(num_read == -1 && errno != EAGAIN)
    9469:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    946d:	75 2c                	jne    949b <_ZN10TerminalIO8read_keyEv+0x6b>
    946f:	e8 cc af ff ff       	call   4440 <__errno_location@plt>
    9474:	83 38 0b             	cmp    DWORD PTR [rax],0xb
    9477:	74 22                	je     949b <_ZN10TerminalIO8read_keyEv+0x6b>
        {
            std::fprintf(stderr, "Unable to read key input");
    9479:	48 8b 05 50 db 00 00 	mov    rax,QWORD PTR [rip+0xdb50]        # 16fd0 <stderr@GLIBC_2.2.5>
    9480:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    9483:	48 8d 35 d1 7d 00 00 	lea    rsi,[rip+0x7dd1]        # 1125b <_IO_stdin_used+0x25b>
    948a:	b0 00                	mov    al,0x0
    948c:	e8 1f b2 ff ff       	call   46b0 <fprintf@plt>
            exit(1);
    9491:	bf 01 00 00 00       	mov    edi,0x1
    9496:	e8 75 b1 ff ff       	call   4610 <exit@plt>
        }
        c = 0;
    949b:	c6 45 f4 00          	mov    BYTE PTR [rbp-0xc],0x0
    while((num_read = read(STDIN_FILENO, &c, 1)) != 1)
    949f:	eb b0                	jmp    9451 <_ZN10TerminalIO8read_keyEv+0x21>
    }
    if(c == '\x1b')
    94a1:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    94a5:	83 f8 1b             	cmp    eax,0x1b
    94a8:	0f 85 1b 01 00 00    	jne    95c9 <_ZN10TerminalIO8read_keyEv+0x199>
    {
        char seq[3];
        if(read(STDIN_FILENO, &seq[0], 1) != 1)
    94ae:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    94b2:	31 ff                	xor    edi,edi
    94b4:	ba 01 00 00 00       	mov    edx,0x1
    94b9:	e8 02 b2 ff ff       	call   46c0 <read@plt>
    94be:	48 83 f8 01          	cmp    rax,0x1
    94c2:	74 0d                	je     94d1 <_ZN10TerminalIO8read_keyEv+0xa1>
        {
            return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    94c4:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    94c8:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    94cc:	e9 64 01 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
        }
        if(read(STDIN_FILENO, &seq[1], 1) != 1)
    94d1:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    94d5:	48 83 c6 01          	add    rsi,0x1
    94d9:	31 ff                	xor    edi,edi
    94db:	ba 01 00 00 00       	mov    edx,0x1
    94e0:	e8 db b1 ff ff       	call   46c0 <read@plt>
    94e5:	48 83 f8 01          	cmp    rax,0x1
    94e9:	74 0d                	je     94f8 <_ZN10TerminalIO8read_keyEv+0xc8>
        {
            return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    94eb:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    94ef:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    94f3:	e9 3d 01 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
        }
        if(seq[0] == '[')
    94f8:	0f be 45 f5          	movsx  eax,BYTE PTR [rbp-0xb]
    94fc:	83 f8 5b             	cmp    eax,0x5b
    94ff:	0f 85 ba 00 00 00    	jne    95bf <_ZN10TerminalIO8read_keyEv+0x18f>
        {
            if(seq[1] >= '0' && seq[1] <= '9')
    9505:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    9509:	83 f8 30             	cmp    eax,0x30
    950c:	7c 53                	jl     9561 <_ZN10TerminalIO8read_keyEv+0x131>
    950e:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    9512:	83 f8 39             	cmp    eax,0x39
    9515:	7f 4a                	jg     9561 <_ZN10TerminalIO8read_keyEv+0x131>
            {
                if(read(STDIN_FILENO, &seq[2], 1) != 1)
    9517:	48 8d 75 f5          	lea    rsi,[rbp-0xb]
    951b:	48 83 c6 02          	add    rsi,0x2
    951f:	31 ff                	xor    edi,edi
    9521:	ba 01 00 00 00       	mov    edx,0x1
    9526:	e8 95 b1 ff ff       	call   46c0 <read@plt>
    952b:	48 83 f8 01          	cmp    rax,0x1
    952f:	74 0d                	je     953e <_ZN10TerminalIO8read_keyEv+0x10e>
                {
                    return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    9531:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9535:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    9539:	e9 f7 00 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                }
                if(seq[2] == '~')
    953e:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
    9542:	83 f8 7e             	cmp    eax,0x7e
    9545:	75 18                	jne    955f <_ZN10TerminalIO8read_keyEv+0x12f>
                {
                    switch(seq[1])
    9547:	8a 45 f6             	mov    al,BYTE PTR [rbp-0xa]
    954a:	2c 33                	sub    al,0x33
    954c:	75 0f                	jne    955d <_ZN10TerminalIO8read_keyEv+0x12d>
    954e:	eb 00                	jmp    9550 <_ZN10TerminalIO8read_keyEv+0x120>
                    {
                        case '3':
                        {
                            return (Key){.special = true, .value = KeyValue::KEY_DELETE};
    9550:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9554:	c6 45 f3 06          	mov    BYTE PTR [rbp-0xd],0x6
    9558:	e9 d8 00 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                        }
                    }
                }
    955d:	eb 00                	jmp    955f <_ZN10TerminalIO8read_keyEv+0x12f>
            }
    955f:	eb 5c                	jmp    95bd <_ZN10TerminalIO8read_keyEv+0x18d>
            else
            {
                switch(seq[1])
    9561:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
    9565:	83 c0 bf             	add    eax,0xffffffbf
    9568:	89 c1                	mov    ecx,eax
    956a:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    956e:	83 e8 03             	sub    eax,0x3
    9571:	77 46                	ja     95b9 <_ZN10TerminalIO8read_keyEv+0x189>
    9573:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9577:	48 8d 0d ee 7e 00 00 	lea    rcx,[rip+0x7eee]        # 1146c <_IO_stdin_used+0x46c>
    957e:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    9582:	48 01 c8             	add    rax,rcx
    9585:	3e ff e0             	notrack jmp rax
                {
                    case 'A':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_UP};
    9588:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    958c:	c6 45 f3 01          	mov    BYTE PTR [rbp-0xd],0x1
    9590:	e9 a0 00 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                    }
                    case 'B':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_DOWN};
    9595:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9599:	c6 45 f3 02          	mov    BYTE PTR [rbp-0xd],0x2
    959d:	e9 93 00 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                    }
                    case 'C':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_RIGHT};
    95a2:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95a6:	c6 45 f3 04          	mov    BYTE PTR [rbp-0xd],0x4
    95aa:	e9 86 00 00 00       	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                    }
                    case 'D':
                    {
                        return (Key){.special = true, .value = KeyValue::KEY_LEFT};
    95af:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95b3:	c6 45 f3 03          	mov    BYTE PTR [rbp-0xd],0x3
    95b7:	eb 7c                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
                    }
                    default:
                    {
                        break;
    95b9:	eb 00                	jmp    95bb <_ZN10TerminalIO8read_keyEv+0x18b>
    95bb:	eb 00                	jmp    95bd <_ZN10TerminalIO8read_keyEv+0x18d>
                    }
                }
            }
        }
    95bd:	eb 00                	jmp    95bf <_ZN10TerminalIO8read_keyEv+0x18f>
        return (Key){.special = true, .value = KEY_INVALID};
    95bf:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95c3:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
    95c7:	eb 6c                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
    }
    else if(c == 127)
    95c9:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    95cd:	83 f8 7f             	cmp    eax,0x7f
    95d0:	75 0a                	jne    95dc <_ZN10TerminalIO8read_keyEv+0x1ac>
    {
        return (Key){.special = true, .value = KEY_BACKSPACE};
    95d2:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95d6:	c6 45 f3 05          	mov    BYTE PTR [rbp-0xd],0x5
    95da:	eb 59                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
    }
    else if(c == '\n' || c == '\r')
    95dc:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    95e0:	83 f8 0a             	cmp    eax,0xa
    95e3:	74 09                	je     95ee <_ZN10TerminalIO8read_keyEv+0x1be>
    95e5:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    95e9:	83 f8 0d             	cmp    eax,0xd
    95ec:	75 0a                	jne    95f8 <_ZN10TerminalIO8read_keyEv+0x1c8>
    {
        return (Key){.special = true, .value = KEY_NEWLINE};
    95ee:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    95f2:	c6 45 f3 07          	mov    BYTE PTR [rbp-0xd],0x7
    95f6:	eb 3d                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
    }
    else if(c == '\t')
    95f8:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    95fc:	83 f8 09             	cmp    eax,0x9
    95ff:	75 0a                	jne    960b <_ZN10TerminalIO8read_keyEv+0x1db>
    {
        return (Key){.special = true, .value = KEY_TAB};
    9601:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9605:	c6 45 f3 08          	mov    BYTE PTR [rbp-0xd],0x8
    9609:	eb 2a                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
    }
    else if(!iscntrl(c))
    960b:	0f be 7d f4          	movsx  edi,BYTE PTR [rbp-0xc]
    960f:	e8 ec b0 ff ff       	call   4700 <iscntrl@plt>
    9614:	83 f8 00             	cmp    eax,0x0
    9617:	75 0c                	jne    9625 <_ZN10TerminalIO8read_keyEv+0x1f5>
    {
        return (Key){.special = false, .value = c};
    9619:	c6 45 f2 00          	mov    BYTE PTR [rbp-0xe],0x0
    961d:	8a 45 f4             	mov    al,BYTE PTR [rbp-0xc]
    9620:	88 45 f3             	mov    BYTE PTR [rbp-0xd],al
    9623:	eb 10                	jmp    9635 <_ZN10TerminalIO8read_keyEv+0x205>
    9625:	eb 00                	jmp    9627 <_ZN10TerminalIO8read_keyEv+0x1f7>
    9627:	eb 00                	jmp    9629 <_ZN10TerminalIO8read_keyEv+0x1f9>
    9629:	eb 00                	jmp    962b <_ZN10TerminalIO8read_keyEv+0x1fb>
    962b:	eb 00                	jmp    962d <_ZN10TerminalIO8read_keyEv+0x1fd>
    }
    return (Key){.special = true, .value = KeyValue::KEY_INVALID};
    962d:	c6 45 f2 01          	mov    BYTE PTR [rbp-0xe],0x1
    9631:	c6 45 f3 00          	mov    BYTE PTR [rbp-0xd],0x0
}
    9635:	66 8b 45 f2          	mov    ax,WORD PTR [rbp-0xe]
    9639:	66 89 45 d6          	mov    WORD PTR [rbp-0x2a],ax
    963d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9644:	00 00 
    9646:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    964a:	48 39 c8             	cmp    rax,rcx
    964d:	75 0a                	jne    9659 <_ZN10TerminalIO8read_keyEv+0x229>
    964f:	66 8b 45 d6          	mov    ax,WORD PTR [rbp-0x2a]
    9653:	48 83 c4 30          	add    rsp,0x30
    9657:	5d                   	pop    rbp
    9658:	c3                   	ret
    9659:	e8 52 af ff ff       	call   45b0 <__stack_chk_fail@plt>
    965e:	66 90                	xchg   ax,ax

0000000000009660 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE>:

std::string TerminalIO::get_line(const std::string& prompt, std::vector<std::string>& lines)
{
    9660:	f3 0f 1e fa          	endbr64
    9664:	55                   	push   rbp
    9665:	48 89 e5             	mov    rbp,rsp
    9668:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    966f:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9676:	48 89 f8             	mov    rax,rdi
    9679:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    9680:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9687:	00 00 
    9689:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    968d:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    9691:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    9695:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    9699:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    969d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    96a1:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    std::string current_line = "";
    96a8:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    96ac:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    96b0:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    96b4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    96b8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    96bc:	48 8d 35 75 7d 00 00 	lea    rsi,[rip+0x7d75]        # 11438 <_IO_stdin_used+0x438>
    96c3:	e8 b8 c9 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    96c8:	eb 00                	jmp    96ca <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x6a>
    96ca:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    96ce:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    std::size_t cursor_pos = 0;
    96d2:	48 c7 45 90 00 00 00 	mov    QWORD PTR [rbp-0x70],0x0
    96d9:	00 
    std::size_t row = lines.size();
    96da:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    96de:	e8 7d c7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    96e3:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    96ea:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    print("\33[2K\r");
    96ee:	48 8d 35 7f 7b 00 00 	lea    rsi,[rip+0x7b7f]        # 11274 <_IO_stdin_used+0x274>
    96f5:	31 c0                	xor    eax,eax
    96f7:	e8 54 fb ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    96fc:	eb 00                	jmp    96fe <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x9e>
    print("%s >> ", prompt.c_str());
    96fe:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9702:	e8 a9 c7 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9707:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    970e:	48 89 c2             	mov    rdx,rax
    9711:	48 8d 35 62 7b 00 00 	lea    rsi,[rip+0x7b62]        # 1127a <_IO_stdin_used+0x27a>
    9718:	31 c0                	xor    eax,eax
    971a:	e8 31 fb ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    971f:	eb 00                	jmp    9721 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc1>
    while(true)
    9721:	eb 00                	jmp    9723 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc3>
    9723:	eb 00                	jmp    9725 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc5>
    9725:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    {
        Key next_key = read_key();
    972c:	e8 ff fc ff ff       	call   9430 <_ZN10TerminalIO8read_keyEv>
    9731:	66 89 85 66 ff ff ff 	mov    WORD PTR [rbp-0x9a],ax
    9738:	eb 00                	jmp    973a <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xda>
    973a:	66 8b 85 66 ff ff ff 	mov    ax,WORD PTR [rbp-0x9a]
    9741:	66 89 45 86          	mov    WORD PTR [rbp-0x7a],ax
        if(next_key.special)
    9745:	f6 45 86 01          	test   BYTE PTR [rbp-0x7a],0x1
    9749:	0f 84 82 02 00 00    	je     99d1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x371>
        {
            switch(next_key.value)
    974f:	0f be 45 87          	movsx  eax,BYTE PTR [rbp-0x79]
    9753:	ff c8                	dec    eax
    9755:	89 c1                	mov    ecx,eax
    9757:	48 89 8d 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rcx
    975e:	83 e8 06             	sub    eax,0x6
    9761:	0f 87 66 02 00 00    	ja     99cd <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36d>
    9767:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    976e:	48 8d 0d 07 7d 00 00 	lea    rcx,[rip+0x7d07]        # 1147c <_IO_stdin_used+0x47c>
    9775:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    9779:	48 01 c8             	add    rax,rcx
    977c:	3e ff e0             	notrack jmp rax
    977f:	f3 0f 1e fa          	endbr64
    9783:	48 89 c1             	mov    rcx,rax
        print("%s >> %s", prompt.c_str(), current_line.c_str());
        // https://cloudaffle.com/series/customizing-the-prompt/moving-the-cursor/ for ansi codes for moving the cursor
        print("\e[1C");
        print("\e[%zuD", current_line.length() - cursor_pos + 1);
    }
}
    9786:	89 d0                	mov    eax,edx
    9788:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    978c:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    978f:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    9793:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    std::string current_line = "";
    9797:	e9 37 03 00 00       	jmp    9ad3 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x473>
    979c:	f3 0f 1e fa          	endbr64
    97a0:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    97a7:	48 89 c1             	mov    rcx,rax
}
    97aa:	89 d0                	mov    eax,edx
    97ac:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    97b0:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    97b3:	e8 78 c9 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    97b8:	e9 16 03 00 00       	jmp    9ad3 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x473>
    97bd:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos < current_line.length())
    97c4:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    97c8:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    97cf:	e8 8c c8 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    97d4:	48 89 c1             	mov    rcx,rax
    97d7:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    97de:	48 39 c8             	cmp    rax,rcx
    97e1:	73 19                	jae    97fc <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19c>
    97e3:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        current_line.erase(cursor_pos, 1);
    97ea:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    97ee:	ba 01 00 00 00       	mov    edx,0x1
    97f3:	e8 18 03 00 00       	call   9b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>
    97f8:	eb 00                	jmp    97fa <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19a>
                    }
    97fa:	eb 00                	jmp    97fc <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x19c>
                    row = lines.size();
    97fc:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9800:	e8 5b c6 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9805:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                    break;
    9809:	e9 c1 01 00 00       	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    980e:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos <= current_line.length() && cursor_pos > 0)
    9815:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9819:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9820:	e8 3b c8 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9825:	48 89 c1             	mov    rcx,rax
    9828:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    982f:	48 39 c8             	cmp    rax,rcx
    9832:	77 49                	ja     987d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x21d>
    9834:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    9839:	76 42                	jbe    987d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x21d>
    983b:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        current_line = current_line.erase(cursor_pos - 1, 1);
    9842:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    9846:	48 ff ce             	dec    rsi
    9849:	ba 01 00 00 00       	mov    edx,0x1
    984e:	e8 bd 02 00 00       	call   9b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>
    9853:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    985a:	eb 00                	jmp    985c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x1fc>
    985c:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    9863:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    986a:	e8 31 03 00 00       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    986f:	eb 00                	jmp    9871 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x211>
                        cursor_pos--;
    9871:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9875:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    9879:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    row = lines.size();
    987d:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9881:	e8 da c5 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9886:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                    break;
    988a:	e9 40 01 00 00       	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(cursor_pos > 0)
    988f:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    9894:	76 0c                	jbe    98a2 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x242>
                        cursor_pos--;
    9896:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    989a:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    989e:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    98a2:	e9 28 01 00 00       	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    98a7:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                    if(cursor_pos < current_line.length())
    98ae:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    98b2:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    98b9:	e8 a2 c7 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    98be:	48 89 c1             	mov    rcx,rax
    98c1:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    98c8:	48 39 c8             	cmp    rax,rcx
    98cb:	73 0c                	jae    98d9 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x279>
                        cursor_pos++;
    98cd:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    98d1:	48 83 c0 01          	add    rax,0x1
    98d5:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    98d9:	e9 f1 00 00 00       	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(row > 0 && lines.size() > 0)
    98de:	48 83 7d 88 00       	cmp    QWORD PTR [rbp-0x78],0x0
    98e3:	76 48                	jbe    992d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2cd>
    98e5:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    98e9:	e8 72 c5 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    98ee:	48 83 f8 00          	cmp    rax,0x0
    98f2:	76 39                	jbe    992d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2cd>
                        row--;
    98f4:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    98f8:	48 ff c8             	dec    rax
    98fb:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                        current_line = lines[row];
    98ff:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9903:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    9907:	e8 44 ce ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    990c:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    9913:	48 89 c6             	mov    rsi,rax
    9916:	e8 85 02 00 00       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    991b:	eb 00                	jmp    991d <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x2bd>
    991d:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        cursor_pos = current_line.length();
    9924:	e8 37 c7 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9929:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    992d:	e9 9d 00 00 00       	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
                    if(lines.size() != 0 && row < lines.size() - 1)
    9932:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9936:	e8 25 c5 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    993b:	48 83 f8 00          	cmp    rax,0x0
    993f:	74 60                	je     99a1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x341>
    9941:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    9945:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    994c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9950:	e8 0b c5 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    9955:	48 89 c1             	mov    rcx,rax
    9958:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    995f:	48 83 e9 01          	sub    rcx,0x1
    9963:	48 39 c8             	cmp    rax,rcx
    9966:	73 39                	jae    99a1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x341>
                        row++;
    9968:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    996c:	48 ff c0             	inc    rax
    996f:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
                        current_line = lines[row];
    9973:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    9977:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    997b:	e8 d0 cd ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    9980:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    9987:	48 89 c6             	mov    rsi,rax
    998a:	e8 11 02 00 00       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    998f:	eb 00                	jmp    9991 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x331>
    9991:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
                        cursor_pos = current_line.length();
    9998:	e8 c3 c6 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    999d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
                    break;
    99a1:	eb 2c                	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
    99a3:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
                    print("\r\n");
    99aa:	48 8d 35 85 7a 00 00 	lea    rsi,[rip+0x7a85]        # 11436 <_IO_stdin_used+0x436>
    99b1:	31 c0                	xor    eax,eax
    99b3:	e8 98 f8 ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    99b8:	eb 00                	jmp    99ba <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x35a>
                    return current_line;
    99ba:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
}
    99be:	f6 45 af 01          	test   BYTE PTR [rbp-0x51],0x1
    99c2:	0f 85 e9 00 00 00    	jne    9ab1 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x451>
    99c8:	e9 d8 00 00 00       	jmp    9aa5 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x445>
                    break;
    99cd:	eb 00                	jmp    99cf <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x36f>
        }
    99cf:	eb 34                	jmp    9a05 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3a5>
    99d1:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
           current_line.insert(cursor_pos, 1, next_key.value);
    99d8:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    99dc:	0f be 4d 87          	movsx  ecx,BYTE PTR [rbp-0x79]
    99e0:	ba 01 00 00 00       	mov    edx,0x1
    99e5:	e8 e6 01 00 00       	call   9bd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc>
    99ea:	eb 00                	jmp    99ec <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x38c>
           row = lines.size();
    99ec:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    99f0:	e8 6b c4 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    99f5:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
           cursor_pos++;
    99f9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    99fd:	48 83 c0 01          	add    rax,0x1
    9a01:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    9a05:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
        print("\33[2K\r");
    9a0c:	48 8d 35 61 78 00 00 	lea    rsi,[rip+0x7861]        # 11274 <_IO_stdin_used+0x274>
    9a13:	31 c0                	xor    eax,eax
    9a15:	e8 36 f8 ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    9a1a:	eb 00                	jmp    9a1c <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3bc>
        print("%s >> %s", prompt.c_str(), current_line.c_str());
    9a1c:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9a20:	e8 8b c4 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9a25:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    9a2c:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    9a33:	e8 78 c4 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    9a38:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    9a3f:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
    9a46:	48 89 c1             	mov    rcx,rax
    9a49:	48 8d 35 31 78 00 00 	lea    rsi,[rip+0x7831]        # 11281 <_IO_stdin_used+0x281>
    9a50:	31 c0                	xor    eax,eax
    9a52:	e8 f9 f7 ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    9a57:	eb 00                	jmp    9a59 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x3f9>
    9a59:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
        print("\e[1C");
    9a60:	48 8d 35 23 78 00 00 	lea    rsi,[rip+0x7823]        # 1128a <_IO_stdin_used+0x28a>
    9a67:	31 c0                	xor    eax,eax
    9a69:	e8 e2 f7 ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    9a6e:	eb 00                	jmp    9a70 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x410>
    9a70:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
        print("\e[%zuD", current_line.length() - cursor_pos + 1);
    9a77:	e8 e4 c5 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9a7c:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    9a83:	48 89 c2             	mov    rdx,rax
    9a86:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    9a8a:	48 29 c2             	sub    rdx,rax
    9a8d:	48 ff c2             	inc    rdx
    9a90:	48 8d 35 f8 77 00 00 	lea    rsi,[rip+0x77f8]        # 1128f <_IO_stdin_used+0x28f>
    9a97:	31 c0                	xor    eax,eax
    9a99:	e8 b2 f7 ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    9a9e:	eb 00                	jmp    9aa0 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x440>
    while(true)
    9aa0:	e9 7e fc ff ff       	jmp    9723 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0xc3>
    9aa5:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
}
    9aac:	e8 7f c6 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    9ab1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ab8:	00 00 
    9aba:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9abe:	48 39 c8             	cmp    rax,rcx
    9ac1:	75 39                	jne    9afc <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x49c>
    9ac3:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    9aca:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    9ad1:	5d                   	pop    rbp
    9ad2:	c3                   	ret
    std::string current_line = "";
    9ad3:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    9ad7:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    9ade:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ae5:	00 00 
    9ae7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9aeb:	48 39 c8             	cmp    rax,rcx
    9aee:	75 0c                	jne    9afc <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE+0x49c>
    9af0:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    9af7:	e8 64 a9 ff ff       	call   4460 <_Unwind_Resume@plt>
    9afc:	e8 af aa ff ff       	call   45b0 <__stack_chk_fail@plt>
    9b01:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9b08:	00 00 00 
    9b0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm>:
      {
    9b10:	f3 0f 1e fa          	endbr64
    9b14:	55                   	push   rbp
    9b15:	48 89 e5             	mov    rbp,rsp
    9b18:	48 83 ec 30          	sub    rsp,0x30
    9b1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9b20:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9b24:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9b28:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9b2c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	_M_check(__pos, "basic_string::erase");
    9b30:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9b34:	48 8d 15 5b 77 00 00 	lea    rdx,[rip+0x775b]        # 11296 <_IO_stdin_used+0x296>
    9b3b:	e8 f0 00 00 00       	call   9c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
	if (__n == npos)
    9b40:	48 83 7d e8 ff       	cmp    QWORD PTR [rbp-0x18],0xffffffffffffffff
    9b45:	75 0f                	jne    9b56 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x46>
    9b47:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	  this->_M_set_length(__pos);
    9b4b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9b4f:	e8 1c d1 ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    9b54:	eb 32                	jmp    9b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x78>
	else if (__n != 0)
    9b56:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    9b5b:	74 29                	je     9b86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x76>
    9b5d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	  this->_M_erase(__pos, _M_limit(__pos, __n));
    9b61:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9b65:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    9b69:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9b6d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9b71:	e8 ca 01 00 00       	call   9d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    9b76:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9b7a:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    9b7e:	48 89 c2             	mov    rdx,rax
    9b81:	e8 2a 01 00 00       	call   9cb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm>
    9b86:	eb 00                	jmp    9b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm+0x78>
    9b88:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	return *this;
    9b8c:	48 83 c4 30          	add    rsp,0x30
    9b90:	5d                   	pop    rbp
    9b91:	c3                   	ret
    9b92:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9b99:	00 00 00 
    9b9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000009ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
      {
    9ba0:	f3 0f 1e fa          	endbr64
    9ba4:	55                   	push   rbp
    9ba5:	48 89 e5             	mov    rbp,rsp
    9ba8:	48 83 ec 10          	sub    rsp,0x10
    9bac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9bb0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9bb4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return this->assign(__str);
    9bb8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9bbc:	e8 ef 01 00 00       	call   9db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>
    9bc1:	48 83 c4 10          	add    rsp,0x10
    9bc5:	5d                   	pop    rbp
    9bc6:	c3                   	ret
    9bc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9bce:	00 00 

0000000000009bd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc>:
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
    9bd0:	f3 0f 1e fa          	endbr64
    9bd4:	55                   	push   rbp
    9bd5:	48 89 e5             	mov    rbp,rsp
    9bd8:	48 83 ec 30          	sub    rsp,0x30
    9bdc:	88 c8                	mov    al,cl
    9bde:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9be2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9be6:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9bea:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    9bed:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9bf1:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9bf5:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9bf9:	48 8d 15 e1 76 00 00 	lea    rdx,[rip+0x76e1]        # 112e1 <_IO_stdin_used+0x2e1>
    9c00:	e8 2b 00 00 00       	call   9c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    9c05:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9c09:	48 89 c6             	mov    rsi,rax
			      size_type(0), __n, __c); }
    9c0c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
    9c10:	31 c0                	xor    eax,eax
    9c12:	89 c2                	mov    edx,eax
    9c14:	44 0f be 45 e7       	movsx  r8d,BYTE PTR [rbp-0x19]
    9c19:	e8 b2 02 00 00       	call   9ed0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc>
    9c1e:	48 83 c4 30          	add    rsp,0x30
    9c22:	5d                   	pop    rbp
    9c23:	c3                   	ret
    9c24:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9c2b:	00 00 00 
    9c2e:	66 90                	xchg   ax,ax

0000000000009c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      {
    9c30:	f3 0f 1e fa          	endbr64
    9c34:	55                   	push   rbp
    9c35:	48 89 e5             	mov    rbp,rsp
    9c38:	48 83 ec 40          	sub    rsp,0x40
    9c3c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9c40:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9c44:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9c48:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9c4c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
	if (__pos > this->size())
    9c50:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9c54:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    9c58:	e8 b3 d6 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9c5d:	48 89 c1             	mov    rcx,rax
    9c60:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9c64:	48 39 c8             	cmp    rax,rcx
    9c67:	76 32                	jbe    9c9b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x6b>
    9c69:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
				   __s, __pos, this->size());
    9c6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9c71:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9c75:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9c79:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9c7d:	e8 8e d6 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9c82:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    9c86:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    9c8a:	48 89 c1             	mov    rcx,rax
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    9c8d:	48 8d 3d 16 76 00 00 	lea    rdi,[rip+0x7616]        # 112aa <_IO_stdin_used+0x2aa>
    9c94:	b0 00                	mov    al,0x0
    9c96:	e8 a5 aa ff ff       	call   4740 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    9c9b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9c9f:	48 83 c4 40          	add    rsp,0x40
    9ca3:	5d                   	pop    rbp
    9ca4:	c3                   	ret
    9ca5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9cac:	00 00 00 
    9caf:	90                   	nop

0000000000009cb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm>:
    {
    9cb0:	f3 0f 1e fa          	endbr64
    9cb4:	55                   	push   rbp
    9cb5:	48 89 e5             	mov    rbp,rsp
    9cb8:	48 83 ec 30          	sub    rsp,0x30
    9cbc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9cc0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9cc4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9cc8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9ccc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
      const size_type __how_much = length() - __pos - __n;
    9cd0:	e8 8b c3 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9cd5:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9cd9:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9cdd:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      if (__how_much && __n)
    9ce1:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    9ce6:	74 39                	je     9d21 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm+0x71>
    9ce8:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    9ced:	74 32                	je     9d21 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm+0x71>
    9cef:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	this->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);
    9cf3:	e8 a8 cb ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9cf8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9cfc:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    9d00:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9d04:	e8 97 cb ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9d09:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    9d0d:	48 89 c6             	mov    rsi,rax
    9d10:	48 03 75 f0          	add    rsi,QWORD PTR [rbp-0x10]
    9d14:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    9d18:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    9d1c:	e8 ff e5 ff ff       	call   8320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    9d21:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
      _M_set_length(length() - __n);
    9d25:	e8 36 c3 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9d2a:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    9d2e:	48 89 c6             	mov    rsi,rax
    9d31:	48 2b 75 e8          	sub    rsi,QWORD PTR [rbp-0x18]
    9d35:	e8 36 cf ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    }
    9d3a:	48 83 c4 30          	add    rsp,0x30
    9d3e:	5d                   	pop    rbp
    9d3f:	c3                   	ret

0000000000009d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      {
    9d40:	f3 0f 1e fa          	endbr64
    9d44:	55                   	push   rbp
    9d45:	48 89 e5             	mov    rbp,rsp
    9d48:	48 83 ec 40          	sub    rsp,0x40
    9d4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9d50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9d54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9d58:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9d5c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
	const bool __testoff =  __off < this->size() - __pos;
    9d60:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9d64:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    9d68:	e8 a3 d5 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9d6d:	48 89 c1             	mov    rcx,rax
    9d70:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9d74:	48 2b 4d f0          	sub    rcx,QWORD PTR [rbp-0x10]
    9d78:	48 39 c8             	cmp    rax,rcx
    9d7b:	0f 92 c0             	setb   al
    9d7e:	24 01                	and    al,0x1
    9d80:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
	return __testoff ? __off : this->size() - __pos;
    9d83:	f6 45 e7 01          	test   BYTE PTR [rbp-0x19],0x1
    9d87:	74 0a                	je     9d93 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x53>
    9d89:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9d8d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9d91:	eb 11                	jmp    9da4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x64>
    9d93:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    9d97:	e8 74 d5 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9d9c:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9da0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9da4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9da8:	48 83 c4 40          	add    rsp,0x40
    9dac:	5d                   	pop    rbp
    9dad:	c3                   	ret
    9dae:	66 90                	xchg   ax,ax

0000000000009db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>:
      {
    9db0:	f3 0f 1e fa          	endbr64
    9db4:	55                   	push   rbp
    9db5:	48 89 e5             	mov    rbp,rsp
    9db8:	48 83 ec 20          	sub    rsp,0x20
    9dbc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9dc0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9dc4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9dc8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
	this->_M_assign(__str);
    9dcc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9dd0:	e8 0b 00 00 00       	call   9de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    9dd5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
	return *this;
    9dd9:	48 83 c4 20          	add    rsp,0x20
    9ddd:	5d                   	pop    rbp
    9dde:	c3                   	ret
    9ddf:	90                   	nop

0000000000009de0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
    {
    9de0:	f3 0f 1e fa          	endbr64
    9de4:	55                   	push   rbp
    9de5:	48 89 e5             	mov    rbp,rsp
    9de8:	48 83 ec 50          	sub    rsp,0x50
    9dec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9df3:	00 00 
    9df5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9df9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9dfd:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9e01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e05:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      if (this != std::__addressof(__str))
    9e09:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    9e0d:	0f 84 9e 00 00 00    	je     9eb1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xd1>
	  const size_type __rsize = __str.length();
    9e13:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9e17:	e8 44 c2 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9e1c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9e20:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  const size_type __capacity = capacity();
    9e24:	e8 e7 e3 ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9e29:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	  if (__rsize > __capacity)
    9e2d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e31:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    9e35:	76 40                	jbe    9e77 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x97>
    9e37:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      size_type __new_capacity = __rsize;
    9e3b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e3f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	      pointer __tmp = _M_create(__new_capacity, __capacity);
    9e43:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    9e47:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
    9e4b:	e8 d0 cc ff ff       	call   6b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9e50:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9e54:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	      _M_dispose();
    9e58:	e8 c3 d0 ff ff       	call   6f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9e5d:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      _M_data(__tmp);
    9e61:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    9e65:	e8 96 cc ff ff       	call   6b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
    9e6a:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	      _M_capacity(__new_capacity);
    9e6e:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9e72:	e8 79 cd ff ff       	call   6bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	  if (__rsize)
    9e77:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    9e7c:	74 26                	je     9ea4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc4>
    9e7e:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	    this->_S_copy(_M_data(), __str._M_data(), __rsize);
    9e82:	e8 19 ca ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9e87:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9e8b:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    9e8f:	e8 0c ca ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9e94:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    9e98:	48 89 c6             	mov    rsi,rax
    9e9b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    9e9f:	e8 9c cf ff ff       	call   6e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    9ea4:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  _M_set_length(__rsize);
    9ea8:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    9eac:	e8 bf cd ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    }
    9eb1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9eb8:	00 00 
    9eba:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9ebe:	48 39 c8             	cmp    rax,rcx
    9ec1:	75 06                	jne    9ec9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xe9>
    9ec3:	48 83 c4 50          	add    rsp,0x50
    9ec7:	5d                   	pop    rbp
    9ec8:	c3                   	ret
    9ec9:	e8 e2 a6 ff ff       	call   45b0 <__stack_chk_fail@plt>
    9ece:	66 90                	xchg   ax,ax

0000000000009ed0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc>:
    {
    9ed0:	f3 0f 1e fa          	endbr64
    9ed4:	55                   	push   rbp
    9ed5:	48 89 e5             	mov    rbp,rsp
    9ed8:	48 83 ec 60          	sub    rsp,0x60
    9edc:	44 88 c0             	mov    al,r8b
    9edf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9ee3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9ee7:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9eeb:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    9eef:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    9ef2:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    9ef6:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
      _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
    9efa:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    9efe:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    9f02:	48 8d 0d ed 73 00 00 	lea    rcx,[rip+0x73ed]        # 112f6 <_IO_stdin_used+0x2f6>
    9f09:	e8 a2 e2 ff ff       	call   81b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    9f0e:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      const size_type __old_size = this->size();
    9f12:	e8 f9 d3 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9f17:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    9f1b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      const size_type __new_size = __old_size + __n2 - __n1;
    9f1f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f23:	48 03 45 e0          	add    rax,QWORD PTR [rbp-0x20]
    9f27:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9f2b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      if (__new_size <= this->capacity())
    9f2f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f33:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f37:	e8 d4 e2 ff ff       	call   8210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9f3c:	48 89 c1             	mov    rcx,rax
    9f3f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f43:	48 39 c8             	cmp    rax,rcx
    9f46:	77 4d                	ja     9f95 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc5>
    9f48:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	  pointer __p = this->_M_data() + __pos1;
    9f4c:	e8 4f c9 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9f51:	48 03 45 f0          	add    rax,QWORD PTR [rbp-0x10]
    9f55:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  const size_type __how_much = __old_size - __pos1 - __n1;
    9f59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f5d:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    9f61:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
    9f65:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
	  if (__how_much && __n1 != __n2)
    9f69:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
    9f6e:	74 23                	je     9f93 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc3>
    9f70:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9f74:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    9f78:	74 19                	je     9f93 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xc3>
	    this->_S_move(__p + __n2, __p + __n1, __how_much);
    9f7a:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    9f7e:	48 03 7d e0          	add    rdi,QWORD PTR [rbp-0x20]
    9f82:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    9f86:	48 03 75 e8          	add    rsi,QWORD PTR [rbp-0x18]
    9f8a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f8e:	e8 8d e3 ff ff       	call   8320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	}
    9f93:	eb 19                	jmp    9fae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0xde>
    9f95:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	this->_M_mutate(__pos1, __n1, 0, __n2);
    9f99:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    9f9d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9fa1:	4c 8b 45 e0          	mov    r8,QWORD PTR [rbp-0x20]
    9fa5:	31 c0                	xor    eax,eax
    9fa7:	89 c1                	mov    ecx,eax
    9fa9:	e8 c2 e3 ff ff       	call   8370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
      if (__n2)
    9fae:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    9fb3:	74 1d                	je     9fd2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc+0x102>
    9fb5:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
	this->_S_assign(this->_M_data() + __pos1, __n2, __c);
    9fb9:	e8 e2 c8 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9fbe:	48 89 c7             	mov    rdi,rax
    9fc1:	48 03 7d f0          	add    rdi,QWORD PTR [rbp-0x10]
    9fc5:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    9fc9:	0f be 55 df          	movsx  edx,BYTE PTR [rbp-0x21]
    9fcd:	e8 1e 00 00 00       	call   9ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc>
    9fd2:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
      this->_M_set_length(__new_size);
    9fd6:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    9fda:	e8 91 cc ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    9fdf:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
      return *this;
    9fe3:	48 83 c4 60          	add    rsp,0x60
    9fe7:	5d                   	pop    rbp
    9fe8:	c3                   	ret
    9fe9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000009ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc>:
      {
    9ff0:	f3 0f 1e fa          	endbr64
    9ff4:	55                   	push   rbp
    9ff5:	48 89 e5             	mov    rbp,rsp
    9ff8:	48 83 ec 20          	sub    rsp,0x20
    9ffc:	88 d0                	mov    al,dl
    9ffe:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    a005:	00 00 
    a007:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    a00b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a00f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    a013:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
	if (__n == 1)
    a016:	48 83 7d e0 01       	cmp    QWORD PTR [rbp-0x20],0x1
    a01b:	75 0f                	jne    a02c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x3c>
	  traits_type::assign(*__d, __c);
    a01d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    a021:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    a025:	e8 66 ce ff ff       	call   6e90 <_ZNSt11char_traitsIcE6assignERcRKc>
    a02a:	eb 11                	jmp    a03d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x4d>
	  traits_type::assign(__d, __n, __c);
    a02c:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    a030:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    a034:	0f be 55 f7          	movsx  edx,BYTE PTR [rbp-0x9]
    a038:	e8 23 00 00 00       	call   a060 <_ZNSt11char_traitsIcE6assignEPcmc>
      }
    a03d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a044:	00 00 
    a046:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a04a:	48 39 c8             	cmp    rax,rcx
    a04d:	75 06                	jne    a055 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc+0x65>
    a04f:	48 83 c4 20          	add    rsp,0x20
    a053:	5d                   	pop    rbp
    a054:	c3                   	ret
    a055:	e8 56 a5 ff ff       	call   45b0 <__stack_chk_fail@plt>
    a05a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a060 <_ZNSt11char_traitsIcE6assignEPcmc>:

      static _GLIBCXX20_CONSTEXPR char_type*
      assign(char_type* __s, size_t __n, char_type __a)
      {
    a060:	f3 0f 1e fa          	endbr64
    a064:	55                   	push   rbp
    a065:	48 89 e5             	mov    rbp,rsp
    a068:	48 83 ec 30          	sub    rsp,0x30
    a06c:	88 d0                	mov    al,dl
    a06e:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a072:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    a076:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
	if (__n == 0)
    a079:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    a07e:	75 0a                	jne    a08a <_ZNSt11char_traitsIcE6assignEPcmc+0x2a>
	  return __s;
    a080:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a084:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a088:	eb 20                	jmp    a0aa <_ZNSt11char_traitsIcE6assignEPcmc+0x4a>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::assign(__s, __n, __a);
#endif
	return static_cast<char_type*>(__builtin_memset(__s, __a, __n));
    a08a:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a08e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    a092:	0f be 45 e7          	movsx  eax,BYTE PTR [rbp-0x19]
    a096:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    a09a:	0f b6 f0             	movzx  esi,al
    a09d:	e8 5e a4 ff ff       	call   4500 <memset@plt>
    a0a2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a0a6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    a0aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0ae:	48 83 c4 30          	add    rsp,0x30
    a0b2:	5d                   	pop    rbp
    a0b3:	c3                   	ret
    a0b4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a0bb:	00 00 00 
    a0be:	66 90                	xchg   ax,ax

000000000000a0c0 <_ZN8TerminalC1Ev>:
#include <cstdio>
#include <sys/stat.h>
#include <flapjack_commands.h>

Terminal::Terminal() : terminal_io(), parser()
{
    a0c0:	f3 0f 1e fa          	endbr64
    a0c4:	55                   	push   rbp
    a0c5:	48 89 e5             	mov    rbp,rsp
    a0c8:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    a0cf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a0d6:	00 00 
    a0d8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a0dc:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    a0e0:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    a0e4:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    a0e8:	48 89 f8             	mov    rax,rdi
    a0eb:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
Terminal::Terminal() : terminal_io(), parser()
    a0ef:	e8 6c c3 ff ff       	call   6460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    a0f4:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    a0f8:	48 83 c7 20          	add    rdi,0x20
    a0fc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a100:	e8 1b ef ff ff       	call   9020 <_ZN10TerminalIOC1Ev>
    a105:	eb 00                	jmp    a107 <_ZN8TerminalC1Ev+0x47>
    a107:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a10b:	48 83 c7 60          	add    rdi,0x60
    a10f:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    a113:	e8 48 09 00 00       	call   aa60 <_ZN13VarelseParserC1Ev>
    a118:	eb 00                	jmp    a11a <_ZN8TerminalC1Ev+0x5a>
    a11a:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a11e:	48 81 c7 10 02 00 00 	add    rdi,0x210
    a125:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    a129:	e8 12 c3 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    a12e:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    a132:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    current_dir = update_current_dir(current_dir);
    a136:	e8 85 a9 ff ff       	call   4ac0 <_Z18update_current_dirRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    a13b:	eb 00                	jmp    a13d <_ZN8TerminalC1Ev+0x7d>
    a13d:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a141:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    a145:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    a149:	e8 22 c0 ff ff       	call   6170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    a14e:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    a152:	e8 d9 bf ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
}
    a157:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a15e:	00 00 
    a160:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a164:	48 39 c8             	cmp    rax,rcx
    a167:	0f 85 84 00 00 00    	jne    a1f1 <_ZN8TerminalC1Ev+0x131>
    a16d:	48 81 c4 80 00 00 00 	add    rsp,0x80
    a174:	5d                   	pop    rbp
    a175:	c3                   	ret
    a176:	f3 0f 1e fa          	endbr64
    a17a:	48 89 c1             	mov    rcx,rax
    a17d:	89 d0                	mov    eax,edx
    a17f:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a183:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a186:	eb 3d                	jmp    a1c5 <_ZN8TerminalC1Ev+0x105>
    a188:	f3 0f 1e fa          	endbr64
    a18c:	48 89 c1             	mov    rcx,rax
    a18f:	89 d0                	mov    eax,edx
    a191:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a195:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a198:	eb 22                	jmp    a1bc <_ZN8TerminalC1Ev+0xfc>
    a19a:	f3 0f 1e fa          	endbr64
    a19e:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    a1a2:	48 89 c1             	mov    rcx,rax
    a1a5:	89 d0                	mov    eax,edx
    a1a7:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a1ab:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    a1ae:	e8 2d c4 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a1b3:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    a1b7:	e8 94 05 00 00       	call   a750 <_ZN13VarelseParserD2Ev>
    a1bc:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    a1c0:	e8 5b ef ff ff       	call   9120 <_ZN10TerminalIOD1Ev>
    a1c5:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    a1c9:	e8 62 bf ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a1ce:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1d2:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    a1d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a1dd:	00 00 
    a1df:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a1e3:	48 39 c8             	cmp    rax,rcx
    a1e6:	75 09                	jne    a1f1 <_ZN8TerminalC1Ev+0x131>
    a1e8:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    a1ec:	e8 6f a2 ff ff       	call   4460 <_Unwind_Resume@plt>
    a1f1:	e8 ba a3 ff ff       	call   45b0 <__stack_chk_fail@plt>
    a1f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a1fd:	00 00 00 

000000000000a200 <_ZN8Terminal11run_cmdlineEv>:

void Terminal::run_cmdline()
{
    a200:	f3 0f 1e fa          	endbr64
    a204:	55                   	push   rbp
    a205:	48 89 e5             	mov    rbp,rsp
    a208:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    a20f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a216:	00 00 
    a218:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a21c:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    a220:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a224:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    a228:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    while(true)
    {
        std::string line = terminal_io.get_line(current_dir, lines);
    a22c:	48 89 d6             	mov    rsi,rdx
    a22f:	48 83 c6 20          	add    rsi,0x20
    a233:	48 89 d1             	mov    rcx,rdx
    a236:	48 81 c1 10 02 00 00 	add    rcx,0x210
    a23d:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    a241:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a245:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    a249:	e8 12 f4 ff ff       	call   9660 <_ZN10TerminalIO8get_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE>
    a24e:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    a252:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
        lines.emplace_back(line);
    a256:	e8 95 c2 ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a25b:	eb 00                	jmp    a25d <_ZN8Terminal11run_cmdlineEv+0x5d>
    a25d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
        parser.parse(terminal_io, current_dir, lines, lines.size() - 1);
    a261:	48 89 f8             	mov    rax,rdi
    a264:	48 83 c0 60          	add    rax,0x60
    a268:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    a26c:	48 89 f8             	mov    rax,rdi
    a26f:	48 83 c0 20          	add    rax,0x20
    a273:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    a277:	48 81 c7 10 02 00 00 	add    rdi,0x210
    a27e:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    a282:	e8 d9 bb ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    a287:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    a28b:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    a28f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a293:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    a297:	49 89 c0             	mov    r8,rax
    a29a:	49 ff c8             	dec    r8
    a29d:	e8 de 14 00 00       	call   b780 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>
    a2a2:	eb 00                	jmp    a2a4 <_ZN8Terminal11run_cmdlineEv+0xa4>
    }
    a2a4:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a2a8:	e8 83 be ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    while(true)
    a2ad:	e9 76 ff ff ff       	jmp    a228 <_ZN8Terminal11run_cmdlineEv+0x28>
    a2b2:	f3 0f 1e fa          	endbr64
    a2b6:	48 89 c1             	mov    rcx,rax
}
    a2b9:	89 d0                	mov    eax,edx
    a2bb:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    a2bf:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    }
    a2c2:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    a2c6:	e8 65 be ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a2cb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2cf:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    a2d3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a2da:	00 00 
    a2dc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a2e0:	48 39 c8             	cmp    rax,rcx
    a2e3:	75 09                	jne    a2ee <_ZN8Terminal11run_cmdlineEv+0xee>
    a2e5:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    a2e9:	e8 72 a1 ff ff       	call   4460 <_Unwind_Resume@plt>
    a2ee:	e8 bd a2 ff ff       	call   45b0 <__stack_chk_fail@plt>
    a2f3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]
    a2fa:	84 00 00 00 00 00 

000000000000a300 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Terminal::run_file(const std::string& file_name)
{
    a300:	f3 0f 1e fa          	endbr64
    a304:	55                   	push   rbp
    a305:	48 89 e5             	mov    rbp,rsp
    a308:	48 81 ec a0 01 00 00 	sub    rsp,0x1a0
    a30f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a316:	00 00 
    a318:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a31c:	48 89 bd e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rdi
    a323:	48 89 b5 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rsi
    a32a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    a331:	48 89 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],rax
    std::FILE* file = fopen(file_name.c_str(), "r");
    a338:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a33f:	e8 6c bb ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a344:	48 89 c7             	mov    rdi,rax
    a347:	48 8d 35 88 6d 00 00 	lea    rsi,[rip+0x6d88]        # 110d6 <_IO_stdin_used+0xd6>
    a34e:	e8 9d a2 ff ff       	call   45f0 <fopen@plt>
    a353:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
    if(file == NULL)
    a35a:	48 83 bd d0 fe ff ff 	cmp    QWORD PTR [rbp-0x130],0x0
    a361:	00 
    a362:	75 40                	jne    a3a4 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa4>
    a364:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Unable to open file '%s'\r\n", file_name.c_str());
    a36b:	48 83 c0 20          	add    rax,0x20
    a36f:	48 89 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rax
    a376:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a37d:	e8 2e bb ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a382:	48 8b bd a8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x158]
    a389:	48 89 c2             	mov    rdx,rax
    a38c:	48 8d 35 80 6f 00 00 	lea    rsi,[rip+0x6f80]        # 11313 <_IO_stdin_used+0x313>
    a393:	b0 00                	mov    al,0x0
    a395:	e8 96 ef ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        std::exit(1);
    a39a:	bf 01 00 00 00       	mov    edi,0x1
    a39f:	e8 6c a2 ff ff       	call   4610 <exit@plt>
    }
    struct stat file_state;
    if(stat(file_name.c_str(), &file_state) == -1)
    a3a4:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a3ab:	e8 00 bb ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a3b0:	48 89 c7             	mov    rdi,rax
    a3b3:	48 8d b5 68 ff ff ff 	lea    rsi,[rbp-0x98]
    a3ba:	e8 91 a1 ff ff       	call   4550 <stat@plt>
    a3bf:	83 f8 ff             	cmp    eax,0xffffffff
    a3c2:	75 4c                	jne    a410 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x110>
    a3c4:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Unable to get size of file '%s'\r\n", file_name.c_str());
    a3cb:	48 83 c0 20          	add    rax,0x20
    a3cf:	48 89 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rax
    a3d6:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a3dd:	e8 ce ba ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a3e2:	48 8b bd a0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x160]
    a3e9:	48 89 c2             	mov    rdx,rax
    a3ec:	48 8d 35 3b 6f 00 00 	lea    rsi,[rip+0x6f3b]        # 1132e <_IO_stdin_used+0x32e>
    a3f3:	b0 00                	mov    al,0x0
    a3f5:	e8 36 ef ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
        fclose(file);
    a3fa:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    a401:	e8 5a a1 ff ff       	call   4560 <fclose@plt>
        std::exit(1);
    a406:	bf 01 00 00 00       	mov    edi,0x1
    a40b:	e8 00 a2 ff ff       	call   4610 <exit@plt>
    a410:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a417:	48 89 bd 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],rdi
    }
    std::string buffer;
    a41e:	e8 3d c0 ff ff       	call   6460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    a423:	48 8b bd 98 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x168]
    buffer.reserve(file_state.st_size);
    a42a:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    a42e:	e8 ad ea ff ff       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    a433:	eb 00                	jmp    a435 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x135>
    a435:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    if(std::fread(buffer.data(), sizeof(char), file_state.st_size / sizeof(char), file) != file_state.st_size / sizeof(char))
    a43c:	e8 7f ea ff ff       	call   8ec0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    a441:	48 89 c7             	mov    rdi,rax
    a444:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    a448:	48 8b 8d d0 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x130]
    a44f:	be 01 00 00 00       	mov    esi,0x1
    a454:	e8 b7 a2 ff ff       	call   4710 <fread@plt>
    a459:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    a460:	eb 00                	jmp    a462 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x162>
    a462:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
    a469:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    a46d:	48 c1 e9 00          	shr    rcx,0x0
    a471:	48 39 c8             	cmp    rax,rcx
    a474:	74 6b                	je     a4e1 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e1>
    a476:	48 8b 85 b0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x150]
    {
        terminal_io.print_error("Error reading file '%s'\r\n", file_name.c_str());
    a47d:	48 83 c0 20          	add    rax,0x20
    a481:	48 89 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rax
    a488:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    a48f:	e8 1c ba ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    a494:	48 8b bd 88 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x178]
    a49b:	48 89 c2             	mov    rdx,rax
    a49e:	48 8d 35 ab 6e 00 00 	lea    rsi,[rip+0x6eab]        # 11350 <_IO_stdin_used+0x350>
    a4a5:	31 c0                	xor    eax,eax
    a4a7:	e8 84 ee ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    a4ac:	eb 00                	jmp    a4ae <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ae>
        fclose(file);
    a4ae:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    a4b5:	e8 a6 a0 ff ff       	call   4560 <fclose@plt>
    a4ba:	eb 00                	jmp    a4bc <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1bc>
        std::exit(1);
    a4bc:	bf 01 00 00 00       	mov    edi,0x1
    a4c1:	e8 4a a1 ff ff       	call   4610 <exit@plt>
    a4c6:	f3 0f 1e fa          	endbr64
    a4ca:	48 89 c1             	mov    rcx,rax
    if(line.length() > 0)
    {
        lines.emplace_back(line);
    }
    parser.parse(terminal_io, current_dir, lines, 0);
}
    a4cd:	89 d0                	mov    eax,edx
    a4cf:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a4d6:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a4dc:	e9 2d 02 00 00       	jmp    a70e <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40e>
    a4e1:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    std::vector<std::string> lines;
    a4e8:	e8 53 bf ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    a4ed:	48 8d 95 0f ff ff ff 	lea    rdx,[rbp-0xf1]
    a4f4:	48 89 95 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdx
    a4fb:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    a502:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    std::string line = "";
    a509:	48 8d 35 28 6f 00 00 	lea    rsi,[rip+0x6f28]        # 11438 <_IO_stdin_used+0x438>
    a510:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a517:	e8 64 bb ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    a51c:	eb 00                	jmp    a51e <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x21e>
    a51e:	48 8d 85 0f ff ff ff 	lea    rax,[rbp-0xf1]
    a525:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    for(std::size_t i = 0; i < buffer.length(); i++)
    a52c:	48 c7 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],0x0
    a533:	00 00 00 00 
    a537:	48 8b 85 b8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x148]
    a53e:	48 89 85 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rax
    a545:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a54c:	e8 0f bb ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a551:	48 89 c1             	mov    rcx,rax
    a554:	48 8b 85 80 fe ff ff 	mov    rax,QWORD PTR [rbp-0x180]
    a55b:	48 39 c8             	cmp    rax,rcx
    a55e:	0f 83 0e 01 00 00    	jae    a672 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x372>
        if(buffer[i] == '\n')
    a564:	48 8b b5 b8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x148]
    a56b:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a572:	e8 99 e7 ff ff       	call   8d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    a577:	48 89 85 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rax
    a57e:	eb 00                	jmp    a580 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x280>
    a580:	48 8b 85 78 fe ff ff 	mov    rax,QWORD PTR [rbp-0x188]
    a587:	0f be 00             	movsx  eax,BYTE PTR [rax]
    a58a:	83 f8 0a             	cmp    eax,0xa
    a58d:	0f 85 90 00 00 00    	jne    a623 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x323>
            if(line.length() > 0)
    a593:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a59a:	e8 c1 ba ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a59f:	48 83 f8 00          	cmp    rax,0x0
    a5a3:	76 7c                	jbe    a621 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x321>
    a5a5:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a5ac:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
                lines.emplace_back(line);
    a5b3:	e8 38 bf ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a5b8:	eb 00                	jmp    a5ba <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ba>
                line = "";    
    a5ba:	48 8d 35 77 6e 00 00 	lea    rsi,[rip+0x6e77]        # 11438 <_IO_stdin_used+0x438>
    a5c1:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a5c8:	e8 a3 bf ff ff       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    a5cd:	eb 00                	jmp    a5cf <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2cf>
            }
    a5cf:	eb 50                	jmp    a621 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x321>
    a5d1:	f3 0f 1e fa          	endbr64
    a5d5:	48 89 c1             	mov    rcx,rax
}
    a5d8:	89 d0                	mov    eax,edx
    a5da:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a5e1:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a5e7:	48 8d 85 0f ff ff ff 	lea    rax,[rbp-0xf1]
    a5ee:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    std::string line = "";
    a5f5:	e9 08 01 00 00       	jmp    a702 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x402>
    a5fa:	f3 0f 1e fa          	endbr64
    a5fe:	48 89 c1             	mov    rcx,rax
}
    a601:	89 d0                	mov    eax,edx
    a603:	48 89 8d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rcx
    a60a:	89 85 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],eax
    a610:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a617:	e8 14 bb ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a61c:	e9 e1 00 00 00       	jmp    a702 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x402>
        }
    a621:	eb 36                	jmp    a659 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x359>
            line += buffer[i];
    a623:	48 8b b5 b8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x148]
    a62a:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a631:	e8 da e6 ff ff       	call   8d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    a636:	48 89 85 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rax
    a63d:	eb 00                	jmp    a63f <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x33f>
    a63f:	48 8b 85 70 fe ff ff 	mov    rax,QWORD PTR [rbp-0x190]
    a646:	0f be 30             	movsx  esi,BYTE PTR [rax]
    a649:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a650:	e8 4b bf ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    a655:	eb 00                	jmp    a657 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x357>
    a657:	eb 00                	jmp    a659 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x359>
    }
    a659:	eb 00                	jmp    a65b <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x35b>
    for(std::size_t i = 0; i < buffer.length(); i++)
    a65b:	48 8b 85 b8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x148]
    a662:	48 83 c0 01          	add    rax,0x1
    a666:	48 89 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],rax
    a66d:	e9 c5 fe ff ff       	jmp    a537 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x237>
    if(line.length() > 0)
    a672:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
    a679:	e8 e2 b9 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a67e:	48 83 f8 00          	cmp    rax,0x0
    a682:	76 17                	jbe    a69b <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x39b>
    a684:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a68b:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
        lines.emplace_back(line);
    a692:	e8 59 be ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    a697:	eb 00                	jmp    a699 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x399>
    }
    a699:	eb 00                	jmp    a69b <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x39b>
    a69b:	48 8b 95 b0 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x150]
    parser.parse(terminal_io, current_dir, lines, 0);
    a6a2:	48 89 d7             	mov    rdi,rdx
    a6a5:	48 83 c7 60          	add    rdi,0x60
    a6a9:	48 89 d6             	mov    rsi,rdx
    a6ac:	48 83 c6 20          	add    rsi,0x20
    a6b0:	31 c0                	xor    eax,eax
    a6b2:	41 89 c0             	mov    r8d,eax
    a6b5:	48 8d 8d 10 ff ff ff 	lea    rcx,[rbp-0xf0]
    a6bc:	e8 bf 10 00 00       	call   b780 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>
    a6c1:	eb 00                	jmp    a6c3 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c3>
    a6c3:	48 8d bd 28 ff ff ff 	lea    rdi,[rbp-0xd8]
}
    a6ca:	e8 61 ba ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a6cf:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a6d6:	e8 05 bf ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a6db:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a6e2:	e8 49 ba ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a6e7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a6ee:	00 00 
    a6f0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a6f4:	48 39 c8             	cmp    rax,rcx
    a6f7:	75 4d                	jne    a746 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    a6f9:	48 81 c4 a0 01 00 00 	add    rsp,0x1a0
    a700:	5d                   	pop    rbp
    a701:	c3                   	ret
    a702:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    a709:	e8 d2 be ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    a70e:	48 8d bd 48 ff ff ff 	lea    rdi,[rbp-0xb8]
    a715:	e8 16 ba ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a71a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    a721:	48 89 85 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rax
    a728:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a72f:	00 00 
    a731:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a735:	48 39 c8             	cmp    rax,rcx
    a738:	75 0c                	jne    a746 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    a73a:	48 8b bd 68 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x198]
    a741:	e8 1a 9d ff ff       	call   4460 <_Unwind_Resume@plt>
    a746:	e8 65 9e ff ff       	call   45b0 <__stack_chk_fail@plt>
    a74b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a750 <_ZN13VarelseParserD2Ev>:
#include <flapjack_io.h>
#include <terminal_streams.h>

#define NUM_REGISTERS 10

class VarelseParser
    a750:	f3 0f 1e fa          	endbr64
    a754:	55                   	push   rbp
    a755:	48 89 e5             	mov    rbp,rsp
    a758:	48 83 ec 10          	sub    rsp,0x10
    a75c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a760:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    a764:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a768:	48 83 c7 70          	add    rdi,0x70
    a76c:	e8 0f 00 00 00       	call   a780 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>
    a771:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a775:	e8 56 00 00 00       	call   a7d0 <_ZN14TerminalStreamD2Ev>
    a77a:	48 83 c4 10          	add    rsp,0x10
    a77e:	5d                   	pop    rbp
    a77f:	c3                   	ret

000000000000a780 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>:
   *
   *  @tparam  Tp  Type of element. Required to be a complete type.
   *  @tparam  Nm  Number of elements.
  */
  template<typename _Tp, std::size_t _Nm>
    struct array
    a780:	f3 0f 1e fa          	endbr64
    a784:	55                   	push   rbp
    a785:	48 89 e5             	mov    rbp,rsp
    a788:	48 83 ec 20          	sub    rsp,0x20
    a78c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a790:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a794:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    a798:	48 05 40 01 00 00    	add    rax,0x140
    a79e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a7a2:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a7a6:	48 83 c7 e0          	add    rdi,0xffffffffffffffe0
    a7aa:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    a7ae:	e8 7d b9 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a7b3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    a7b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a7bb:	48 39 c8             	cmp    rax,rcx
    a7be:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a7c2:	75 de                	jne    a7a2 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev+0x22>
    a7c4:	48 83 c4 20          	add    rsp,0x20
    a7c8:	5d                   	pop    rbp
    a7c9:	c3                   	ret
    a7ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a7d0 <_ZN14TerminalStreamD2Ev>:
#ifndef TERMINAL_STREAMS_H
#define TERMINAL_STREAMS_H

#include <string>

struct TerminalStream
    a7d0:	f3 0f 1e fa          	endbr64
    a7d4:	55                   	push   rbp
    a7d5:	48 89 e5             	mov    rbp,rsp
    a7d8:	48 83 ec 10          	sub    rsp,0x10
    a7dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7e0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    a7e4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    a7e8:	48 83 c7 48          	add    rdi,0x48
    a7ec:	e8 3f b9 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a7f1:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a7f5:	48 83 c7 20          	add    rdi,0x20
    a7f9:	e8 32 b9 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a7fe:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    a802:	e8 29 b9 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a807:	48 83 c4 10          	add    rsp,0x10
    a80b:	5d                   	pop    rbp
    a80c:	c3                   	ret
    a80d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a810 <main>:
#include <terminal.h>
#include <cstdio>

int main(int argc, const char* argv[])
{
    a810:	f3 0f 1e fa          	endbr64
    a814:	55                   	push   rbp
    a815:	48 89 e5             	mov    rbp,rsp
    a818:	48 81 ec a0 02 00 00 	sub    rsp,0x2a0
    a81f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a826:	00 00 
    a828:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a82c:	c7 85 84 fd ff ff 00 	mov    DWORD PTR [rbp-0x27c],0x0
    a833:	00 00 00 
    a836:	89 bd 80 fd ff ff    	mov    DWORD PTR [rbp-0x280],edi
    a83c:	48 89 b5 78 fd ff ff 	mov    QWORD PTR [rbp-0x288],rsi
    if(argc == 0)
    a843:	83 bd 80 fd ff ff 00 	cmp    DWORD PTR [rbp-0x280],0x0
    a84a:	75 1a                	jne    a866 <main+0x56>
    {
        std::fprintf(stderr, "Usage: flapjack [file]\r\nNo arguments were provided when the first should be this executable\r\n");
    a84c:	48 8b 05 7d c7 00 00 	mov    rax,QWORD PTR [rip+0xc77d]        # 16fd0 <stderr@GLIBC_2.2.5>
    a853:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    a856:	48 8d 35 0d 6b 00 00 	lea    rsi,[rip+0x6b0d]        # 1136a <_IO_stdin_used+0x36a>
    a85d:	b0 00                	mov    al,0x0
    a85f:	e8 4c 9e ff ff       	call   46b0 <fprintf@plt>
    }
    a864:	eb 2d                	jmp    a893 <main+0x83>
    else if(argc > 2)
    a866:	83 bd 80 fd ff ff 02 	cmp    DWORD PTR [rbp-0x280],0x2
    a86d:	7e 22                	jle    a891 <main+0x81>
    {
        std::fprintf(stderr, "Usage: %s [file]\r\n", argv[0]);
    a86f:	48 8b 05 5a c7 00 00 	mov    rax,QWORD PTR [rip+0xc75a]        # 16fd0 <stderr@GLIBC_2.2.5>
    a876:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    a879:	48 8b 85 78 fd ff ff 	mov    rax,QWORD PTR [rbp-0x288]
    a880:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    a883:	48 8d 35 3e 6b 00 00 	lea    rsi,[rip+0x6b3e]        # 113c8 <_IO_stdin_used+0x3c8>
    a88a:	b0 00                	mov    al,0x0
    a88c:	e8 1f 9e ff ff       	call   46b0 <fprintf@plt>
    a891:	eb 00                	jmp    a893 <main+0x83>
    }
    Terminal terminal;
    a893:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    a89a:	e8 21 f8 ff ff       	call   a0c0 <_ZN8TerminalC1Ev>
    if(argc == 1)
    a89f:	83 bd 80 fd ff ff 01 	cmp    DWORD PTR [rbp-0x280],0x1
    a8a6:	75 2e                	jne    a8d6 <main+0xc6>
    a8a8:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    {
        terminal.run_cmdline();
    a8af:	e8 4c f9 ff ff       	call   a200 <_ZN8Terminal11run_cmdlineEv>
    a8b4:	eb 00                	jmp    a8b6 <main+0xa6>
    }
    a8b6:	e9 cb 00 00 00       	jmp    a986 <main+0x176>
    a8bb:	f3 0f 1e fa          	endbr64
    a8bf:	48 89 c1             	mov    rcx,rax
    else
    {
        terminal.run_file(argv[1]);
    }
    return 0;
}
    a8c2:	89 d0                	mov    eax,edx
    a8c4:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a8cb:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
    a8d1:	e9 f3 00 00 00       	jmp    a9c9 <main+0x1b9>
        terminal.run_file(argv[1]);
    a8d6:	48 8b 85 78 fd ff ff 	mov    rax,QWORD PTR [rbp-0x288]
    a8dd:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    a8e1:	48 8d 95 af fd ff ff 	lea    rdx,[rbp-0x251]
    a8e8:	48 89 95 88 fd ff ff 	mov    QWORD PTR [rbp-0x278],rdx
    a8ef:	48 8b 85 88 fd ff ff 	mov    rax,QWORD PTR [rbp-0x278]
    a8f6:	48 89 85 a0 fd ff ff 	mov    QWORD PTR [rbp-0x260],rax
    a8fd:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a904:	e8 77 b7 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    a909:	eb 00                	jmp    a90b <main+0xfb>
    a90b:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    a912:	48 8d b5 b0 fd ff ff 	lea    rsi,[rbp-0x250]
    a919:	e8 e2 f9 ff ff       	call   a300 <_ZN8Terminal8run_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    a91e:	eb 00                	jmp    a920 <main+0x110>
    a920:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a927:	e8 04 b8 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a92c:	48 8d 85 af fd ff ff 	lea    rax,[rbp-0x251]
    a933:	48 89 85 90 fd ff ff 	mov    QWORD PTR [rbp-0x270],rax
    a93a:	eb 4a                	jmp    a986 <main+0x176>
    a93c:	f3 0f 1e fa          	endbr64
    a940:	48 89 c1             	mov    rcx,rax
}
    a943:	89 d0                	mov    eax,edx
    a945:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a94c:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
    a952:	eb 22                	jmp    a976 <main+0x166>
    a954:	f3 0f 1e fa          	endbr64
    a958:	48 89 c1             	mov    rcx,rax
    a95b:	89 d0                	mov    eax,edx
    a95d:	48 89 8d 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rcx
    a964:	89 85 6c fd ff ff    	mov    DWORD PTR [rbp-0x294],eax
        terminal.run_file(argv[1]);
    a96a:	48 8d bd b0 fd ff ff 	lea    rdi,[rbp-0x250]
    a971:	e8 ba b7 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    a976:	48 8d 85 af fd ff ff 	lea    rax,[rbp-0x251]
    a97d:	48 89 85 98 fd ff ff 	mov    QWORD PTR [rbp-0x268],rax
    a984:	eb 43                	jmp    a9c9 <main+0x1b9>
    return 0;
    a986:	c7 85 84 fd ff ff 00 	mov    DWORD PTR [rbp-0x27c],0x0
    a98d:	00 00 00 
    a990:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
}
    a997:	e8 74 00 00 00       	call   aa10 <_ZN8TerminalD2Ev>
    a99c:	8b 85 84 fd ff ff    	mov    eax,DWORD PTR [rbp-0x27c]
    a9a2:	89 85 68 fd ff ff    	mov    DWORD PTR [rbp-0x298],eax
    a9a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9af:	00 00 
    a9b1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a9b5:	48 39 c8             	cmp    rax,rcx
    a9b8:	75 47                	jne    aa01 <main+0x1f1>
    a9ba:	8b 85 68 fd ff ff    	mov    eax,DWORD PTR [rbp-0x298]
    a9c0:	48 81 c4 a0 02 00 00 	add    rsp,0x2a0
    a9c7:	5d                   	pop    rbp
    a9c8:	c3                   	ret
    a9c9:	48 8d bd d0 fd ff ff 	lea    rdi,[rbp-0x230]
    a9d0:	e8 3b 00 00 00       	call   aa10 <_ZN8TerminalD2Ev>
    a9d5:	48 8b 85 70 fd ff ff 	mov    rax,QWORD PTR [rbp-0x290]
    a9dc:	48 89 85 60 fd ff ff 	mov    QWORD PTR [rbp-0x2a0],rax
    a9e3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9ea:	00 00 
    a9ec:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a9f0:	48 39 c8             	cmp    rax,rcx
    a9f3:	75 0c                	jne    aa01 <main+0x1f1>
    a9f5:	48 8b bd 60 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2a0]
    a9fc:	e8 5f 9a ff ff       	call   4460 <_Unwind_Resume@plt>
    aa01:	e8 aa 9b ff ff       	call   45b0 <__stack_chk_fail@plt>
    aa06:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    aa0d:	00 00 00 

000000000000aa10 <_ZN8TerminalD2Ev>:
#include <string>
#include <flapjack_io.h>
#include <flapjack_parse.h>
#include <vector>

class Terminal
    aa10:	f3 0f 1e fa          	endbr64
    aa14:	55                   	push   rbp
    aa15:	48 89 e5             	mov    rbp,rsp
    aa18:	48 83 ec 10          	sub    rsp,0x10
    aa1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    aa20:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    aa24:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    aa28:	48 81 c7 10 02 00 00 	add    rdi,0x210
    aa2f:	e8 ac bb ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    aa34:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa38:	48 83 c7 60          	add    rdi,0x60
    aa3c:	e8 0f fd ff ff       	call   a750 <_ZN13VarelseParserD2Ev>
    aa41:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa45:	48 83 c7 20          	add    rdi,0x20
    aa49:	e8 d2 e6 ff ff       	call   9120 <_ZN10TerminalIOD1Ev>
    aa4e:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    aa52:	e8 d9 b6 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    aa57:	48 83 c4 10          	add    rsp,0x10
    aa5b:	5d                   	pop    rbp
    aa5c:	c3                   	ret
    aa5d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000aa60 <_ZN13VarelseParserC1Ev>:
            .stdout_path = "",
            .stdout_append = false,
            .stderr_path = "",
            .stderr_append = false,
        })
{
    aa60:	f3 0f 1e fa          	endbr64
    aa64:	55                   	push   rbp
    aa65:	48 89 e5             	mov    rbp,rsp
    aa68:	48 81 ec d0 00 00 00 	sub    rsp,0xd0
    aa6f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa76:	00 00 
    aa78:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aa7c:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    aa80:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    aa84:	48 89 bd 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rdi
    aa8b:	48 89 f8             	mov    rax,rdi
    aa8e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
VarelseParser::VarelseParser() : streams(
    aa95:	48 89 f8             	mov    rax,rdi
    aa98:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    aa9f:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    aaa3:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    aaa7:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aaab:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
            .stdin_path = "",
    aaaf:	48 8d 35 82 69 00 00 	lea    rsi,[rip+0x6982]        # 11438 <_IO_stdin_used+0x438>
    aab6:	e8 c5 b5 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    aabb:	eb 00                	jmp    aabd <_ZN13VarelseParserC1Ev+0x5d>
    aabd:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    aac4:	c6 85 72 ff ff ff 01 	mov    BYTE PTR [rbp-0x8e],0x1
        {
    aacb:	48 83 c7 20          	add    rdi,0x20
    aacf:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
    aad6:	48 8d 55 f6          	lea    rdx,[rbp-0xa]
    aada:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    aade:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    aae2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
            .stdout_path = "",
    aae6:	48 8d 35 4b 69 00 00 	lea    rsi,[rip+0x694b]        # 11438 <_IO_stdin_used+0x438>
    aaed:	e8 8e b5 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    aaf2:	eb 00                	jmp    aaf4 <_ZN13VarelseParserC1Ev+0x94>
    aaf4:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    aafb:	c6 85 73 ff ff ff 01 	mov    BYTE PTR [rbp-0x8d],0x1
        {
    ab02:	c6 47 40 00          	mov    BYTE PTR [rdi+0x40],0x0
    ab06:	48 83 c7 48          	add    rdi,0x48
    ab0a:	48 8d 55 f5          	lea    rdx,[rbp-0xb]
    ab0e:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    ab12:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    ab16:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
            .stderr_path = "",
    ab1a:	48 8d 35 17 69 00 00 	lea    rsi,[rip+0x6917]        # 11438 <_IO_stdin_used+0x438>
    ab21:	e8 5a b5 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    ab26:	eb 00                	jmp    ab28 <_ZN13VarelseParserC1Ev+0xc8>
    ab28:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ab2f:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
        {
    ab36:	c6 40 68 00          	mov    BYTE PTR [rax+0x68],0x0
    ab3a:	c6 85 73 ff ff ff 00 	mov    BYTE PTR [rbp-0x8d],0x0
    ab41:	c6 85 72 ff ff ff 00 	mov    BYTE PTR [rbp-0x8e],0x0
    ab48:	48 8d 45 f5          	lea    rax,[rbp-0xb]
    ab4c:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    ab50:	48 8d 45 f6          	lea    rax,[rbp-0xa]
    ab54:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    ab58:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    ab5c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
VarelseParser::VarelseParser() : streams(
    ab60:	48 83 c7 70          	add    rdi,0x70
    ab64:	48 89 bd 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rdi
    ab6b:	e8 10 1e 00 00       	call   c980 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev>
    for(std::size_t i = 0; i < registers.size(); i++)
    ab70:	48 c7 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],0x0
    ab77:	00 00 00 00 
    ab7b:	48 8b 8d 58 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa8]
    ab82:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    ab89:	48 83 c1 70          	add    rcx,0x70
    ab8d:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    ab91:	48 83 f8 0a          	cmp    rax,0xa
    ab95:	0f 83 00 01 00 00    	jae    ac9b <_ZN13VarelseParserC1Ev+0x23b>
    ab9b:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    {
        registers[i] = "";
    aba2:	48 83 c7 70          	add    rdi,0x70
    aba6:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    abad:	e8 1e 1e 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    abb2:	48 89 c7             	mov    rdi,rax
    abb5:	48 8d 35 7c 68 00 00 	lea    rsi,[rip+0x687c]        # 11438 <_IO_stdin_used+0x438>
    abbc:	e8 af b9 ff ff       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    abc1:	eb 00                	jmp    abc3 <_ZN13VarelseParserC1Ev+0x163>
    }
    abc3:	eb 00                	jmp    abc5 <_ZN13VarelseParserC1Ev+0x165>
    for(std::size_t i = 0; i < registers.size(); i++)
    abc5:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    abcc:	48 83 c0 01          	add    rax,0x1
    abd0:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    abd7:	eb a2                	jmp    ab7b <_ZN13VarelseParserC1Ev+0x11b>
    abd9:	f3 0f 1e fa          	endbr64
    abdd:	48 89 c1             	mov    rcx,rax
}
    abe0:	89 d0                	mov    eax,edx
    abe2:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    abe9:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    abef:	eb 70                	jmp    ac61 <_ZN13VarelseParserC1Ev+0x201>
    abf1:	f3 0f 1e fa          	endbr64
    abf5:	48 89 c1             	mov    rcx,rax
    abf8:	89 d0                	mov    eax,edx
    abfa:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac01:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac07:	eb 37                	jmp    ac40 <_ZN13VarelseParserC1Ev+0x1e0>
    ac09:	f3 0f 1e fa          	endbr64
    ac0d:	48 89 c1             	mov    rcx,rax
    ac10:	89 d0                	mov    eax,edx
    ac12:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac19:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac1f:	48 8d 45 f5          	lea    rax,[rbp-0xb]
    ac23:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
        (TerminalStream)
    ac27:	f6 85 73 ff ff ff 01 	test   BYTE PTR [rbp-0x8d],0x1
    ac2e:	75 02                	jne    ac32 <_ZN13VarelseParserC1Ev+0x1d2>
    ac30:	eb 0c                	jmp    ac3e <_ZN13VarelseParserC1Ev+0x1de>
    ac32:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    ac39:	e8 f2 b4 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    ac3e:	eb 00                	jmp    ac40 <_ZN13VarelseParserC1Ev+0x1e0>
    ac40:	48 8d 45 f6          	lea    rax,[rbp-0xa]
    ac44:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ac48:	f6 85 72 ff ff ff 01 	test   BYTE PTR [rbp-0x8e],0x1
    ac4f:	75 02                	jne    ac53 <_ZN13VarelseParserC1Ev+0x1f3>
    ac51:	eb 0c                	jmp    ac5f <_ZN13VarelseParserC1Ev+0x1ff>
    ac53:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    ac5a:	e8 d1 b4 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    ac5f:	eb 00                	jmp    ac61 <_ZN13VarelseParserC1Ev+0x201>
    ac61:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    ac65:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    ac69:	eb 4b                	jmp    acb6 <_ZN13VarelseParserC1Ev+0x256>
    ac6b:	f3 0f 1e fa          	endbr64
    ac6f:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    ac76:	48 89 c1             	mov    rcx,rax
}
    ac79:	89 d0                	mov    eax,edx
    ac7b:	48 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rcx
    ac82:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
    ac88:	e8 f3 fa ff ff       	call   a780 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EED2Ev>
    ac8d:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    ac94:	e8 37 fb ff ff       	call   a7d0 <_ZN14TerminalStreamD2Ev>
    ac99:	eb 1b                	jmp    acb6 <_ZN13VarelseParserC1Ev+0x256>
    ac9b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aca2:	00 00 
    aca4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    aca8:	48 39 c8             	cmp    rax,rcx
    acab:	75 35                	jne    ace2 <_ZN13VarelseParserC1Ev+0x282>
    acad:	48 81 c4 d0 00 00 00 	add    rsp,0xd0
    acb4:	5d                   	pop    rbp
    acb5:	c3                   	ret
        (TerminalStream)
    acb6:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    acbd:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    acc4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    accb:	00 00 
    accd:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    acd1:	48 39 c8             	cmp    rax,rcx
    acd4:	75 0c                	jne    ace2 <_ZN13VarelseParserC1Ev+0x282>
    acd6:	48 8b bd 38 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc8]
    acdd:	e8 7e 97 ff ff       	call   4460 <_Unwind_Resume@plt>
    ace2:	e8 c9 98 ff ff       	call   45b0 <__stack_chk_fail@plt>
    ace7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    acee:	00 00 

000000000000acf0 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    }
    return res;
}

std::vector<std::string> VarelseParser::split_line(const std::string& text)
{
    acf0:	f3 0f 1e fa          	endbr64
    acf4:	55                   	push   rbp
    acf5:	48 89 e5             	mov    rbp,rsp
    acf8:	48 81 ec b0 00 00 00 	sub    rsp,0xb0
    acff:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    ad06:	48 89 f8             	mov    rax,rdi
    ad09:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    ad10:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad17:	00 00 
    ad19:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad1d:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    ad21:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    ad25:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    std::vector<std::string> res;
    ad29:	c6 45 97 00          	mov    BYTE PTR [rbp-0x69],0x0
    ad2d:	e8 0e b7 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    ad32:	48 8d 55 d7          	lea    rdx,[rbp-0x29]
    ad36:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
    ad3a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ad3e:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    std::string word = "";
    ad42:	48 8d 35 ef 66 00 00 	lea    rsi,[rip+0x66ef]        # 11438 <_IO_stdin_used+0x438>
    ad49:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ad4d:	e8 2e b3 ff ff       	call   6080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_>
    ad52:	eb 00                	jmp    ad54 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x64>
    ad54:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    ad58:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    bool in_quotes = false;
    ad5c:	c6 45 83 00          	mov    BYTE PTR [rbp-0x7d],0x0
    char quote = 0;
    ad60:	c6 45 82 00          	mov    BYTE PTR [rbp-0x7e],0x0
    bool escape = false;
    ad64:	c6 45 81 00          	mov    BYTE PTR [rbp-0x7f],0x0
    for(size_t i = 0; i < text.length(); i++)
    ad68:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    ad6f:	00 00 00 00 
    ad73:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ad7a:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    ad81:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    ad85:	e8 d6 b2 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    ad8a:	48 89 c1             	mov    rcx,rax
    ad8d:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    ad94:	48 39 c8             	cmp    rax,rcx
    ad97:	0f 83 ba 02 00 00    	jae    b057 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x367>
    {
       if(in_quotes)
    ad9d:	f6 45 83 01          	test   BYTE PTR [rbp-0x7d],0x1
    ada1:	0f 84 c6 01 00 00    	je     af6d <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x27d>
       {
           if(escape)
    ada7:	f6 45 81 01          	test   BYTE PTR [rbp-0x7f],0x1
    adab:	0f 84 50 01 00 00    	je     af01 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x211>
           {
               switch(text[i])
    adb1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    adb5:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    adbc:	e8 8f b8 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    adc1:	0f be 00             	movsx  eax,BYTE PTR [rax]
    adc4:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
    adca:	83 e8 22             	sub    eax,0x22
    adcd:	0f 84 d4 00 00 00    	je     aea7 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b7>
    add3:	eb 00                	jmp    add5 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe5>
    add5:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    addb:	83 e8 27             	sub    eax,0x27
    adde:	0f 84 d5 00 00 00    	je     aeb9 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c9>
    ade4:	eb 00                	jmp    ade6 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf6>
    ade6:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    adec:	83 e8 5c             	sub    eax,0x5c
    adef:	0f 84 a0 00 00 00    	je     ae95 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a5>
    adf5:	eb 00                	jmp    adf7 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x107>
    adf7:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    adfd:	83 e8 6e             	sub    eax,0x6e
    ae00:	74 3c                	je     ae3e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14e>
    ae02:	eb 00                	jmp    ae04 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x114>
    ae04:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae0a:	83 e8 72             	sub    eax,0x72
    ae0d:	74 62                	je     ae71 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x181>
    ae0f:	eb 00                	jmp    ae11 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x121>
    ae11:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    ae17:	83 e8 74             	sub    eax,0x74
    ae1a:	74 67                	je     ae83 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x193>
    ae1c:	e9 aa 00 00 00       	jmp    aecb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1db>
    ae21:	f3 0f 1e fa          	endbr64
    ae25:	48 89 c1             	mov    rcx,rax
    if(word.length() > 0)
    {
        res.emplace_back(word);
    }
    return res;
}
    ae28:	89 d0                	mov    eax,edx
    ae2a:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    ae2e:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    ae31:	48 8d 45 d7          	lea    rax,[rbp-0x29]
    ae35:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    std::string word = "";
    ae39:	e9 7d 02 00 00       	jmp    b0bb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3cb>
    ae3e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae42:	be 0a 00 00 00       	mov    esi,0xa
                       word += '\n';
    ae47:	e8 54 b7 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    ae4c:	eb 00                	jmp    ae4e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15e>
                       break;
    ae4e:	e9 a8 00 00 00       	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    ae53:	f3 0f 1e fa          	endbr64
    ae57:	48 89 c1             	mov    rcx,rax
}
    ae5a:	89 d0                	mov    eax,edx
    ae5c:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    ae60:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    ae63:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae67:	e8 c4 b2 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    ae6c:	e9 4a 02 00 00       	jmp    b0bb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3cb>
    ae71:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae75:	be 0d 00 00 00       	mov    esi,0xd
                       word += '\r';
    ae7a:	e8 21 b7 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    ae7f:	eb 00                	jmp    ae81 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x191>
                       break;
    ae81:	eb 78                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    ae83:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae87:	be 09 00 00 00       	mov    esi,0x9
                       word += '\t';
    ae8c:	e8 0f b7 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    ae91:	eb 00                	jmp    ae93 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a3>
                       break;
    ae93:	eb 66                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    ae95:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae99:	be 5c 00 00 00       	mov    esi,0x5c
                       word += '\\';
    ae9e:	e8 fd b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aea3:	eb 00                	jmp    aea5 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b5>
                       break;
    aea5:	eb 54                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aea7:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aeab:	be 22 00 00 00       	mov    esi,0x22
                       word += '\"';
    aeb0:	e8 eb b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aeb5:	eb 00                	jmp    aeb7 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c7>
                       break;
    aeb7:	eb 42                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aeb9:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aebd:	be 27 00 00 00       	mov    esi,0x27
                       word += '\'';
    aec2:	e8 d9 b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aec7:	eb 00                	jmp    aec9 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1d9>
                       break;
    aec9:	eb 30                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
    aecb:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aecf:	be 5c 00 00 00       	mov    esi,0x5c
                       word += '\\';
    aed4:	e8 c7 b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aed9:	eb 00                	jmp    aedb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
                       word += text[i];
    aedb:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    aedf:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    aee6:	e8 65 b7 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    aeeb:	0f be 30             	movsx  esi,BYTE PTR [rax]
    aeee:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    aef2:	e8 a9 b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    aef7:	eb 00                	jmp    aef9 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x209>
                       break;
    aef9:	eb 00                	jmp    aefb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20b>
               escape = false;
    aefb:	c6 45 81 00          	mov    BYTE PTR [rbp-0x7f],0x0
           }
    aeff:	eb 67                	jmp    af68 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x278>
               if(text[i] == quote)
    af01:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af05:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af0c:	e8 3f b7 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af11:	0f be 00             	movsx  eax,BYTE PTR [rax]
    af14:	0f be 4d 82          	movsx  ecx,BYTE PTR [rbp-0x7e]
    af18:	39 c8                	cmp    eax,ecx
    af1a:	75 0a                	jne    af26 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x236>
                   quote = 0;
    af1c:	c6 45 82 00          	mov    BYTE PTR [rbp-0x7e],0x0
                   in_quotes = false;
    af20:	c6 45 83 00          	mov    BYTE PTR [rbp-0x7d],0x0
               }
    af24:	eb 40                	jmp    af66 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x276>
               else if(text[i] == '\\')
    af26:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af2a:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af31:	e8 1a b7 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af36:	0f be 00             	movsx  eax,BYTE PTR [rax]
    af39:	83 f8 5c             	cmp    eax,0x5c
    af3c:	75 06                	jne    af44 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x254>
                   escape = true;
    af3e:	c6 45 81 01          	mov    BYTE PTR [rbp-0x7f],0x1
               }
    af42:	eb 20                	jmp    af64 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
                   word += text[i];
    af44:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af48:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af4f:	e8 fc b6 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af54:	0f be 30             	movsx  esi,BYTE PTR [rax]
    af57:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    af5b:	e8 40 b6 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    af60:	eb 00                	jmp    af62 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x272>
    af62:	eb 00                	jmp    af64 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
    af64:	eb 00                	jmp    af66 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x276>
    af66:	eb 00                	jmp    af68 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x278>
       }
    af68:	e9 d1 00 00 00       	jmp    b03e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34e>
           switch(text[i])
    af6d:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    af71:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    af78:	e8 d3 b6 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    af7d:	0f be 00             	movsx  eax,BYTE PTR [rax]
    af80:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
    af86:	83 c0 f7             	add    eax,0xfffffff7
    af89:	83 e8 02             	sub    eax,0x2
    af8c:	0f 82 88 00 00 00    	jb     b01a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32a>
    af92:	eb 00                	jmp    af94 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a4>
    af94:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    af9a:	83 e8 0d             	sub    eax,0xd
    af9d:	74 7b                	je     b01a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32a>
    af9f:	eb 00                	jmp    afa1 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2b1>
    afa1:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    afa7:	83 e8 20             	sub    eax,0x20
    afaa:	74 37                	je     afe3 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2f3>
    afac:	eb 00                	jmp    afae <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2be>
    afae:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    afb4:	83 e8 22             	sub    eax,0x22
    afb7:	74 0f                	je     afc8 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d8>
    afb9:	eb 00                	jmp    afbb <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2cb>
    afbb:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
    afc1:	83 e8 27             	sub    eax,0x27
    afc4:	75 56                	jne    b01c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32c>
    afc6:	eb 00                	jmp    afc8 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d8>
                   quote = text[i];
    afc8:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    afcc:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    afd3:	e8 78 b6 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    afd8:	8a 00                	mov    al,BYTE PTR [rax]
    afda:	88 45 82             	mov    BYTE PTR [rbp-0x7e],al
                   in_quotes = true;
    afdd:	c6 45 83 01          	mov    BYTE PTR [rbp-0x7d],0x1
                   break;
    afe1:	eb 59                	jmp    b03c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   if(word.length() > 0)
    afe3:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    afe7:	e8 74 b0 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    afec:	48 83 f8 00          	cmp    rax,0x0
    aff0:	76 26                	jbe    b018 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
    aff2:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    aff9:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
                       res.emplace_back(word);
    affd:	e8 ee b4 ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b002:	eb 00                	jmp    b004 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x314>
                       word = "";
    b004:	48 8d 35 2d 64 00 00 	lea    rsi,[rip+0x642d]        # 11438 <_IO_stdin_used+0x438>
    b00b:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b00f:	e8 5c b5 ff ff       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    b014:	eb 00                	jmp    b016 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x326>
                   }
    b016:	eb 00                	jmp    b018 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
                   break;
    b018:	eb 22                	jmp    b03c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   break;
    b01a:	eb 20                	jmp    b03c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
                   word += text[i];
    b01c:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    b020:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b027:	e8 24 b6 ff ff       	call   6650 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    b02c:	0f be 30             	movsx  esi,BYTE PTR [rax]
    b02f:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b033:	e8 68 b5 ff ff       	call   65a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
    b038:	eb 00                	jmp    b03a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34a>
                   break;
    b03a:	eb 00                	jmp    b03c <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34c>
    b03c:	eb 00                	jmp    b03e <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34e>
    }
    b03e:	eb 00                	jmp    b040 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x350>
    for(size_t i = 0; i < text.length(); i++)
    b040:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b047:	48 83 c0 01          	add    rax,0x1
    b04b:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    b052:	e9 1c fd ff ff       	jmp    ad73 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x83>
    if(word.length() > 0)
    b057:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b05b:	e8 00 b0 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b060:	48 83 f8 00          	cmp    rax,0x0
    b064:	76 14                	jbe    b07a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38a>
    b066:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b06d:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
        res.emplace_back(word);
    b071:	e8 7a b4 ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b076:	eb 00                	jmp    b078 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x388>
    }
    b078:	eb 00                	jmp    b07a <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38a>
    return res;
    b07a:	c6 45 97 01          	mov    BYTE PTR [rbp-0x69],0x1
}
    b07e:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b082:	e8 a9 b0 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b087:	f6 45 97 01          	test   BYTE PTR [rbp-0x69],0x1
    b08b:	75 0c                	jne    b099 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3a9>
    b08d:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b094:	e8 47 b5 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b099:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b0a0:	00 00 
    b0a2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b0a6:	48 39 c8             	cmp    rax,rcx
    b0a9:	75 45                	jne    b0f0 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x400>
    b0ab:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    b0b2:	48 81 c4 b0 00 00 00 	add    rsp,0xb0
    b0b9:	5d                   	pop    rbp
    b0ba:	c3                   	ret
    b0bb:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    b0c2:	e8 19 b5 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b0c7:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b0cb:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    b0d2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b0d9:	00 00 
    b0db:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b0df:	48 39 c8             	cmp    rax,rcx
    b0e2:	75 0c                	jne    b0f0 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x400>
    b0e4:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    b0eb:	e8 70 93 ff ff       	call   4460 <_Unwind_Resume@plt>
    b0f0:	e8 bb 94 ff ff       	call   45b0 <__stack_chk_fail@plt>
    b0f5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b0fc:	00 00 00 00 

000000000000b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>:

bool VarelseParser::get_reg_arg(const std::string& index, std::size_t& arg)
{
    b100:	f3 0f 1e fa          	endbr64
    b104:	55                   	push   rbp
    b105:	48 89 e5             	mov    rbp,rsp
    b108:	48 83 ec 40          	sub    rsp,0x40
    b10c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    b110:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    b114:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    try
    {
        arg = parse_index(index);
    b118:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    b11c:	e8 4f 00 00 00       	call   b170 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    b121:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b125:	eb 00                	jmp    b127 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm+0x27>
    b127:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    b12b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b12f:	48 89 08             	mov    QWORD PTR [rax],rcx
        return true;
    b132:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
    b136:	eb 22                	jmp    b15a <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm+0x5a>
    b138:	f3 0f 1e fa          	endbr64
    b13c:	48 89 c1             	mov    rcx,rax
    }
    catch(...)
    {
        return false;
    }
}
    b13f:	89 d0                	mov    eax,edx
    b141:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    b145:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
    }
    b148:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    b14c:	e8 4f 93 ff ff       	call   44a0 <__cxa_begin_catch@plt>
        return false;
    b151:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
    }
    b155:	e8 56 96 ff ff       	call   47b0 <__cxa_end_catch@plt>
}
    b15a:	8a 45 ff             	mov    al,BYTE PTR [rbp-0x1]
    b15d:	24 01                	and    al,0x1
    b15f:	48 83 c4 40          	add    rsp,0x40
    b163:	5d                   	pop    rbp
    b164:	c3                   	ret
    b165:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b16c:	00 00 00 00 

000000000000b170 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
    b170:	55                   	push   rbp
    b171:	48 89 e5             	mov    rbp,rsp
    b174:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    b17b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b182:	00 00 
    b184:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b188:	48 89 bd 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rdi
    if(index.length() == 0)
    b18f:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    b196:	e8 c5 ae ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b19b:	48 83 f8 00          	cmp    rax,0x0
    b19f:	0f 85 09 01 00 00    	jne    b2ae <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x13e>
    b1a5:	c6 85 13 ff ff ff 01 	mov    BYTE PTR [rbp-0xed],0x1
    b1ac:	bf 10 00 00 00       	mov    edi,0x10
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b1b1:	e8 1a 93 ff ff       	call   44d0 <__cxa_allocate_exception@plt>
    b1b6:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
    b1bd:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b1c4:	48 8d 35 6e 62 00 00 	lea    rsi,[rip+0x626e]        # 11439 <_IO_stdin_used+0x439>
    b1cb:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    b1cf:	e8 9c 1d 00 00       	call   cf70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b1d4:	eb 00                	jmp    b1d6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
    b1d6:	48 8d 15 69 62 00 00 	lea    rdx,[rip+0x6269]        # 11446 <_IO_stdin_used+0x446>
    b1dd:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b1e1:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    b1e5:	e8 36 1d 00 00       	call   cf20 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b1ea:	eb 00                	jmp    b1ec <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>
    b1ec:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b1f3:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
    b1f7:	e8 f4 95 ff ff       	call   47f0 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b1fc:	eb 00                	jmp    b1fe <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e>
    b1fe:	c6 85 13 ff ff ff 00 	mov    BYTE PTR [rbp-0xed],0x0
    b205:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b20c:	00 00 
    b20e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b212:	48 39 c8             	cmp    rax,rcx
    b215:	0f 85 f7 03 00 00    	jne    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b21b:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b222:	48 8b 35 c7 bd 00 00 	mov    rsi,QWORD PTR [rip+0xbdc7]        # 16ff0 <_ZTISt16invalid_argument@GLIBCXX_3.4>
    b229:	48 8b 15 b0 bd 00 00 	mov    rdx,QWORD PTR [rip+0xbdb0]        # 16fe0 <_ZNSt16invalid_argumentD1Ev@GLIBCXX_3.4>
    b230:	e8 ab 95 ff ff       	call   47e0 <__cxa_throw@plt>
    b235:	e9 d8 03 00 00       	jmp    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b23a:	f3 0f 1e fa          	endbr64
    b23e:	48 89 c1             	mov    rcx,rax
}
    b241:	89 d0                	mov    eax,edx
    b243:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b24a:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b250:	eb 40                	jmp    b292 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x122>
    b252:	f3 0f 1e fa          	endbr64
    b256:	48 89 c1             	mov    rcx,rax
    b259:	89 d0                	mov    eax,edx
    b25b:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b262:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b268:	eb 1f                	jmp    b289 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x119>
    b26a:	f3 0f 1e fa          	endbr64
    b26e:	48 89 c1             	mov    rcx,rax
    b271:	89 d0                	mov    eax,edx
    b273:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b27a:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b280:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b284:	e8 a7 ae ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b289:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    b28d:	e8 9e ae ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b292:	f6 85 13 ff ff ff 01 	test   BYTE PTR [rbp-0xed],0x1
    b299:	75 02                	jne    b29d <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12d>
    b29b:	eb 0c                	jmp    b2a9 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x139>
    b29d:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
    b2a4:	e8 77 92 ff ff       	call   4520 <__cxa_free_exception@plt>
    b2a9:	e9 38 03 00 00       	jmp    b5e6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
    size_t res = 0;
    b2ae:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
    b2b5:	00 00 00 00 
    for(char c : index)
    b2b9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b2c0:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    b2c7:	48 8b bd 00 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x100]
    b2ce:	e8 9d 1d 00 00       	call   d070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>
    b2d3:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    b2da:	48 8b bd 00 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x100]
    b2e1:	e8 ea 1d 00 00       	call   d0d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>
    b2e6:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b2ed:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b2f4:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
    b2fb:	e8 50 1e 00 00       	call   d150 <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    b300:	34 ff                	xor    al,0xff
    b302:	a8 01                	test   al,0x1
    b304:	75 05                	jne    b30b <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x19b>
    b306:	e9 ab 02 00 00       	jmp    b5b6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x446>
    b30b:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b312:	e8 89 1e 00 00       	call   d1a0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv>
    b317:	8a 00                	mov    al,BYTE PTR [rax]
    b319:	88 85 ff fe ff ff    	mov    BYTE PTR [rbp-0x101],al
        std::size_t next_res = res * 10;
    b31f:	48 6b 85 08 ff ff ff 	imul   rax,QWORD PTR [rbp-0xf8],0xa
    b326:	0a 
    b327:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
        if(next_res < res)
    b32e:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    b335:	48 3b 85 08 ff ff ff 	cmp    rax,QWORD PTR [rbp-0xf8]
    b33c:	0f 83 12 01 00 00    	jae    b454 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e4>
    b342:	c6 85 ef fe ff ff 01 	mov    BYTE PTR [rbp-0x111],0x1
    b349:	bf 10 00 00 00       	mov    edi,0x10
            throw std::out_of_range("Can't cast '" + index + "' to std::size_t");
    b34e:	e8 7d 91 ff ff       	call   44d0 <__cxa_allocate_exception@plt>
    b353:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    b35a:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b361:	48 8d 35 d1 60 00 00 	lea    rsi,[rip+0x60d1]        # 11439 <_IO_stdin_used+0x439>
    b368:	48 8d bd 78 ff ff ff 	lea    rdi,[rbp-0x88]
    b36f:	e8 fc 1b 00 00       	call   cf70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b374:	eb 00                	jmp    b376 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x206>
    b376:	48 8d 15 c9 60 00 00 	lea    rdx,[rip+0x60c9]        # 11446 <_IO_stdin_used+0x446>
    b37d:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    b381:	48 8d b5 78 ff ff ff 	lea    rsi,[rbp-0x88]
    b388:	e8 93 1b 00 00       	call   cf20 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b38d:	eb 00                	jmp    b38f <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x21f>
    b38f:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b396:	48 8d 75 98          	lea    rsi,[rbp-0x68]
    b39a:	e8 b1 93 ff ff       	call   4750 <_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b39f:	eb 00                	jmp    b3a1 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x231>
    b3a1:	c6 85 ef fe ff ff 00 	mov    BYTE PTR [rbp-0x111],0x0
    b3a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b3af:	00 00 
    b3b1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b3b5:	48 39 c8             	cmp    rax,rcx
    b3b8:	0f 85 54 02 00 00    	jne    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b3be:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b3c5:	48 8b 35 1c bc 00 00 	mov    rsi,QWORD PTR [rip+0xbc1c]        # 16fe8 <_ZTISt12out_of_range@GLIBCXX_3.4>
    b3cc:	48 8b 15 05 bc 00 00 	mov    rdx,QWORD PTR [rip+0xbc05]        # 16fd8 <_ZNSt12out_of_rangeD1Ev@GLIBCXX_3.4>
    b3d3:	e8 08 94 ff ff       	call   47e0 <__cxa_throw@plt>
    b3d8:	e9 35 02 00 00       	jmp    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b3dd:	f3 0f 1e fa          	endbr64
    b3e1:	48 89 c1             	mov    rcx,rax
}
    b3e4:	89 d0                	mov    eax,edx
    b3e6:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b3ed:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b3f3:	eb 43                	jmp    b438 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c8>
    b3f5:	f3 0f 1e fa          	endbr64
    b3f9:	48 89 c1             	mov    rcx,rax
    b3fc:	89 d0                	mov    eax,edx
    b3fe:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b405:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b40b:	eb 1f                	jmp    b42c <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2bc>
    b40d:	f3 0f 1e fa          	endbr64
    b411:	48 89 c1             	mov    rcx,rax
    b414:	89 d0                	mov    eax,edx
    b416:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b41d:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
            throw std::out_of_range("Can't cast '" + index + "' to std::size_t");
    b423:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    b427:	e8 04 ad ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b42c:	48 8d bd 78 ff ff ff 	lea    rdi,[rbp-0x88]
    b433:	e8 f8 ac ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b438:	f6 85 ef fe ff ff 01 	test   BYTE PTR [rbp-0x111],0x1
    b43f:	75 02                	jne    b443 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2d3>
    b441:	eb 0c                	jmp    b44f <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2df>
    b443:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    b44a:	e8 d1 90 ff ff       	call   4520 <__cxa_free_exception@plt>
    b44f:	e9 92 01 00 00       	jmp    b5e6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
        if(c >= '0' && c <= '9')
    b454:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b45b:	83 f8 30             	cmp    eax,0x30
    b45e:	7c 2b                	jl     b48b <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x31b>
    b460:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b467:	83 f8 39             	cmp    eax,0x39
    b46a:	7f 1f                	jg     b48b <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x31b>
            res += c - '0';
    b46c:	0f be 85 ff fe ff ff 	movsx  eax,BYTE PTR [rbp-0x101]
    b473:	83 e8 30             	sub    eax,0x30
    b476:	48 98                	cdqe
    b478:	48 03 85 08 ff ff ff 	add    rax,QWORD PTR [rbp-0xf8]
    b47f:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
        }
    b486:	e9 18 01 00 00       	jmp    b5a3 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x433>
    b48b:	c6 85 ee fe ff ff 01 	mov    BYTE PTR [rbp-0x112],0x1
    b492:	bf 10 00 00 00       	mov    edi,0x10
            throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b497:	e8 34 90 ff ff       	call   44d0 <__cxa_allocate_exception@plt>
    b49c:	48 89 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rax
    b4a3:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    b4aa:	48 8d 35 88 5f 00 00 	lea    rsi,[rip+0x5f88]        # 11439 <_IO_stdin_used+0x439>
    b4b1:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b4b8:	e8 b3 1a 00 00       	call   cf70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    b4bd:	eb 00                	jmp    b4bf <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x34f>
    b4bf:	48 8d 15 80 5f 00 00 	lea    rdx,[rip+0x5f80]        # 11446 <_IO_stdin_used+0x446>
    b4c6:	48 8d bd 58 ff ff ff 	lea    rdi,[rbp-0xa8]
    b4cd:	48 8d b5 38 ff ff ff 	lea    rsi,[rbp-0xc8]
    b4d4:	e8 47 1a 00 00       	call   cf20 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    b4d9:	eb 00                	jmp    b4db <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x36b>
    b4db:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b4e2:	48 8d b5 58 ff ff ff 	lea    rsi,[rbp-0xa8]
    b4e9:	e8 02 93 ff ff       	call   47f0 <_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    b4ee:	eb 00                	jmp    b4f0 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x380>
    b4f0:	c6 85 ee fe ff ff 00 	mov    BYTE PTR [rbp-0x112],0x0
    b4f7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b4fe:	00 00 
    b500:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b504:	48 39 c8             	cmp    rax,rcx
    b507:	0f 85 05 01 00 00    	jne    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b50d:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b514:	48 8b 35 d5 ba 00 00 	mov    rsi,QWORD PTR [rip+0xbad5]        # 16ff0 <_ZTISt16invalid_argument@GLIBCXX_3.4>
    b51b:	48 8b 15 be ba 00 00 	mov    rdx,QWORD PTR [rip+0xbabe]        # 16fe0 <_ZNSt16invalid_argumentD1Ev@GLIBCXX_3.4>
    b522:	e8 b9 92 ff ff       	call   47e0 <__cxa_throw@plt>
    b527:	e9 e6 00 00 00       	jmp    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b52c:	f3 0f 1e fa          	endbr64
    b530:	48 89 c1             	mov    rcx,rax
}
    b533:	89 d0                	mov    eax,edx
    b535:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b53c:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b542:	eb 46                	jmp    b58a <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x41a>
    b544:	f3 0f 1e fa          	endbr64
    b548:	48 89 c1             	mov    rcx,rax
    b54b:	89 d0                	mov    eax,edx
    b54d:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b554:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    b55a:	eb 22                	jmp    b57e <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40e>
    b55c:	f3 0f 1e fa          	endbr64
    b560:	48 89 c1             	mov    rcx,rax
    b563:	89 d0                	mov    eax,edx
    b565:	48 89 8d 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rcx
    b56c:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
            throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b572:	48 8d bd 58 ff ff ff 	lea    rdi,[rbp-0xa8]
    b579:	e8 b2 ab ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b57e:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b585:	e8 a6 ab ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b58a:	f6 85 ee fe ff ff 01 	test   BYTE PTR [rbp-0x112],0x1
    b591:	75 02                	jne    b595 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x425>
    b593:	eb 0c                	jmp    b5a1 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x431>
    b595:	48 8b bd d0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x130]
    b59c:	e8 7f 8f ff ff       	call   4520 <__cxa_free_exception@plt>
    b5a1:	eb 43                	jmp    b5e6 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x476>
    for(char c : index)
    b5a3:	eb 00                	jmp    b5a5 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x435>
    b5a5:	48 8d bd 30 ff ff ff 	lea    rdi,[rbp-0xd0]
    b5ac:	e8 0f 1c 00 00       	call   d1c0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv>
    b5b1:	e9 37 fd ff ff       	jmp    b2ed <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x17d>
    return res;
    b5b6:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    b5bd:	48 89 85 c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rax
    b5c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b5cb:	00 00 
    b5cd:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b5d1:	48 39 c8             	cmp    rax,rcx
    b5d4:	75 3c                	jne    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b5d6:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    b5dd:	48 81 c4 40 01 00 00 	add    rsp,0x140
    b5e4:	5d                   	pop    rbp
    b5e5:	c3                   	ret
        throw std::invalid_argument("Can't cast '" + index + "' to std::size_t");
    b5e6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    b5ed:	48 89 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rax
    b5f4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b5fb:	00 00 
    b5fd:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b601:	48 39 c8             	cmp    rax,rcx
    b604:	75 0c                	jne    b612 <_ZL11parse_indexRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a2>
    b606:	48 8b bd c0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x140]
    b60d:	e8 4e 8e ff ff       	call   4460 <_Unwind_Resume@plt>
    b612:	e8 99 8f ff ff       	call   45b0 <__stack_chk_fail@plt>
    b617:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b61e:	00 00 

000000000000b620 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>:

bool VarelseParser::get_command_args(const std::vector<std::string>& line, std::vector<std::string>& args)
{
    b620:	f3 0f 1e fa          	endbr64
    b624:	55                   	push   rbp
    b625:	48 89 e5             	mov    rbp,rsp
    b628:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    b62f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b636:	00 00 
    b638:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b63c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b640:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b644:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    b648:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b64c:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    std::vector<std::string> res;
    b650:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b654:	e8 e7 ad ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    for(size_t i = 0; i < line.size() - 1; i++)
    b659:	48 c7 45 b0 00 00 00 	mov    QWORD PTR [rbp-0x50],0x0
    b660:	00 
    b661:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b665:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    b669:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    b66d:	e8 ee a7 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b672:	48 89 c1             	mov    rcx,rax
    b675:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    b679:	48 83 e9 01          	sub    rcx,0x1
    b67d:	48 39 c8             	cmp    rax,rcx
    b680:	0f 83 87 00 00 00    	jae    b70d <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xed>
    {
        std::size_t index;
        if(get_reg_arg(line[i], index))
    b686:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    b68a:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    b68e:	e8 ed a7 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b693:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    b697:	48 89 c6             	mov    rsi,rax
    b69a:	48 8d 55 d8          	lea    rdx,[rbp-0x28]
    b69e:	e8 5d fa ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    b6a3:	88 45 8f             	mov    BYTE PTR [rbp-0x71],al
    b6a6:	eb 00                	jmp    b6a8 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x88>
    b6a8:	8a 45 8f             	mov    al,BYTE PTR [rbp-0x71]
    b6ab:	a8 01                	test   al,0x1
    b6ad:	75 02                	jne    b6b1 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x91>
    b6af:	eb 3c                	jmp    b6ed <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xcd>
    b6b1:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
        {
            res.emplace_back(registers[index]);
    b6b5:	48 83 c7 70          	add    rdi,0x70
    b6b9:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    b6bd:	e8 0e 13 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    b6c2:	48 89 c6             	mov    rsi,rax
    b6c5:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b6c9:	e8 22 ae ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    b6ce:	eb 00                	jmp    b6d0 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xb0>
        }
    b6d0:	eb 28                	jmp    b6fa <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xda>
    b6d2:	f3 0f 1e fa          	endbr64
    b6d6:	48 89 c1             	mov    rcx,rax
            return false;
        }
    }
    args = res;
    return true;
}
    b6d9:	89 d0                	mov    eax,edx
    b6db:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
    b6df:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    b6e2:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    b6e6:	e8 f5 ae ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b6eb:	eb 69                	jmp    b756 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x136>
            return false;
    b6ed:	c6 45 d7 00          	mov    BYTE PTR [rbp-0x29],0x0
    b6f1:	c7 45 a0 01 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1
    b6f8:	eb 2d                	jmp    b727 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x107>
    }
    b6fa:	eb 00                	jmp    b6fc <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xdc>
    for(size_t i = 0; i < line.size() - 1; i++)
    b6fc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b700:	48 83 c0 01          	add    rax,0x1
    b704:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b708:	e9 54 ff ff ff       	jmp    b661 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x41>
    args = res;
    b70d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    b711:	48 8d 75 e0          	lea    rsi,[rbp-0x20]
    b715:	e8 e6 12 00 00       	call   ca00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
    b71a:	eb 00                	jmp    b71c <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0xfc>
    return true;
    b71c:	c6 45 d7 01          	mov    BYTE PTR [rbp-0x29],0x1
    b720:	c7 45 a0 01 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1
    b727:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
}
    b72b:	e8 b0 ae ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b730:	8a 45 d7             	mov    al,BYTE PTR [rbp-0x29]
    b733:	88 45 8e             	mov    BYTE PTR [rbp-0x72],al
    b736:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b73d:	00 00 
    b73f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b743:	48 39 c8             	cmp    rax,rcx
    b746:	75 31                	jne    b779 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x159>
    b748:	8a 45 8e             	mov    al,BYTE PTR [rbp-0x72]
    b74b:	24 01                	and    al,0x1
    b74d:	48 81 c4 80 00 00 00 	add    rsp,0x80
    b754:	5d                   	pop    rbp
    b755:	c3                   	ret
    b756:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b75a:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b75e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b765:	00 00 
    b767:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    b76b:	48 39 c8             	cmp    rax,rcx
    b76e:	75 09                	jne    b779 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_+0x159>
    b770:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    b774:	e8 e7 8c ff ff       	call   4460 <_Unwind_Resume@plt>
    b779:	e8 32 8e ff ff       	call   45b0 <__stack_chk_fail@plt>
    b77e:	66 90                	xchg   ax,ax

000000000000b780 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm>:

void VarelseParser::parse(TerminalIO& terminal, std::string& current_dir, const std::vector<std::string>& lines, std::size_t ip)
{
    b780:	f3 0f 1e fa          	endbr64
    b784:	55                   	push   rbp
    b785:	48 89 e5             	mov    rbp,rsp
    b788:	48 81 ec 70 03 00 00 	sub    rsp,0x370
    b78f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b796:	00 00 
    b798:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b79c:	48 89 bd 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rdi
    b7a3:	48 89 b5 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rsi
    b7aa:	48 89 95 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rdx
    b7b1:	48 89 8d 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rcx
    b7b8:	4c 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],r8
    b7bf:	48 8b 85 60 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a0]
    b7c6:	48 89 85 10 fe ff ff 	mov    QWORD PTR [rbp-0x1f0],rax
    std::unordered_map<std::string, size_t> labels;
    b7cd:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    b7d4:	e8 37 15 00 00       	call   cd10 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEEC2Ev>
    for(size_t i = 0; i < lines.size(); i++)
    b7d9:	48 c7 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],0x0
    b7e0:	00 00 00 00 
    b7e4:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    b7eb:	48 89 85 08 fe ff ff 	mov    QWORD PTR [rbp-0x1f8],rax
    b7f2:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b7f9:	e8 62 a6 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b7fe:	48 89 c1             	mov    rcx,rax
    b801:	48 8b 85 08 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1f8]
    b808:	48 39 c8             	cmp    rax,rcx
    b80b:	0f 83 d2 01 00 00    	jae    b9e3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x263>
    {
        if(lines[i].ends_with('<'))
    b811:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b818:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b81f:	e8 5c a6 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b824:	48 89 c7             	mov    rdi,rax
    b827:	be 3c 00 00 00       	mov    esi,0x3c
    b82c:	e8 ff 14 00 00       	call   cd30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc>
    b831:	a8 01                	test   al,0x1
    b833:	75 05                	jne    b83a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xba>
    b835:	e9 90 01 00 00       	jmp    b9ca <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24a>
        {
            std::vector<std::string> line = split_line(lines[i]);
    b83a:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b841:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b848:	e8 33 a6 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b84d:	48 8b b5 10 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1f0]
    b854:	48 89 c2             	mov    rdx,rax
    b857:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b85e:	e8 8d f4 ff ff       	call   acf0 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    b863:	eb 00                	jmp    b865 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe5>
    b865:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
            std::string op = line.back(); 
    b86c:	e8 7f bd ff ff       	call   75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    b871:	48 89 c6             	mov    rsi,rax
    b874:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b878:	e8 73 a6 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    b87d:	eb 00                	jmp    b87f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xff>
            if(op.length() == 1)
    b87f:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b883:	e8 d8 a7 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b888:	48 83 f8 01          	cmp    rax,0x1
    b88c:	0f 85 10 01 00 00    	jne    b9a2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x222>
            {
                if(line.size() == 2)
    b892:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b899:	e8 c2 a5 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b89e:	48 83 f8 02          	cmp    rax,0x2
    b8a2:	0f 85 b3 00 00 00    	jne    b95b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1db>
    b8a8:	31 c0                	xor    eax,eax
    b8aa:	89 c6                	mov    esi,eax
    b8ac:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
                {
                    labels.emplace(line[0], i + 1);
    b8b3:	e8 98 ae ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b8b8:	48 89 c6             	mov    rsi,rax
    b8bb:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    b8c2:	48 ff c0             	inc    rax
    b8c5:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    b8cc:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    b8d3:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    b8da:	e8 e1 14 00 00       	call   cdc0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_>
    b8df:	88 95 ff fd ff ff    	mov    BYTE PTR [rbp-0x201],dl
    b8e5:	48 89 85 00 fe ff ff 	mov    QWORD PTR [rbp-0x200],rax
    b8ec:	eb 00                	jmp    b8ee <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x16e>
    b8ee:	8a 85 ff fd ff ff    	mov    al,BYTE PTR [rbp-0x201]
    b8f4:	48 8b 8d 00 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x200]
    b8fb:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    b8ff:	88 45 90             	mov    BYTE PTR [rbp-0x70],al
                }
    b902:	e9 99 00 00 00       	jmp    b9a0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x220>
    b907:	f3 0f 1e fa          	endbr64
    b90b:	48 89 c1             	mov    rcx,rax
                    }
                }
            }
        }
    }
}
    b90e:	89 d0                	mov    eax,edx
    b910:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b917:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    b91d:	e9 19 10 00 00       	jmp    c93b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    b922:	f3 0f 1e fa          	endbr64
    b926:	48 89 c1             	mov    rcx,rax
    b929:	89 d0                	mov    eax,edx
    b92b:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b932:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    b938:	eb 7f                	jmp    b9b9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x239>
    b93a:	f3 0f 1e fa          	endbr64
    b93e:	48 89 c1             	mov    rcx,rax
    b941:	89 d0                	mov    eax,edx
    b943:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    b94a:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
        }
    b950:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b954:	e8 d7 a7 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b959:	eb 5e                	jmp    b9b9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x239>
                    terminal.print_error("Invalid instruction '%s'\r\n", lines[i].c_str());
    b95b:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    b962:	48 89 85 f0 fd ff ff 	mov    QWORD PTR [rbp-0x210],rax
    b969:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b970:	48 8b b5 38 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c8]
    b977:	e8 04 a5 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    b97c:	48 89 c7             	mov    rdi,rax
    b97f:	e8 2c a5 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    b984:	48 8b bd f0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x210]
    b98b:	48 89 c2             	mov    rdx,rax
    b98e:	48 8d 35 46 5a 00 00 	lea    rsi,[rip+0x5a46]        # 113db <_IO_stdin_used+0x3db>
    b995:	31 c0                	xor    eax,eax
    b997:	e8 94 d9 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    b99c:	eb 00                	jmp    b99e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x21e>
    b99e:	eb 00                	jmp    b9a0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x220>
            }
    b9a0:	eb 00                	jmp    b9a2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x222>
        }
    b9a2:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    b9a6:	e8 85 a7 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    b9ab:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b9b2:	e8 29 ac ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b9b7:	eb 11                	jmp    b9ca <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24a>
    b9b9:	48 8d bd 38 ff ff ff 	lea    rdi,[rbp-0xc8]
    b9c0:	e8 1b ac ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    b9c5:	e9 71 0f 00 00       	jmp    c93b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    }
    b9ca:	eb 00                	jmp    b9cc <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x24c>
    for(size_t i = 0; i < lines.size(); i++)
    b9cc:	48 8b 85 38 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c8]
    b9d3:	48 83 c0 01          	add    rax,0x1
    b9d7:	48 89 85 38 fe ff ff 	mov    QWORD PTR [rbp-0x1c8],rax
    b9de:	e9 01 fe ff ff       	jmp    b7e4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x64>
    for(;ip < lines.size(); ip++)
    b9e3:	eb 00                	jmp    b9e5 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x265>
    b9e5:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    b9ec:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    b9f3:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    b9fa:	e8 61 a4 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    b9ff:	48 89 c1             	mov    rcx,rax
    ba02:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    ba09:	48 39 c8             	cmp    rax,rcx
    ba0c:	0f 83 02 0f 00 00    	jae    c914 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1194>
        std::vector<std::string> line = split_line(lines[ip]);
    ba12:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    ba19:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    ba20:	e8 5b a4 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    ba25:	48 8b b5 10 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1f0]
    ba2c:	48 89 c2             	mov    rdx,rax
    ba2f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    ba36:	e8 b5 f2 ff ff       	call   acf0 <_ZN13VarelseParser10split_lineERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    ba3b:	eb 00                	jmp    ba3d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x2bd>
        if(line.size() > 0)
    ba3d:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    ba44:	e8 17 a4 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    ba49:	48 83 f8 00          	cmp    rax,0x0
    ba4d:	0f 86 90 0e 00 00    	jbe    c8e3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1163>
    ba53:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
            std::string op = line.back(); 
    ba5a:	e8 91 bb ff ff       	call   75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    ba5f:	48 89 c6             	mov    rsi,rax
    ba62:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    ba66:	e8 85 a4 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    ba6b:	eb 00                	jmp    ba6d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x2ed>
            if(op.length() != 1)
    ba6d:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    ba71:	e8 ea a5 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    ba76:	48 83 f8 01          	cmp    rax,0x1
    ba7a:	74 6c                	je     bae8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x368>
                terminal.print_error("Unknown command '%s'\r\n", op.c_str());
    ba7c:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    ba83:	48 89 85 e0 fd ff ff 	mov    QWORD PTR [rbp-0x220],rax
    ba8a:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    ba8e:	e8 1d a4 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    ba93:	48 8b bd e0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x220]
    ba9a:	48 89 c2             	mov    rdx,rax
    ba9d:	48 8d 35 6c 56 00 00 	lea    rsi,[rip+0x566c]        # 11110 <_IO_stdin_used+0x110>
    baa4:	31 c0                	xor    eax,eax
    baa6:	e8 85 d8 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    baab:	eb 00                	jmp    baad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x32d>
            }
    baad:	e9 1b 0e 00 00       	jmp    c8cd <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114d>
    bab2:	f3 0f 1e fa          	endbr64
    bab6:	48 89 c1             	mov    rcx,rax
}
    bab9:	89 d0                	mov    eax,edx
    babb:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    bac2:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    bac8:	e9 39 0e 00 00       	jmp    c906 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1186>
    bacd:	f3 0f 1e fa          	endbr64
    bad1:	48 89 c1             	mov    rcx,rax
    bad4:	89 d0                	mov    eax,edx
    bad6:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    badd:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
    bae3:	e9 f0 0d 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
    bae8:	31 c0                	xor    eax,eax
    baea:	89 c6                	mov    esi,eax
    baec:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
                switch(op[0])
    baf0:	e8 1b d2 ff ff       	call   8d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm>
    baf5:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    bafc:	eb 00                	jmp    bafe <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x37e>
    bafe:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    bb05:	0f be 00             	movsx  eax,BYTE PTR [rax]
    bb08:	83 c0 dd             	add    eax,0xffffffdd
    bb0b:	89 c1                	mov    ecx,eax
    bb0d:	48 89 8d d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],rcx
    bb14:	83 e8 5a             	sub    eax,0x5a
    bb17:	0f 87 7b 0d 00 00    	ja     c898 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1118>
    bb1d:	48 8b 85 d0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x230]
    bb24:	48 8d 0d 6d 59 00 00 	lea    rcx,[rip+0x596d]        # 11498 <_IO_stdin_used+0x498>
    bb2b:	48 63 04 81          	movsxd rax,DWORD PTR [rcx+rax*4]
    bb2f:	48 01 c8             	add    rax,rcx
    bb32:	3e ff e0             	notrack jmp rax
                        if(line.size() == 3 && get_reg_arg(line[0], arg1) && get_reg_arg(line[1], arg2))
    bb35:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bb3c:	e8 1f a3 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bb41:	48 83 f8 03          	cmp    rax,0x3
    bb45:	0f 85 c3 00 00 00    	jne    bc0e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bb4b:	31 c0                	xor    eax,eax
    bb4d:	89 c6                	mov    esi,eax
    bb4f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bb56:	e8 f5 ab ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bb5b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bb62:	48 89 c6             	mov    rsi,rax
    bb65:	48 8d 95 10 ff ff ff 	lea    rdx,[rbp-0xf0]
    bb6c:	e8 8f f5 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bb71:	88 85 cf fd ff ff    	mov    BYTE PTR [rbp-0x231],al
    bb77:	eb 00                	jmp    bb79 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x3f9>
    bb79:	8a 85 cf fd ff ff    	mov    al,BYTE PTR [rbp-0x231]
    bb7f:	a8 01                	test   al,0x1
    bb81:	75 05                	jne    bb88 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x408>
    bb83:	e9 86 00 00 00       	jmp    bc0e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bb88:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bb8f:	be 01 00 00 00       	mov    esi,0x1
    bb94:	e8 b7 ab ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bb99:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bba0:	48 89 c6             	mov    rsi,rax
    bba3:	48 8d 95 08 ff ff ff 	lea    rdx,[rbp-0xf8]
    bbaa:	e8 51 f5 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bbaf:	88 85 ce fd ff ff    	mov    BYTE PTR [rbp-0x232],al
    bbb5:	eb 00                	jmp    bbb7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x437>
    bbb7:	8a 85 ce fd ff ff    	mov    al,BYTE PTR [rbp-0x232]
    bbbd:	a8 01                	test   al,0x1
    bbbf:	75 02                	jne    bbc3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x443>
    bbc1:	eb 4b                	jmp    bc0e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48e>
    bbc3:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            registers[arg1] = registers[arg2];
    bbca:	48 83 c7 70          	add    rdi,0x70
    bbce:	48 89 bd b8 fd ff ff 	mov    QWORD PTR [rbp-0x248],rdi
    bbd5:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
    bbdc:	e8 ef 0d 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bbe1:	48 8b bd b8 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x248]
    bbe8:	48 89 85 c0 fd ff ff 	mov    QWORD PTR [rbp-0x240],rax
    bbef:	48 8b b5 10 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf0]
    bbf6:	e8 d5 0d 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bbfb:	48 8b b5 c0 fd ff ff 	mov    rsi,QWORD PTR [rbp-0x240]
    bc02:	48 89 c7             	mov    rdi,rax
    bc05:	e8 96 df ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    bc0a:	eb 00                	jmp    bc0c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x48c>
                        }
    bc0c:	eb 45                	jmp    bc53 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d3>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bc0e:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bc15:	48 89 85 b0 fd ff ff 	mov    QWORD PTR [rbp-0x250],rax
    bc1c:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bc23:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bc2a:	e8 51 a2 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bc2f:	48 89 c7             	mov    rdi,rax
    bc32:	e8 79 a2 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bc37:	48 8b bd b0 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x250]
    bc3e:	48 89 c2             	mov    rdx,rax
    bc41:	48 8d 35 93 57 00 00 	lea    rsi,[rip+0x5793]        # 113db <_IO_stdin_used+0x3db>
    bc48:	31 c0                	xor    eax,eax
    bc4a:	e8 e1 d6 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    bc4f:	eb 00                	jmp    bc51 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d1>
    bc51:	eb 00                	jmp    bc53 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x4d3>
                        break;
    bc53:	e9 73 0c 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 3 && get_reg_arg(line[0], arg1))
    bc58:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bc5f:	e8 fc a1 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bc64:	48 83 f8 03          	cmp    rax,0x3
    bc68:	75 7c                	jne    bce6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x566>
    bc6a:	31 c0                	xor    eax,eax
    bc6c:	89 c6                	mov    esi,eax
    bc6e:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bc75:	e8 d6 aa ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bc7a:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bc81:	48 89 c6             	mov    rsi,rax
    bc84:	48 8d 95 00 ff ff ff 	lea    rdx,[rbp-0x100]
    bc8b:	e8 70 f4 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bc90:	88 85 af fd ff ff    	mov    BYTE PTR [rbp-0x251],al
    bc96:	eb 00                	jmp    bc98 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x518>
    bc98:	8a 85 af fd ff ff    	mov    al,BYTE PTR [rbp-0x251]
    bc9e:	a8 01                	test   al,0x1
    bca0:	75 02                	jne    bca4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x524>
    bca2:	eb 42                	jmp    bce6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x566>
    bca4:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bcab:	be 01 00 00 00       	mov    esi,0x1
                            registers[arg1] = line[1];
    bcb0:	e8 9b aa ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bcb5:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bcbc:	48 89 85 a0 fd ff ff 	mov    QWORD PTR [rbp-0x260],rax
    bcc3:	48 83 c7 70          	add    rdi,0x70
    bcc7:	48 8b b5 00 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x100]
    bcce:	e8 fd 0c 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bcd3:	48 8b b5 a0 fd ff ff 	mov    rsi,QWORD PTR [rbp-0x260]
    bcda:	48 89 c7             	mov    rdi,rax
    bcdd:	e8 be de ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    bce2:	eb 00                	jmp    bce4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x564>
                        }
    bce4:	eb 45                	jmp    bd2b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5ab>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bce6:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bced:	48 89 85 98 fd ff ff 	mov    QWORD PTR [rbp-0x268],rax
    bcf4:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bcfb:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bd02:	e8 79 a1 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bd07:	48 89 c7             	mov    rdi,rax
    bd0a:	e8 a1 a1 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bd0f:	48 8b bd 98 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x268]
    bd16:	48 89 c2             	mov    rdx,rax
    bd19:	48 8d 35 bb 56 00 00 	lea    rsi,[rip+0x56bb]        # 113db <_IO_stdin_used+0x3db>
    bd20:	31 c0                	xor    eax,eax
    bd22:	e8 09 d6 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    bd27:	eb 00                	jmp    bd29 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5a9>
    bd29:	eb 00                	jmp    bd2b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5ab>
                        break;
    bd2b:	e9 9b 0b 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        break;
    bd30:	e9 96 0b 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 2 && get_reg_arg(line[0], arg1))
    bd35:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bd3c:	e8 1f a1 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    bd41:	48 83 f8 02          	cmp    rax,0x2
    bd45:	0f 85 49 01 00 00    	jne    be94 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x714>
    bd4b:	31 c0                	xor    eax,eax
    bd4d:	89 c6                	mov    esi,eax
    bd4f:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bd56:	e8 f5 a9 ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bd5b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bd62:	48 89 c6             	mov    rsi,rax
    bd65:	48 8d 95 f8 fe ff ff 	lea    rdx,[rbp-0x108]
    bd6c:	e8 8f f3 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    bd71:	88 85 97 fd ff ff    	mov    BYTE PTR [rbp-0x269],al
    bd77:	eb 00                	jmp    bd79 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x5f9>
    bd79:	8a 85 97 fd ff ff    	mov    al,BYTE PTR [rbp-0x269]
    bd7f:	a8 01                	test   al,0x1
    bd81:	75 05                	jne    bd88 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x608>
    bd83:	e9 0c 01 00 00       	jmp    be94 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x714>
    bd88:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            std::string loc = registers[arg1];
    bd8f:	48 83 c7 70          	add    rdi,0x70
    bd93:	48 8b b5 f8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x108]
    bd9a:	e8 31 0c 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    bd9f:	48 89 c6             	mov    rsi,rax
    bda2:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    bda6:	e8 45 a1 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    bdab:	eb 00                	jmp    bdad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x62d>
    bdad:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    bdb4:	48 8d 75 98          	lea    rsi,[rbp-0x68]
                            if(labels.find(loc) != labels.end())
    bdb8:	e8 b3 10 00 00       	call   ce70 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE4findERSB_>
    bdbd:	48 89 85 88 fd ff ff 	mov    QWORD PTR [rbp-0x278],rax
    bdc4:	eb 00                	jmp    bdc6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x646>
    bdc6:	48 8b 85 88 fd ff ff 	mov    rax,QWORD PTR [rbp-0x278]
    bdcd:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    bdd4:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    bddb:	e8 c0 10 00 00       	call   cea0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE3endEv>
    bde0:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    bde7:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
    bdee:	48 8d b5 e8 fe ff ff 	lea    rsi,[rbp-0x118]
    bdf5:	e8 46 10 00 00       	call   ce40 <_ZNSt8__detaileqERKNS_19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESC_>
    bdfa:	34 ff                	xor    al,0xff
    bdfc:	a8 01                	test   al,0x1
    bdfe:	75 02                	jne    be02 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x682>
    be00:	eb 54                	jmp    be56 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x6d6>
    be02:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    be09:	48 8d 75 98          	lea    rsi,[rbp-0x68]
                                ip = labels.at(loc) - 1; // will add 1 at end of loop
    be0d:	e8 be 10 00 00       	call   ced0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE2atERSB_>
    be12:	48 89 85 80 fd ff ff 	mov    QWORD PTR [rbp-0x280],rax
    be19:	eb 00                	jmp    be1b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x69b>
    be1b:	48 8b 85 80 fd ff ff 	mov    rax,QWORD PTR [rbp-0x280]
    be22:	48 8b 00             	mov    rax,QWORD PTR [rax]
    be25:	48 83 e8 01          	sub    rax,0x1
    be29:	48 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rax
                            }
    be30:	eb 57                	jmp    be89 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x709>
    be32:	f3 0f 1e fa          	endbr64
    be36:	48 89 c1             	mov    rcx,rax
}
    be39:	89 d0                	mov    eax,edx
    be3b:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    be42:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                        }
    be48:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    be4c:	e8 df a2 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    be51:	e9 82 0a 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid jump location '%s'\r\n", loc.c_str());
    be56:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    be5d:	48 89 85 78 fd ff ff 	mov    QWORD PTR [rbp-0x288],rax
    be64:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    be68:	e8 43 a0 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    be6d:	48 8b bd 78 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x288]
    be74:	48 89 c2             	mov    rdx,rax
    be77:	48 8d 35 78 55 00 00 	lea    rsi,[rip+0x5578]        # 113f6 <_IO_stdin_used+0x3f6>
    be7e:	31 c0                	xor    eax,eax
    be80:	e8 ab d4 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    be85:	eb 00                	jmp    be87 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x707>
    be87:	eb 00                	jmp    be89 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x709>
                        }
    be89:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
    be8d:	e8 9e a2 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    be92:	eb 45                	jmp    bed9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x759>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    be94:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    be9b:	48 89 85 70 fd ff ff 	mov    QWORD PTR [rbp-0x290],rax
    bea2:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bea9:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    beb0:	e8 cb 9f ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    beb5:	48 89 c7             	mov    rdi,rax
    beb8:	e8 f3 9f ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bebd:	48 8b bd 70 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x290]
    bec4:	48 89 c2             	mov    rdx,rax
    bec7:	48 8d 35 0d 55 00 00 	lea    rsi,[rip+0x550d]        # 113db <_IO_stdin_used+0x3db>
    bece:	31 c0                	xor    eax,eax
    bed0:	e8 5b d4 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    bed5:	eb 00                	jmp    bed7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x757>
    bed7:	eb 00                	jmp    bed9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x759>
                        break;
    bed9:	e9 ed 09 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() < 2)
    bede:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    bee5:	e8 76 9f ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    beea:	48 83 f8 02          	cmp    rax,0x2
    beee:	73 48                	jae    bf38 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7b8>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bef0:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bef7:	48 89 85 68 fd ff ff 	mov    QWORD PTR [rbp-0x298],rax
    befe:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bf05:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bf0c:	e8 6f 9f ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bf11:	48 89 c7             	mov    rdi,rax
    bf14:	e8 97 9f ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bf19:	48 8b bd 68 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x298]
    bf20:	48 89 c2             	mov    rdx,rax
    bf23:	48 8d 35 b1 54 00 00 	lea    rsi,[rip+0x54b1]        # 113db <_IO_stdin_used+0x3db>
    bf2a:	31 c0                	xor    eax,eax
    bf2c:	e8 ff d3 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    bf31:	eb 00                	jmp    bf33 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7b3>
                        }
    bf33:	e9 d7 00 00 00       	jmp    c00f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x88f>
    bf38:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    bf3f:	48 89 bd 58 fd ff ff 	mov    QWORD PTR [rbp-0x2a8],rdi
                            std::vector<std::string> cmd_args;
    bf46:	e8 f5 a4 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    bf4b:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    bf52:	48 8b 95 58 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2a8]
    bf59:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                            if(get_command_args(line, cmd_args))
    bf60:	e8 bb f6 ff ff       	call   b620 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    bf65:	88 85 67 fd ff ff    	mov    BYTE PTR [rbp-0x299],al
    bf6b:	eb 00                	jmp    bf6d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7ed>
    bf6d:	8a 85 67 fd ff ff    	mov    al,BYTE PTR [rbp-0x299]
    bf73:	a8 01                	test   al,0x1
    bf75:	75 02                	jne    bf79 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x7f9>
    bf77:	eb 45                	jmp    bfbe <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x83e>
    bf79:	48 8b 95 10 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1f0]
                                exec_process(terminal, cmd_args, streams);
    bf80:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    bf87:	48 8d b5 d0 fe ff ff 	lea    rsi,[rbp-0x130]
    bf8e:	e8 ad 91 ff ff       	call   5140 <_Z12exec_processR10TerminalIORKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERK14TerminalStream>
    bf93:	eb 00                	jmp    bf95 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x815>
                            }
    bf95:	eb 6c                	jmp    c003 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x883>
    bf97:	f3 0f 1e fa          	endbr64
    bf9b:	48 89 c1             	mov    rcx,rax
}
    bf9e:	89 d0                	mov    eax,edx
    bfa0:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    bfa7:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                        }
    bfad:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    bfb4:	e8 27 a6 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    bfb9:	e9 1a 09 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    bfbe:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    bfc5:	48 89 85 50 fd ff ff 	mov    QWORD PTR [rbp-0x2b0],rax
    bfcc:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    bfd3:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    bfda:	e8 a1 9e ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    bfdf:	48 89 c7             	mov    rdi,rax
    bfe2:	e8 c9 9e ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    bfe7:	48 8b bd 50 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2b0]
    bfee:	48 89 c2             	mov    rdx,rax
    bff1:	48 8d 35 e3 53 00 00 	lea    rsi,[rip+0x53e3]        # 113db <_IO_stdin_used+0x3db>
    bff8:	31 c0                	xor    eax,eax
    bffa:	e8 31 d3 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    bfff:	eb 00                	jmp    c001 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x881>
    c001:	eb 00                	jmp    c003 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x883>
                        }
    c003:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    c00a:	e8 d1 a5 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
                        break;
    c00f:	e9 b7 08 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        std::vector<std::string> args;
    c014:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c01b:	e8 20 a4 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
                        if(line.size() == 2)
    c020:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c027:	e8 34 9e ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c02c:	48 83 f8 02          	cmp    rax,0x2
    c030:	0f 85 04 01 00 00    	jne    c13a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9ba>
                            if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c036:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c03d:	e8 1e 9e ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c042:	48 83 f8 02          	cmp    rax,0x2
    c046:	0f 85 a7 00 00 00    	jne    c0f3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x973>
    c04c:	31 c0                	xor    eax,eax
    c04e:	89 c6                	mov    esi,eax
    c050:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c057:	e8 f4 a6 ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c05c:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c063:	48 89 c6             	mov    rsi,rax
    c066:	48 8d 95 b0 fe ff ff 	lea    rdx,[rbp-0x150]
    c06d:	e8 8e f0 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c072:	88 85 4f fd ff ff    	mov    BYTE PTR [rbp-0x2b1],al
    c078:	eb 00                	jmp    c07a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x8fa>
    c07a:	8a 85 4f fd ff ff    	mov    al,BYTE PTR [rbp-0x2b1]
    c080:	a8 01                	test   al,0x1
    c082:	75 02                	jne    c086 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x906>
    c084:	eb 6d                	jmp    c0f3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x973>
    c086:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                                args.emplace_back(registers[arg1]);
    c08d:	48 83 c7 70          	add    rdi,0x70
    c091:	48 8b b5 b0 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x150]
    c098:	e8 33 09 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c09d:	48 89 c6             	mov    rsi,rax
    c0a0:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c0a7:	e8 44 a4 ff ff       	call   64f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_>
    c0ac:	eb 00                	jmp    c0ae <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x92e>
                                cd_cmd(terminal, current_dir, args);
    c0ae:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c0b5:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c0bc:	48 8d 95 b8 fe ff ff 	lea    rdx,[rbp-0x148]
    c0c3:	e8 48 8b ff ff       	call   4c10 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c0c8:	eb 00                	jmp    c0ca <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x94a>
                            }
    c0ca:	eb 6c                	jmp    c138 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b8>
    c0cc:	f3 0f 1e fa          	endbr64
    c0d0:	48 89 c1             	mov    rcx,rax
}
    c0d3:	89 d0                	mov    eax,edx
    c0d5:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c0dc:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c0e2:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c0e9:	e8 f2 a4 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c0ee:	e9 e5 07 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c0f3:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c0fa:	48 89 85 40 fd ff ff 	mov    QWORD PTR [rbp-0x2c0],rax
    c101:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c108:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c10f:	e8 6c 9d ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c114:	48 89 c7             	mov    rdi,rax
    c117:	e8 94 9d ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c11c:	48 8b bd 40 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2c0]
    c123:	48 89 c2             	mov    rdx,rax
    c126:	48 8d 35 ae 52 00 00 	lea    rsi,[rip+0x52ae]        # 113db <_IO_stdin_used+0x3db>
    c12d:	31 c0                	xor    eax,eax
    c12f:	e8 fc d1 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c134:	eb 00                	jmp    c136 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b6>
    c136:	eb 00                	jmp    c138 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9b8>
                        }
    c138:	eb 77                	jmp    c1b1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa31>
                        else if(line.size() == 1)
    c13a:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c141:	e8 1a 9d ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c146:	48 83 f8 01          	cmp    rax,0x1
    c14a:	75 1e                	jne    c16a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9ea>
                            cd_cmd(terminal, current_dir, args);
    c14c:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c153:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c15a:	48 8d 95 b8 fe ff ff 	lea    rdx,[rbp-0x148]
    c161:	e8 aa 8a ff ff       	call   4c10 <_Z6cd_cmdR10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c166:	eb 00                	jmp    c168 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x9e8>
                        }
    c168:	eb 45                	jmp    c1af <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2f>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c16a:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c171:	48 89 85 38 fd ff ff 	mov    QWORD PTR [rbp-0x2c8],rax
    c178:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c17f:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c186:	e8 f5 9c ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c18b:	48 89 c7             	mov    rdi,rax
    c18e:	e8 1d 9d ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c193:	48 8b bd 38 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2c8]
    c19a:	48 89 c2             	mov    rdx,rax
    c19d:	48 8d 35 37 52 00 00 	lea    rsi,[rip+0x5237]        # 113db <_IO_stdin_used+0x3db>
    c1a4:	31 c0                	xor    eax,eax
    c1a6:	e8 85 d1 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c1ab:	eb 00                	jmp    c1ad <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2d>
    c1ad:	eb 00                	jmp    c1af <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa2f>
    c1af:	eb 00                	jmp    c1b1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa31>
                    }
    c1b1:	48 8d bd b8 fe ff ff 	lea    rdi,[rbp-0x148]
    c1b8:	e8 23 a4 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c1bd:	e9 09 07 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c1c2:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c1c9:	48 89 bd 28 fd ff ff 	mov    QWORD PTR [rbp-0x2d8],rdi
                        std::vector<std::string> cmd_args;
    c1d0:	e8 6b a2 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    c1d5:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c1dc:	48 8b 95 28 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2d8]
    c1e3:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                        if(get_command_args(line, cmd_args))
    c1ea:	e8 31 f4 ff ff       	call   b620 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    c1ef:	88 85 37 fd ff ff    	mov    BYTE PTR [rbp-0x2c9],al
    c1f5:	eb 00                	jmp    c1f7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa77>
    c1f7:	8a 85 37 fd ff ff    	mov    al,BYTE PTR [rbp-0x2c9]
    c1fd:	a8 01                	test   al,0x1
    c1ff:	75 02                	jne    c203 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa83>
    c201:	eb 45                	jmp    c248 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xac8>
                            dir_cmd(terminal, current_dir, cmd_args);
    c203:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c20a:	48 8b b5 50 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1b0]
    c211:	48 8d 95 98 fe ff ff 	lea    rdx,[rbp-0x168]
    c218:	e8 a3 86 ff ff       	call   48c0 <_Z7dir_cmdR10TerminalIORKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EE>
    c21d:	eb 00                	jmp    c21f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xa9f>
                        }
    c21f:	eb 6c                	jmp    c28d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0d>
    c221:	f3 0f 1e fa          	endbr64
    c225:	48 89 c1             	mov    rcx,rax
}
    c228:	89 d0                	mov    eax,edx
    c22a:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c231:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c237:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c23e:	e8 9d a3 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c243:	e9 90 06 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c248:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c24f:	48 89 85 20 fd ff ff 	mov    QWORD PTR [rbp-0x2e0],rax
    c256:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c25d:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c264:	e8 17 9c ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c269:	48 89 c7             	mov    rdi,rax
    c26c:	e8 3f 9c ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c271:	48 8b bd 20 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2e0]
    c278:	48 89 c2             	mov    rdx,rax
    c27b:	48 8d 35 59 51 00 00 	lea    rsi,[rip+0x5159]        # 113db <_IO_stdin_used+0x3db>
    c282:	31 c0                	xor    eax,eax
    c284:	e8 a7 d0 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c289:	eb 00                	jmp    c28b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0b>
    c28b:	eb 00                	jmp    c28d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb0d>
                    }
    c28d:	48 8d bd 98 fe ff ff 	lea    rdi,[rbp-0x168]
    c294:	e8 47 a3 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c299:	e9 2d 06 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c29e:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c2a5:	e8 b6 9b ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c2aa:	48 83 f8 01          	cmp    rax,0x1
    c2ae:	75 19                	jne    c2c9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb49>
                            terminal.print("\033[2J\033[H");
    c2b0:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c2b7:	48 8d 35 55 51 00 00 	lea    rsi,[rip+0x5155]        # 11413 <_IO_stdin_used+0x413>
    c2be:	31 c0                	xor    eax,eax
    c2c0:	e8 8b cf ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c2c5:	eb 00                	jmp    c2c7 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb47>
                        }
    c2c7:	eb 45                	jmp    c30e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8e>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c2c9:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c2d0:	48 89 85 18 fd ff ff 	mov    QWORD PTR [rbp-0x2e8],rax
    c2d7:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c2de:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c2e5:	e8 96 9b ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c2ea:	48 89 c7             	mov    rdi,rax
    c2ed:	e8 be 9b ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c2f2:	48 8b bd 18 fd ff ff 	mov    rdi,QWORD PTR [rbp-0x2e8]
    c2f9:	48 89 c2             	mov    rdx,rax
    c2fc:	48 8d 35 d8 50 00 00 	lea    rsi,[rip+0x50d8]        # 113db <_IO_stdin_used+0x3db>
    c303:	31 c0                	xor    eax,eax
    c305:	e8 26 d0 ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c30a:	eb 00                	jmp    c30c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8c>
    c30c:	eb 00                	jmp    c30e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xb8e>
                        break;
    c30e:	e9 b8 05 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c313:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c31a:	48 89 bd 08 fd ff ff 	mov    QWORD PTR [rbp-0x2f8],rdi
                        std::vector<std::string> cmd_args;
    c321:	e8 1a a1 ff ff       	call   6440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev>
    c326:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c32d:	48 8b 95 08 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x2f8]
    c334:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
                        if(get_command_args(line, cmd_args))
    c33b:	e8 e0 f2 ff ff       	call   b620 <_ZN13VarelseParser16get_command_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERS8_>
    c340:	88 85 17 fd ff ff    	mov    BYTE PTR [rbp-0x2e9],al
    c346:	eb 00                	jmp    c348 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbc8>
    c348:	8a 85 17 fd ff ff    	mov    al,BYTE PTR [rbp-0x2e9]
    c34e:	a8 01                	test   al,0x1
    c350:	75 05                	jne    c357 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbd7>
    c352:	e9 25 01 00 00       	jmp    c47c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcfc>
                            if(cmd_args.size() != 0)
    c357:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c35e:	e8 fd 9a ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c363:	48 83 f8 00          	cmp    rax,0x0
    c367:	0f 84 f6 00 00 00    	je     c463 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce3>
                                for(std::size_t i = 0; i < cmd_args.size() - 1; i++)
    c36d:	48 c7 85 20 fe ff ff 	mov    QWORD PTR [rbp-0x1e0],0x0
    c374:	00 00 00 00 
    c378:	48 8b 85 20 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e0]
    c37f:	48 89 85 00 fd ff ff 	mov    QWORD PTR [rbp-0x300],rax
    c386:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c38d:	e8 ce 9a ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c392:	48 89 c1             	mov    rcx,rax
    c395:	48 8b 85 00 fd ff ff 	mov    rax,QWORD PTR [rbp-0x300]
    c39c:	48 83 e9 01          	sub    rcx,0x1
    c3a0:	48 39 c8             	cmp    rax,rcx
    c3a3:	0f 83 83 00 00 00    	jae    c42c <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcac>
                                    terminal.print("%s ", cmd_args[i].c_str());
    c3a9:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c3b0:	48 89 85 f8 fc ff ff 	mov    QWORD PTR [rbp-0x308],rax
    c3b7:	48 8b b5 20 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1e0]
    c3be:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c3c5:	e8 86 a3 ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c3ca:	48 89 c7             	mov    rdi,rax
    c3cd:	e8 de 9a ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c3d2:	48 8b bd f8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x308]
    c3d9:	48 89 c2             	mov    rdx,rax
    c3dc:	48 8d 35 38 50 00 00 	lea    rsi,[rip+0x5038]        # 1141b <_IO_stdin_used+0x41b>
    c3e3:	31 c0                	xor    eax,eax
    c3e5:	e8 66 ce ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c3ea:	eb 00                	jmp    c3ec <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xc6c>
                                }
    c3ec:	eb 00                	jmp    c3ee <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xc6e>
                                for(std::size_t i = 0; i < cmd_args.size() - 1; i++)
    c3ee:	48 8b 85 20 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e0]
    c3f5:	48 83 c0 01          	add    rax,0x1
    c3f9:	48 89 85 20 fe ff ff 	mov    QWORD PTR [rbp-0x1e0],rax
    c400:	e9 73 ff ff ff       	jmp    c378 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xbf8>
    c405:	f3 0f 1e fa          	endbr64
    c409:	48 89 c1             	mov    rcx,rax
}
    c40c:	89 d0                	mov    eax,edx
    c40e:	48 89 8d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rcx
    c415:	89 85 2c fe ff ff    	mov    DWORD PTR [rbp-0x1d4],eax
                    }
    c41b:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c422:	e8 b9 a1 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c427:	e9 ac 04 00 00       	jmp    c8d8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1158>
                                terminal.print(cmd_args.back().c_str());
    c42c:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c433:	48 89 85 f0 fc ff ff 	mov    QWORD PTR [rbp-0x310],rax
    c43a:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c441:	e8 aa b1 ff ff       	call   75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv>
    c446:	48 89 c7             	mov    rdi,rax
    c449:	e8 62 9a ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c44e:	48 8b bd f0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x310]
    c455:	48 89 c6             	mov    rsi,rax
    c458:	31 c0                	xor    eax,eax
    c45a:	e8 f1 cd ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c45f:	eb 00                	jmp    c461 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce1>
                            }
    c461:	eb 00                	jmp    c463 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xce3>
                            terminal.print("\r\n");
    c463:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c46a:	48 8d 35 c5 4f 00 00 	lea    rsi,[rip+0x4fc5]        # 11436 <_IO_stdin_used+0x436>
    c471:	31 c0                	xor    eax,eax
    c473:	e8 d8 cd ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c478:	eb 00                	jmp    c47a <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xcfa>
                        }
    c47a:	eb 45                	jmp    c4c1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd41>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c47c:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c483:	48 89 85 e8 fc ff ff 	mov    QWORD PTR [rbp-0x318],rax
    c48a:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c491:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c498:	e8 e3 99 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c49d:	48 89 c7             	mov    rdi,rax
    c4a0:	e8 0b 9a ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c4a5:	48 8b bd e8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x318]
    c4ac:	48 89 c2             	mov    rdx,rax
    c4af:	48 8d 35 25 4f 00 00 	lea    rsi,[rip+0x4f25]        # 113db <_IO_stdin_used+0x3db>
    c4b6:	31 c0                	xor    eax,eax
    c4b8:	e8 73 ce ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c4bd:	eb 00                	jmp    c4bf <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd3f>
    c4bf:	eb 00                	jmp    c4c1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd41>
                    }
    c4c1:	48 8d bd 80 fe ff ff 	lea    rdi,[rbp-0x180]
    c4c8:	e8 13 a1 ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c4cd:	e9 f9 03 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c4d2:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c4d9:	e8 82 99 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c4de:	48 83 f8 01          	cmp    rax,0x1
    c4e2:	75 07                	jne    c4eb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xd6b>
                            exit(0);
    c4e4:	31 ff                	xor    edi,edi
    c4e6:	e8 25 81 ff ff       	call   4610 <exit@plt>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c4eb:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c4f2:	48 89 85 e0 fc ff ff 	mov    QWORD PTR [rbp-0x320],rax
    c4f9:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c500:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c507:	e8 74 99 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c50c:	48 89 c7             	mov    rdi,rax
    c50f:	e8 9c 99 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c514:	48 8b bd e0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x320]
    c51b:	48 89 c2             	mov    rdx,rax
    c51e:	48 8d 35 b6 4e 00 00 	lea    rsi,[rip+0x4eb6]        # 113db <_IO_stdin_used+0x3db>
    c525:	31 c0                	xor    eax,eax
    c527:	e8 04 ce ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c52c:	eb 00                	jmp    c52e <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xdae>
    c52e:	eb 00                	jmp    c530 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xdb0>
                        break;
    c530:	e9 96 03 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c535:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c53c:	e8 1f 99 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c541:	48 83 f8 01          	cmp    rax,0x1
    c545:	0f 85 b1 00 00 00    	jne    c5fc <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe7c>
                            terminal.print("Registers\r\n");
    c54b:	48 8b bd 58 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1a8]
    c552:	48 8d 35 c6 4e 00 00 	lea    rsi,[rip+0x4ec6]        # 1141f <_IO_stdin_used+0x41f>
    c559:	31 c0                	xor    eax,eax
    c55b:	e8 f0 cc ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c560:	eb 00                	jmp    c562 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xde2>
                            for(size_t i = 0; i < registers.size(); i++)
    c562:	48 c7 85 18 fe ff ff 	mov    QWORD PTR [rbp-0x1e8],0x0
    c569:	00 00 00 00 
    c56d:	48 8b 8d 10 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1f0]
    c574:	48 8b 85 18 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e8]
    c57b:	48 83 c1 70          	add    rcx,0x70
    c57f:	48 89 8d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rcx
    c586:	48 83 f8 0a          	cmp    rax,0xa
    c58a:	73 6e                	jae    c5fa <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe7a>
    c58c:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                                terminal.print("\t[%zu] \'%s\'\r\n", i, registers[i].c_str());
    c593:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c59a:	48 89 85 d0 fc ff ff 	mov    QWORD PTR [rbp-0x330],rax
    c5a1:	48 8b b5 18 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1e8]
    c5a8:	48 89 b5 d8 fc ff ff 	mov    QWORD PTR [rbp-0x328],rsi
    c5af:	48 83 c7 70          	add    rdi,0x70
    c5b3:	e8 18 04 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c5b8:	48 89 c7             	mov    rdi,rax
    c5bb:	e8 f0 98 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c5c0:	48 8b bd d0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x330]
    c5c7:	48 8b 95 d8 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x328]
    c5ce:	48 89 c1             	mov    rcx,rax
    c5d1:	48 8d 35 53 4e 00 00 	lea    rsi,[rip+0x4e53]        # 1142b <_IO_stdin_used+0x42b>
    c5d8:	31 c0                	xor    eax,eax
    c5da:	e8 71 cc ff ff       	call   9250 <_ZN10TerminalIO5printEPKcz>
    c5df:	eb 00                	jmp    c5e1 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe61>
                            }
    c5e1:	eb 00                	jmp    c5e3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xe63>
                            for(size_t i = 0; i < registers.size(); i++)
    c5e3:	48 8b 85 18 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1e8]
    c5ea:	48 83 c0 01          	add    rax,0x1
    c5ee:	48 89 85 18 fe ff ff 	mov    QWORD PTR [rbp-0x1e8],rax
    c5f5:	e9 73 ff ff ff       	jmp    c56d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xded>
                        }
    c5fa:	eb 45                	jmp    c641 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xec1>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c5fc:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c603:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    c60a:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c611:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c618:	e8 63 98 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c61d:	48 89 c7             	mov    rdi,rax
    c620:	e8 8b 98 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c625:	48 8b bd c8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x338]
    c62c:	48 89 c2             	mov    rdx,rax
    c62f:	48 8d 35 a5 4d 00 00 	lea    rsi,[rip+0x4da5]        # 113db <_IO_stdin_used+0x3db>
    c636:	31 c0                	xor    eax,eax
    c638:	e8 f3 cc ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c63d:	eb 00                	jmp    c63f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xebf>
    c63f:	eb 00                	jmp    c641 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xec1>
                        break;
    c641:	e9 85 02 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c646:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c64d:	e8 0e 98 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c652:	48 83 f8 01          	cmp    rax,0x1
    c656:	75 1a                	jne    c672 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xef2>
    c658:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdin_path = "";
    c65f:	48 8d 35 d2 4d 00 00 	lea    rsi,[rip+0x4dd2]        # 11438 <_IO_stdin_used+0x438>
    c666:	e8 05 9f ff ff       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    c66b:	eb 00                	jmp    c66d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xeed>
                        }
    c66d:	e9 bd 00 00 00       	jmp    c72f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfaf>
                        else if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c672:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c679:	e8 e2 97 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c67e:	48 83 f8 02          	cmp    rax,0x2
    c682:	75 64                	jne    c6e8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf68>
    c684:	31 c0                	xor    eax,eax
    c686:	89 c6                	mov    esi,eax
    c688:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c68f:	e8 bc a0 ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c694:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c69b:	48 89 c6             	mov    rsi,rax
    c69e:	48 8d 95 78 fe ff ff 	lea    rdx,[rbp-0x188]
    c6a5:	e8 56 ea ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c6aa:	88 85 c7 fc ff ff    	mov    BYTE PTR [rbp-0x339],al
    c6b0:	eb 00                	jmp    c6b2 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf32>
    c6b2:	8a 85 c7 fc ff ff    	mov    al,BYTE PTR [rbp-0x339]
    c6b8:	a8 01                	test   al,0x1
    c6ba:	75 02                	jne    c6be <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf3e>
    c6bc:	eb 2a                	jmp    c6e8 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf68>
    c6be:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdin_path = registers[arg1];
    c6c5:	48 83 c7 70          	add    rdi,0x70
    c6c9:	48 8b b5 78 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x188]
    c6d0:	e8 fb 02 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c6d5:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c6dc:	48 89 c6             	mov    rsi,rax
    c6df:	e8 bc d4 ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    c6e4:	eb 00                	jmp    c6e6 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xf66>
                        }
    c6e6:	eb 45                	jmp    c72d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfad>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c6e8:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c6ef:	48 89 85 b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rax
    c6f6:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c6fd:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c704:	e8 77 97 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c709:	48 89 c7             	mov    rdi,rax
    c70c:	e8 9f 97 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c711:	48 8b bd b8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x348]
    c718:	48 89 c2             	mov    rdx,rax
    c71b:	48 8d 35 b9 4c 00 00 	lea    rsi,[rip+0x4cb9]        # 113db <_IO_stdin_used+0x3db>
    c722:	31 c0                	xor    eax,eax
    c724:	e8 07 cc ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c729:	eb 00                	jmp    c72b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfab>
    c72b:	eb 00                	jmp    c72d <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfad>
    c72d:	eb 00                	jmp    c72f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfaf>
                        break;
    c72f:	e9 97 01 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c734:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c73b:	e8 20 97 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c740:	48 83 f8 01          	cmp    rax,0x1
    c744:	75 1e                	jne    c764 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfe4>
    c746:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdout_path = "";
    c74d:	48 83 c7 20          	add    rdi,0x20
    c751:	48 8d 35 e0 4c 00 00 	lea    rsi,[rip+0x4ce0]        # 11438 <_IO_stdin_used+0x438>
    c758:	e8 13 9e ff ff       	call   6570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
    c75d:	eb 00                	jmp    c75f <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0xfdf>
                        }
    c75f:	e9 c1 00 00 00       	jmp    c825 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a5>
                        else if(line.size() == 2 && get_reg_arg(line[0], arg1))
    c764:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c76b:	e8 f0 96 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c770:	48 83 f8 02          	cmp    rax,0x2
    c774:	75 68                	jne    c7de <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105e>
    c776:	31 c0                	xor    eax,eax
    c778:	89 c6                	mov    esi,eax
    c77a:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c781:	e8 ca 9f ff ff       	call   6750 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c786:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c78d:	48 89 c6             	mov    rsi,rax
    c790:	48 8d 95 70 fe ff ff 	lea    rdx,[rbp-0x190]
    c797:	e8 64 e9 ff ff       	call   b100 <_ZN13VarelseParser11get_reg_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm>
    c79c:	88 85 b7 fc ff ff    	mov    BYTE PTR [rbp-0x349],al
    c7a2:	eb 00                	jmp    c7a4 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1024>
    c7a4:	8a 85 b7 fc ff ff    	mov    al,BYTE PTR [rbp-0x349]
    c7aa:	a8 01                	test   al,0x1
    c7ac:	75 02                	jne    c7b0 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1030>
    c7ae:	eb 2e                	jmp    c7de <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105e>
    c7b0:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
                            streams.stdout_path = registers[arg1];
    c7b7:	48 83 c7 70          	add    rdi,0x70
    c7bb:	48 8b b5 70 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x190]
    c7c2:	e8 09 02 00 00       	call   c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>
    c7c7:	48 8b bd 10 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1f0]
    c7ce:	48 89 c6             	mov    rsi,rax
    c7d1:	48 83 c7 20          	add    rdi,0x20
    c7d5:	e8 c6 d3 ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
    c7da:	eb 00                	jmp    c7dc <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x105c>
                        }
    c7dc:	eb 45                	jmp    c823 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a3>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c7de:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c7e5:	48 89 85 a8 fc ff ff 	mov    QWORD PTR [rbp-0x358],rax
    c7ec:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c7f3:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c7fa:	e8 81 96 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c7ff:	48 89 c7             	mov    rdi,rax
    c802:	e8 a9 96 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c807:	48 8b bd a8 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x358]
    c80e:	48 89 c2             	mov    rdx,rax
    c811:	48 8d 35 c3 4b 00 00 	lea    rsi,[rip+0x4bc3]        # 113db <_IO_stdin_used+0x3db>
    c818:	31 c0                	xor    eax,eax
    c81a:	e8 11 cb ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c81f:	eb 00                	jmp    c821 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a1>
    c821:	eb 00                	jmp    c823 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a3>
    c823:	eb 00                	jmp    c825 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10a5>
                        break;
    c825:	e9 a1 00 00 00       	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        if(line.size() == 1)
    c82a:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c831:	e8 2a 96 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    c836:	48 83 f8 01          	cmp    rax,0x1
    c83a:	75 15                	jne    c851 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x10d1>
    c83c:	48 8b 85 10 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1f0]
                            streams.stdout_append = !streams.stdout_append;
    c843:	8a 48 40             	mov    cl,BYTE PTR [rax+0x40]
    c846:	80 f1 ff             	xor    cl,0xff
    c849:	80 e1 01             	and    cl,0x1
    c84c:	88 48 40             	mov    BYTE PTR [rax+0x40],cl
                        }
    c84f:	eb 45                	jmp    c896 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1116>
                            terminal.print_error("Invalid instruction '%s'\r\n", lines[ip].c_str());
    c851:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c858:	48 89 85 a0 fc ff ff 	mov    QWORD PTR [rbp-0x360],rax
    c85f:	48 8b bd 48 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1b8]
    c866:	48 8b b5 40 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x1c0]
    c86d:	e8 0e 96 ff ff       	call   5e80 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    c872:	48 89 c7             	mov    rdi,rax
    c875:	e8 36 96 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c87a:	48 8b bd a0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x360]
    c881:	48 89 c2             	mov    rdx,rax
    c884:	48 8d 35 50 4b 00 00 	lea    rsi,[rip+0x4b50]        # 113db <_IO_stdin_used+0x3db>
    c88b:	31 c0                	xor    eax,eax
    c88d:	e8 9e ca ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c892:	eb 00                	jmp    c894 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1114>
    c894:	eb 00                	jmp    c896 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1116>
                        break;
    c896:	eb 33                	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
                        terminal.print_error("Unknown command '%s'\r\n", op.c_str());
    c898:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    c89f:	48 89 85 98 fc ff ff 	mov    QWORD PTR [rbp-0x368],rax
    c8a6:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c8aa:	e8 01 96 ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    c8af:	48 8b bd 98 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x368]
    c8b6:	48 89 c2             	mov    rdx,rax
    c8b9:	48 8d 35 50 48 00 00 	lea    rsi,[rip+0x4850]        # 11110 <_IO_stdin_used+0x110>
    c8c0:	31 c0                	xor    eax,eax
    c8c2:	e8 69 ca ff ff       	call   9330 <_ZN10TerminalIO11print_errorEPKcz>
    c8c7:	eb 00                	jmp    c8c9 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1149>
                        break;
    c8c9:	eb 00                	jmp    c8cb <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114b>
    c8cb:	eb 00                	jmp    c8cd <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x114d>
        }
    c8cd:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c8d1:	e8 5a 98 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    c8d6:	eb 0b                	jmp    c8e3 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1163>
    c8d8:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    c8dc:	e8 4f 98 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    c8e1:	eb 23                	jmp    c906 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x1186>
    }
    c8e3:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c8ea:	e8 f1 9c ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    for(;ip < lines.size(); ip++)
    c8ef:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    c8f6:	48 83 c0 01          	add    rax,0x1
    c8fa:	48 89 85 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rax
    c901:	e9 df f0 ff ff       	jmp    b9e5 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x265>
    }
    c906:	48 8d bd 18 ff ff ff 	lea    rdi,[rbp-0xe8]
    c90d:	e8 ce 9c ff ff       	call   65e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>
    c912:	eb 27                	jmp    c93b <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11bb>
    c914:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
}
    c91b:	e8 e0 05 00 00       	call   cf00 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>
    c920:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c927:	00 00 
    c929:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    c92d:	48 39 c8             	cmp    rax,rcx
    c930:	75 41                	jne    c973 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11f3>
    c932:	48 81 c4 70 03 00 00 	add    rsp,0x370
    c939:	5d                   	pop    rbp
    c93a:	c3                   	ret
    c93b:	48 8d bd 50 ff ff ff 	lea    rdi,[rbp-0xb0]
    c942:	e8 b9 05 00 00       	call   cf00 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>
    c947:	48 8b 85 30 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1d0]
    c94e:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    c955:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c95c:	00 00 
    c95e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    c962:	48 39 c8             	cmp    rax,rcx
    c965:	75 0c                	jne    c973 <_ZN13VarelseParser5parseER10TerminalIORNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS7_SaIS7_EEm+0x11f3>
    c967:	48 8b bd 90 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x370]
    c96e:	e8 ed 7a ff ff       	call   4460 <_Unwind_Resume@plt>
    c973:	e8 38 7c ff ff       	call   45b0 <__stack_chk_fail@plt>
    c978:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c97f:	00 

000000000000c980 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev>:
    c980:	f3 0f 1e fa          	endbr64
    c984:	55                   	push   rbp
    c985:	48 89 e5             	mov    rbp,rsp
    c988:	48 83 ec 20          	sub    rsp,0x20
    c98c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c990:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c994:	48 89 c1             	mov    rcx,rax
    c997:	48 81 c1 40 01 00 00 	add    rcx,0x140
    c99e:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c9a2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    c9a6:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    c9aa:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    c9ae:	e8 ad 9a ff ff       	call   6460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev>
    c9b3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    c9b7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    c9bb:	48 83 c0 20          	add    rax,0x20
    c9bf:	48 39 c8             	cmp    rax,rcx
    c9c2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    c9c6:	75 de                	jne    c9a6 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEC2Ev+0x26>
    c9c8:	48 83 c4 20          	add    rsp,0x20
    c9cc:	5d                   	pop    rbp
    c9cd:	c3                   	ret
    c9ce:	66 90                	xchg   ax,ax

000000000000c9d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm10EEixEm>:

      // Element access.
      [[__nodiscard__]]
      _GLIBCXX17_CONSTEXPR reference
      operator[](size_type __n) noexcept
      {
    c9d0:	f3 0f 1e fa          	endbr64
    c9d4:	55                   	push   rbp
    c9d5:	48 89 e5             	mov    rbp,rsp
    c9d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c9dc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c9e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	__glibcxx_requires_subscript(__n);
	return _M_elems[__n];
    c9e4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    c9e8:	48 c1 e1 05          	shl    rcx,0x5
    c9ec:	48 01 c8             	add    rax,rcx
    c9ef:	5d                   	pop    rbp
    c9f0:	c3                   	ret
    c9f1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c9f8:	00 00 00 
    c9fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ca00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
    {
    ca00:	f3 0f 1e fa          	endbr64
    ca04:	55                   	push   rbp
    ca05:	48 89 e5             	mov    rbp,rsp
    ca08:	48 81 ec 00 01 00 00 	sub    rsp,0x100
    ca0f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ca16:	00 00 
    ca18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ca1c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    ca20:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    ca24:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ca28:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
      if (std::__addressof(__x) != this)
    ca2f:	48 39 45 a8          	cmp    QWORD PTR [rbp-0x58],rax
    ca33:	0f 84 a3 02 00 00    	je     ccdc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2dc>
	  const size_type __xlen = __x.size();
    ca39:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    ca3d:	e8 1e 94 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    ca42:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ca49:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
	  if (__xlen > capacity())
    ca4d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ca51:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    ca58:	e8 63 0a 00 00       	call   d4c0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>
    ca5d:	48 89 c1             	mov    rcx,rax
    ca60:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    ca67:	48 39 c8             	cmp    rax,rcx
    ca6a:	0f 86 ce 00 00 00    	jbe    cb3e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x13e>
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
    ca70:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ca74:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    ca7b:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    ca7f:	e8 8c 0b 00 00       	call   d610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    ca84:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
						   __x.end());
    ca88:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    ca8c:	e8 df 0b 00 00       	call   d670 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    ca91:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    ca98:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ca9f:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
    caa3:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    caa7:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
    caab:	e8 30 0a 00 00       	call   d4e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_>
    cab0:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cab7:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    cabb:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    cabe:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    cac5:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    cac9:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
			    _M_get_Tp_allocator());
    cad0:	e8 0b af ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    cad5:	48 8b 95 40 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc0]
    cadc:	48 8b 8d 48 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb8]
    cae3:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    cae7:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    caeb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      std::_Destroy(__first, __last);
    caef:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    caf3:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    caf7:	e8 44 bb ff ff       	call   8640 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    cafc:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      _M_deallocate(this->_M_impl._M_start,
    cb03:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
			    this->_M_impl._M_end_of_storage
    cb06:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
			    - this->_M_impl._M_start);
    cb0a:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    cb0d:	48 29 c2             	sub    rdx,rax
    cb10:	48 c1 fa 05          	sar    rdx,0x5
	      _M_deallocate(this->_M_impl._M_start,
    cb14:	e8 b7 bb ff ff       	call   86d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    cb19:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
	      this->_M_impl._M_start = __tmp;
    cb20:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    cb24:	48 89 08             	mov    QWORD PTR [rax],rcx
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
    cb27:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    cb2a:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    cb2e:	48 c1 e2 05          	shl    rdx,0x5
    cb32:	48 01 d1             	add    rcx,rdx
    cb35:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	    }
    cb39:	e9 85 01 00 00       	jmp    ccc3 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c3>
    cb3e:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	  else if (size() >= __xlen)
    cb45:	e8 16 93 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cb4a:	48 3b 45 a0          	cmp    rax,QWORD PTR [rbp-0x60]
    cb4e:	0f 82 a9 00 00 00    	jb     cbfd <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1fd>
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
    cb54:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cb58:	e8 b3 0a 00 00       	call   d610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    cb5d:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    cb64:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    cb68:	e8 03 0b 00 00       	call   d670 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    cb6d:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cb74:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    cb7b:	e8 f0 ac ff ff       	call   7870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    cb80:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    cb87:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    cb8e:	48 8b b5 70 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x90]
    cb95:	48 8b 95 68 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x98]
    cb9c:	e8 2f 0b 00 00       	call   d6d0 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>
    cba1:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cba8:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
			    end(), _M_get_Tp_allocator());
    cbac:	e8 5f ac ff ff       	call   7810 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    cbb1:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cbb8:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    cbbf:	e8 1c ae ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
    cbc4:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    cbc8:	48 8b 8d 60 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa0]
    cbcf:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
    cbd3:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    cbd7:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    cbdb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    cbdf:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    cbe3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cbe7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    cbeb:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    cbef:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    cbf3:	e8 98 0f 00 00       	call   db90 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>
	    }
    cbf8:	e9 c4 00 00 00       	jmp    ccc1 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c1>
    cbfd:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
    cc04:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc08:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc0b:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    cc12:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc16:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc19:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    cc20:	e8 3b 92 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cc25:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
    cc2c:	48 8b bd 10 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf0]
    cc33:	48 89 c1             	mov    rcx,rax
    cc36:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    cc3d:	48 c1 e1 05          	shl    rcx,0x5
    cc41:	48 01 ce             	add    rsi,rcx
			this->_M_impl._M_start);
    cc44:	48 8b 10             	mov    rdx,QWORD PTR [rax]
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
    cc47:	e8 24 0b 00 00       	call   d770 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    cc4c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
    cc53:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc57:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc5a:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    cc61:	e8 fa 91 ff ff       	call   5e60 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
    cc66:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    cc6d:	48 89 c1             	mov    rcx,rax
    cc70:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    cc77:	48 c1 e1 05          	shl    rcx,0x5
    cc7b:	48 01 c8             	add    rax,rcx
    cc7e:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
					  __x._M_impl._M_finish,
    cc85:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    cc89:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    cc8d:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
					  this->_M_impl._M_finish,
    cc94:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    cc98:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
					  _M_get_Tp_allocator());
    cc9f:	e8 3c ad ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    cca4:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    ccab:	48 8b b5 28 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd8]
    ccb2:	48 8b 95 30 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd0]
    ccb9:	48 89 c1             	mov    rcx,rax
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
    ccbc:	e8 ff 0a 00 00       	call   d7c0 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>
    ccc1:	eb 00                	jmp    ccc3 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c3>
    ccc3:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
    ccca:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    cccd:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    ccd1:	48 c1 e2 05          	shl    rdx,0x5
    ccd5:	48 01 d1             	add    rcx,rdx
    ccd8:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      return *this;
    ccdc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cce3:	00 00 
    cce5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    cce9:	48 39 c8             	cmp    rax,rcx
    ccec:	75 10                	jne    ccfe <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2fe>
    ccee:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    ccf5:	48 81 c4 00 01 00 00 	add    rsp,0x100
    ccfc:	5d                   	pop    rbp
    ccfd:	c3                   	ret
    ccfe:	e8 ad 78 ff ff       	call   45b0 <__stack_chk_fail@plt>
    cd03:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cd0a:	00 00 00 
    cd0d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cd10 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEEC2Ev>:
#endif

      //construct/destroy/copy

      /// Default constructor.
      unordered_map() = default;
    cd10:	f3 0f 1e fa          	endbr64
    cd14:	55                   	push   rbp
    cd15:	48 89 e5             	mov    rbp,rsp
    cd18:	48 83 ec 10          	sub    rsp,0x10
    cd1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cd20:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cd24:	e8 17 16 00 00       	call   e340 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>
    cd29:	48 83 c4 10          	add    rsp,0x10
    cd2d:	5d                   	pop    rbp
    cd2e:	c3                   	ret
    cd2f:	90                   	nop

000000000000cd30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc>:
      { return __sv_type(this->data(), this->size()).ends_with(__x); }
    cd30:	f3 0f 1e fa          	endbr64
    cd34:	55                   	push   rbp
    cd35:	48 89 e5             	mov    rbp,rsp
    cd38:	48 83 ec 40          	sub    rsp,0x40
    cd3c:	40 88 f0             	mov    al,sil
    cd3f:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    cd46:	00 00 
    cd48:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    cd4c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    cd50:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    cd53:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    cd57:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    cd5b:	e8 a0 c2 ff ff       	call   9000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    cd60:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    cd64:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    cd68:	e8 a3 a5 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    cd6d:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    cd71:	48 89 c2             	mov    rdx,rax
    cd74:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    cd78:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    cd7c:	e8 3f 17 00 00       	call   e4c0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC2EPKcm>
    cd81:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    cd85:	0f be 75 df          	movsx  esi,BYTE PTR [rbp-0x21]
    cd89:	e8 62 17 00 00       	call   e4f0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc>
    cd8e:	88 45 de             	mov    BYTE PTR [rbp-0x22],al
    cd91:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cd98:	00 00 
    cd9a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    cd9e:	48 39 c8             	cmp    rax,rcx
    cda1:	75 0b                	jne    cdae <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9ends_withEc+0x7e>
    cda3:	8a 45 de             	mov    al,BYTE PTR [rbp-0x22]
    cda6:	24 01                	and    al,0x1
    cda8:	48 83 c4 40          	add    rsp,0x40
    cdac:	5d                   	pop    rbp
    cdad:	c3                   	ret
    cdae:	e8 fd 77 ff ff       	call   45b0 <__stack_chk_fail@plt>
    cdb3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cdba:	00 00 00 
    cdbd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cdc0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_>:
       *  Insertion requires amortized constant time.
       */
      template<typename... _Args>
	std::pair<iterator, bool>
	emplace(_Args&&... __args)
	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
    cdc0:	f3 0f 1e fa          	endbr64
    cdc4:	55                   	push   rbp
    cdc5:	48 89 e5             	mov    rbp,rsp
    cdc8:	48 83 ec 50          	sub    rsp,0x50
    cdcc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cdd3:	00 00 
    cdd5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cdd9:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    cddd:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    cde1:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    cde5:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    cde9:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    cded:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    cdf1:	e8 4a 1d 00 00       	call   eb40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_>
    cdf6:	88 55 e0             	mov    BYTE PTR [rbp-0x20],dl
    cdf9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    cdfd:	8a 45 e0             	mov    al,BYTE PTR [rbp-0x20]
    ce00:	88 45 f0             	mov    BYTE PTR [rbp-0x10],al
    ce03:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ce07:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ce0b:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    ce0e:	88 45 b7             	mov    BYTE PTR [rbp-0x49],al
    ce11:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ce15:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ce19:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ce20:	00 00 
    ce22:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ce26:	48 39 c8             	cmp    rax,rcx
    ce29:	75 0d                	jne    ce38 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE7emplaceIJRS5_mEEESA_INSt8__detail14_Node_iteratorISC_Lb0ELb1EEEbEDpOT_+0x78>
    ce2b:	8a 55 b7             	mov    dl,BYTE PTR [rbp-0x49]
    ce2e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ce32:	48 83 c4 50          	add    rsp,0x50
    ce36:	5d                   	pop    rbp
    ce37:	c3                   	ret
    ce38:	e8 73 77 ff ff       	call   45b0 <__stack_chk_fail@plt>
    ce3d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ce40 <_ZNSt8__detaileqERKNS_19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESC_>:
      { _M_cur = _M_cur->_M_next(); }

      friend bool
      operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      noexcept
      { return __x._M_cur == __y._M_cur; }
    ce40:	f3 0f 1e fa          	endbr64
    ce44:	55                   	push   rbp
    ce45:	48 89 e5             	mov    rbp,rsp
    ce48:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ce4c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ce50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ce54:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ce57:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ce5b:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    ce5e:	0f 94 c0             	sete   al
    ce61:	24 01                	and    al,0x1
    ce63:	5d                   	pop    rbp
    ce64:	c3                   	ret
    ce65:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ce6c:	00 00 00 
    ce6f:	90                   	nop

000000000000ce70 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE4findERSB_>:
       *  pointing to the sought after element.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */
      iterator
      find(const key_type& __x)
      { return _M_h.find(__x); }
    ce70:	f3 0f 1e fa          	endbr64
    ce74:	55                   	push   rbp
    ce75:	48 89 e5             	mov    rbp,rsp
    ce78:	48 83 ec 20          	sub    rsp,0x20
    ce7c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    ce80:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    ce84:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    ce88:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    ce8c:	e8 cf 30 00 00       	call   ff60 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>
    ce91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ce95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ce99:	48 83 c4 20          	add    rsp,0x20
    ce9d:	5d                   	pop    rbp
    ce9e:	c3                   	ret
    ce9f:	90                   	nop

000000000000cea0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE3endEv>:
      { return _M_h.end(); }
    cea0:	f3 0f 1e fa          	endbr64
    cea4:	55                   	push   rbp
    cea5:	48 89 e5             	mov    rbp,rsp
    cea8:	48 83 ec 10          	sub    rsp,0x10
    ceac:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    ceb0:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    ceb4:	e8 b7 31 00 00       	call   10070 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>
    ceb9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cebd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cec1:	48 83 c4 10          	add    rsp,0x10
    cec5:	5d                   	pop    rbp
    cec6:	c3                   	ret
    cec7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cece:	00 00 

000000000000ced0 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEE2atERSB_>:
       *           such a data is present in the %unordered_map.
       *  @throw  std::out_of_range  If no such data is present.
       */
      mapped_type&
      at(const key_type& __k)
      { return _M_h.at(__k); }
    ced0:	f3 0f 1e fa          	endbr64
    ced4:	55                   	push   rbp
    ced5:	48 89 e5             	mov    rbp,rsp
    ced8:	48 83 ec 10          	sub    rsp,0x10
    cedc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cee0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    cee4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cee8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    ceec:	e8 df 31 00 00       	call   100d0 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_>
    cef1:	48 83 c4 10          	add    rsp,0x10
    cef5:	5d                   	pop    rbp
    cef6:	c3                   	ret
    cef7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cefe:	00 00 

000000000000cf00 <_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_mEEED2Ev>:
    class unordered_map
    cf00:	f3 0f 1e fa          	endbr64
    cf04:	55                   	push   rbp
    cf05:	48 89 e5             	mov    rbp,rsp
    cf08:	48 83 ec 10          	sub    rsp,0x10
    cf0c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cf10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    cf14:	e8 d7 16 00 00       	call   e5f0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev>
    cf19:	48 83 c4 10          	add    rsp,0x10
    cf1d:	5d                   	pop    rbp
    cf1e:	c3                   	ret
    cf1f:	90                   	nop

000000000000cf20 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__lhs.append(__rhs)); }
    cf20:	f3 0f 1e fa          	endbr64
    cf24:	55                   	push   rbp
    cf25:	48 89 e5             	mov    rbp,rsp
    cf28:	48 83 ec 30          	sub    rsp,0x30
    cf2c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    cf30:	48 89 f8             	mov    rax,rdi
    cf33:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    cf37:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    cf3b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    cf3f:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    cf43:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    cf47:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    cf4b:	e8 90 02 00 00       	call   d1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    cf50:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    cf54:	48 89 c6             	mov    rsi,rax
    cf57:	e8 a4 ae ff ff       	call   7e00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_>
    cf5c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    cf60:	48 83 c4 30          	add    rsp,0x30
    cf64:	5d                   	pop    rbp
    cf65:	c3                   	ret
    cf66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cf6d:	00 00 00 

000000000000cf70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    {
    cf70:	f3 0f 1e fa          	endbr64
    cf74:	55                   	push   rbp
    cf75:	48 89 e5             	mov    rbp,rsp
    cf78:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    cf7f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    cf83:	48 89 f8             	mov    rax,rdi
    cf86:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    cf8a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cf91:	00 00 
    cf93:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cf97:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    cf9b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    cf9f:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    cfa3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    cfa7:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    cfab:	e8 50 a1 ff ff       	call   7100 <_ZNSt11char_traitsIcE6lengthEPKc>
    cfb0:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
				     __rhs.c_str(), __rhs.size(),
    cfb4:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    cfb8:	e8 f3 8e ff ff       	call   5eb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    cfbd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    cfc1:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    cfc5:	e8 46 a3 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    cfca:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
				     __rhs.get_allocator());
    cfce:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    cfd2:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    cfd6:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    cfda:	e8 e1 03 00 00       	call   d3c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>
    cfdf:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
    cfe3:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    cfe7:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    cfeb:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    cfef:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
    cff3:	4c 8b 4d b0          	mov    r9,QWORD PTR [rbp-0x50]
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    cff7:	e8 44 02 00 00       	call   d240 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE>
    cffc:	eb 00                	jmp    cffe <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x8e>
    cffe:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    d002:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d006:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d00d:	00 00 
    d00f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d013:	48 39 c8             	cmp    rax,rcx
    d016:	75 4e                	jne    d066 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf6>
    d018:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    d01c:	48 81 c4 90 00 00 00 	add    rsp,0x90
    d023:	5d                   	pop    rbp
    d024:	c3                   	ret
    d025:	f3 0f 1e fa          	endbr64
    d029:	48 89 c1             	mov    rcx,rax
    }
    d02c:	89 d0                	mov    eax,edx
    d02e:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    d032:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    d035:	48 8d 45 f7          	lea    rax,[rbp-0x9]
    d039:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
      return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
    d03d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d041:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    d048:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d04f:	00 00 
    d051:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d055:	48 39 c8             	cmp    rax,rcx
    d058:	75 0c                	jne    d066 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf6>
    d05a:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
    d061:	e8 fa 73 ff ff       	call   4460 <_Unwind_Resume@plt>
    d066:	e8 45 75 ff ff       	call   45b0 <__stack_chk_fail@plt>
    d06b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
      { return const_iterator(_M_data()); }
    d070:	f3 0f 1e fa          	endbr64
    d074:	55                   	push   rbp
    d075:	48 89 e5             	mov    rbp,rsp
    d078:	48 83 ec 30          	sub    rsp,0x30
    d07c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d083:	00 00 
    d085:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d089:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    d08d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d091:	e8 0a 98 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    d096:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d09a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d09e:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d0a2:	e8 d9 03 00 00       	call   d480 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>
    d0a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d0ab:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d0af:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d0b6:	00 00 
    d0b8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d0bc:	48 39 c8             	cmp    rax,rcx
    d0bf:	75 0a                	jne    d0cb <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv+0x5b>
    d0c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d0c5:	48 83 c4 30          	add    rsp,0x30
    d0c9:	5d                   	pop    rbp
    d0ca:	c3                   	ret
    d0cb:	e8 e0 74 ff ff       	call   45b0 <__stack_chk_fail@plt>

000000000000d0d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
      { return const_iterator(_M_data() + this->size()); }
    d0d0:	f3 0f 1e fa          	endbr64
    d0d4:	55                   	push   rbp
    d0d5:	48 89 e5             	mov    rbp,rsp
    d0d8:	48 83 ec 40          	sub    rsp,0x40
    d0dc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d0e3:	00 00 
    d0e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d0e9:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    d0ed:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d0f1:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    d0f5:	e8 a6 97 ff ff       	call   68a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    d0fa:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    d0fe:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d102:	e8 09 a2 ff ff       	call   7310 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    d107:	48 89 c1             	mov    rcx,rax
    d10a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    d10e:	48 01 c8             	add    rax,rcx
    d111:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d115:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d119:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d11d:	e8 5e 03 00 00       	call   d480 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>
    d122:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d126:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d12a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d131:	00 00 
    d133:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d137:	48 39 c8             	cmp    rax,rcx
    d13a:	75 0a                	jne    d146 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv+0x76>
    d13c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d140:	48 83 c4 40          	add    rsp,0x40
    d144:	5d                   	pop    rbp
    d145:	c3                   	ret
    d146:	e8 65 74 ff ff       	call   45b0 <__stack_chk_fail@plt>
    d14b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d150 <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    d150:	f3 0f 1e fa          	endbr64
    d154:	55                   	push   rbp
    d155:	48 89 e5             	mov    rbp,rsp
    d158:	48 83 ec 20          	sub    rsp,0x20
    d15c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d160:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d164:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d168:	e8 33 03 00 00       	call   d4a0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>
    d16d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d170:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d174:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d178:	e8 23 03 00 00       	call   d4a0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>
    d17d:	48 89 c1             	mov    rcx,rax
    d180:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d184:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    d187:	0f 94 c0             	sete   al
    d18a:	24 01                	and    al,0x1
    d18c:	48 83 c4 20          	add    rsp,0x20
    d190:	5d                   	pop    rbp
    d191:	c3                   	ret
    d192:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d199:	00 00 00 
    d19c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d1a0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv>:
      { return *_M_current; }
    d1a0:	f3 0f 1e fa          	endbr64
    d1a4:	55                   	push   rbp
    d1a5:	48 89 e5             	mov    rbp,rsp
    d1a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d1ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d1b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1b3:	5d                   	pop    rbp
    d1b4:	c3                   	ret
    d1b5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d1bc:	00 00 00 
    d1bf:	90                   	nop

000000000000d1c0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv>:
      {
    d1c0:	f3 0f 1e fa          	endbr64
    d1c4:	55                   	push   rbp
    d1c5:	48 89 e5             	mov    rbp,rsp
    d1c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d1cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    d1d0:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    d1d3:	48 83 c1 01          	add    rcx,0x1
    d1d7:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    d1da:	5d                   	pop    rbp
    d1db:	c3                   	ret
    d1dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      {
    d1e0:	f3 0f 1e fa          	endbr64
    d1e4:	55                   	push   rbp
    d1e5:	48 89 e5             	mov    rbp,rsp
    d1e8:	48 83 ec 20          	sub    rsp,0x20
    d1ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d1f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d1f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d1f8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	const size_type __n = traits_type::length(__s);
    d1fc:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d200:	e8 fb 9e ff ff       	call   7100 <_ZNSt11char_traitsIcE6lengthEPKc>
    d205:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d209:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	_M_check_length(size_type(0), __n, "basic_string::append");
    d20d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d211:	31 c0                	xor    eax,eax
    d213:	89 c6                	mov    esi,eax
    d215:	48 8d 0d 8b 3f 00 00 	lea    rcx,[rip+0x3f8b]        # 111a7 <_IO_stdin_used+0x1a7>
    d21c:	e8 8f af ff ff       	call   81b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
    d221:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return _M_append(__s, __n);
    d225:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    d229:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d22d:	e8 be bb ff ff       	call   8df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d232:	48 83 c4 20          	add    rsp,0x20
    d236:	5d                   	pop    rbp
    d237:	c3                   	ret
    d238:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d23f:	00 

000000000000d240 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE>:
    {
    d240:	f3 0f 1e fa          	endbr64
    d244:	55                   	push   rbp
    d245:	48 89 e5             	mov    rbp,rsp
    d248:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    d24f:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
    d256:	48 89 f8             	mov    rax,rdi
    d259:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    d260:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d267:	00 00 
    d269:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d26d:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    d271:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
    d275:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    d279:	48 89 4d 88          	mov    QWORD PTR [rbp-0x78],rcx
    d27d:	4c 89 45 80          	mov    QWORD PTR [rbp-0x80],r8
    d281:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
      _Str __str(_Alloc_traits::_S_select_on_copy(__a));
    d288:	c6 85 77 ff ff ff 00 	mov    BYTE PTR [rbp-0x89],0x0
    d28f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    d296:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    d29a:	48 89 b5 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rsi
    d2a1:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
    d2a5:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    d2a9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    d2ad:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    d2b1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      { return __rhs; }
    d2b5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d2b9:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    d2bd:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d2c1:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d2c5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    d2c9:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d2cd:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d2d1:	e8 4a 01 00 00       	call   d420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_>
    d2d6:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    d2dd:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d2e4:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
      __str.reserve(__lhs_len + __rhs_len);
    d2e8:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
    d2ec:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    d2f0:	48 01 c6             	add    rsi,rax
    d2f3:	e8 e8 bb ff ff       	call   8ee0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    d2f8:	eb 00                	jmp    d2fa <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xba>
    d2fa:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
      __str.append(__lhs, __lhs_len);
    d301:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    d305:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
    d309:	e8 92 ba ff ff       	call   8da0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    d30e:	eb 00                	jmp    d310 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xd0>
    d310:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
      __str.append(__rhs, __rhs_len);
    d317:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
    d31b:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    d31f:	e8 7c ba ff ff       	call   8da0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    d324:	eb 00                	jmp    d326 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0xe6>
      return __str;
    d326:	c6 85 77 ff ff ff 01 	mov    BYTE PTR [rbp-0x89],0x1
    }
    d32d:	f6 85 77 ff ff ff 01 	test   BYTE PTR [rbp-0x89],0x1
    d334:	75 32                	jne    d368 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x128>
    d336:	eb 24                	jmp    d35c <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x11c>
    d338:	f3 0f 1e fa          	endbr64
    d33c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d343:	48 89 c1             	mov    rcx,rax
    d346:	89 d0                	mov    eax,edx
    d348:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    d34f:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
    d355:	e8 d6 8d ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    d35a:	eb 2e                	jmp    d38a <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x14a>
    d35c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    d363:	e8 c8 8d ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    d368:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d36f:	00 00 
    d371:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d375:	48 39 c8             	cmp    rax,rcx
    d378:	75 3c                	jne    d3b6 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x176>
    d37a:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    d381:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    d388:	5d                   	pop    rbp
    d389:	c3                   	ret
    d38a:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    d391:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    d398:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d39f:	00 00 
    d3a1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d3a5:	48 39 c8             	cmp    rax,rcx
    d3a8:	75 0c                	jne    d3b6 <_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE+0x176>
    d3aa:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
    d3b1:	e8 aa 70 ff ff       	call   4460 <_Unwind_Resume@plt>
    d3b6:	e8 f5 71 ff ff       	call   45b0 <__stack_chk_fail@plt>
    d3bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d3c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
      { return _M_get_allocator(); }
    d3c0:	f3 0f 1e fa          	endbr64
    d3c4:	55                   	push   rbp
    d3c5:	48 89 e5             	mov    rbp,rsp
    d3c8:	48 83 ec 40          	sub    rsp,0x40
    d3cc:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
    d3d0:	48 89 f8             	mov    rax,rdi
    d3d3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    d3d7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    d3db:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    d3df:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d3e3:	e8 28 95 ff ff       	call   6910 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    d3e8:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    d3ec:	48 89 c1             	mov    rcx,rax
    d3ef:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    d3f3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d3f7:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    d3fb:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d3ff:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    d403:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    d407:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    d40b:	48 83 c4 40          	add    rsp,0x40
    d40f:	5d                   	pop    rbp
    d410:	c3                   	ret
    d411:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d418:	00 00 00 
    d41b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_>:
      {
    d420:	f3 0f 1e fa          	endbr64
    d424:	55                   	push   rbp
    d425:	48 89 e5             	mov    rbp,rsp
    d428:	48 83 ec 20          	sub    rsp,0x20
    d42c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d430:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d434:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d438:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
      : _M_dataplus(_M_local_data(), __a)
    d43c:	e8 9f 94 ff ff       	call   68e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    d441:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d445:	48 89 c6             	mov    rsi,rax
    d448:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d44c:	e8 6f 9c ff ff       	call   70c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_>
    d451:	eb 00                	jmp    d453 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_+0x33>
    d453:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d457:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d45b:	31 c0                	xor    eax,eax
    d45d:	89 c6                	mov    esi,eax
	_M_set_length(0);
    d45f:	e8 0c 98 ff ff       	call   6c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
    d464:	eb 00                	jmp    d466 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_+0x46>
      }
    d466:	48 83 c4 20          	add    rsp,0x20
    d46a:	5d                   	pop    rbp
    d46b:	c3                   	ret
    d46c:	f3 0f 1e fa          	endbr64
    d470:	48 89 c7             	mov    rdi,rax
      : _M_dataplus(_M_local_data(), __a)
    d473:	e8 48 94 ff ff       	call   68c0 <__clang_call_terminate>
    d478:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d47f:	00 

000000000000d480 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_>:
      : _M_current(__i) { }
    d480:	f3 0f 1e fa          	endbr64
    d484:	55                   	push   rbp
    d485:	48 89 e5             	mov    rbp,rsp
    d488:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d48c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d490:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d494:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    d498:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    d49b:	48 89 08             	mov    QWORD PTR [rax],rcx
    d49e:	5d                   	pop    rbp
    d49f:	c3                   	ret

000000000000d4a0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv>:
      { return _M_current; }
    d4a0:	f3 0f 1e fa          	endbr64
    d4a4:	55                   	push   rbp
    d4a5:	48 89 e5             	mov    rbp,rsp
    d4a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d4ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d4b0:	5d                   	pop    rbp
    d4b1:	c3                   	ret
    d4b2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d4b9:	00 00 00 
    d4bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d4c0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>:
      {
    d4c0:	f3 0f 1e fa          	endbr64
    d4c4:	55                   	push   rbp
    d4c5:	48 89 e5             	mov    rbp,rsp
    d4c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d4cc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
	return size_type(this->_M_impl._M_end_of_storage
    d4d0:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
			   - this->_M_impl._M_start);
    d4d4:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    d4d7:	48 29 c8             	sub    rax,rcx
    d4da:	48 c1 f8 05          	sar    rax,0x5
	return size_type(this->_M_impl._M_end_of_storage
    d4de:	5d                   	pop    rbp
    d4df:	c3                   	ret

000000000000d4e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_>:
	{
    d4e0:	f3 0f 1e fa          	endbr64
    d4e4:	55                   	push   rbp
    d4e5:	48 89 e5             	mov    rbp,rsp
    d4e8:	48 83 ec 70          	sub    rsp,0x70
    d4ec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d4f3:	00 00 
    d4f5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d4f9:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
    d4fd:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d501:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    d505:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    d509:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d50d:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
	  pointer __result = this->_M_allocate(__n);
    d511:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    d515:	e8 b6 a3 ff ff       	call   78d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    d51a:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    d51e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	      std::__uninitialized_copy_a(__first, __last, __result,
    d522:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d526:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d52a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d52e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d532:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d536:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
					  _M_get_Tp_allocator());
    d53a:	e8 a1 a4 ff ff       	call   79e0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    d53f:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    d543:	48 89 c1             	mov    rcx,rax
	      std::__uninitialized_copy_a(__first, __last, __result,
    d546:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d54a:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d54e:	e8 ad 02 00 00       	call   d800 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>
    d553:	eb 00                	jmp    d555 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x75>
	      return __result;
    d555:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d559:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    d55d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d564:	00 00 
    d566:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d56a:	48 39 c8             	cmp    rax,rcx
    d56d:	0f 85 97 00 00 00    	jne    d60a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d573:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    d577:	48 83 c4 70          	add    rsp,0x70
    d57b:	5d                   	pop    rbp
    d57c:	c3                   	ret
    d57d:	f3 0f 1e fa          	endbr64
    d581:	48 89 c1             	mov    rcx,rax
	}
    d584:	89 d0                	mov    eax,edx
    d586:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d58a:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
	    }
    d58d:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    d591:	e8 0a 6f ff ff       	call   44a0 <__cxa_begin_catch@plt>
    d596:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
	      _M_deallocate(__result, __n);
    d59a:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    d59e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    d5a2:	e8 29 b1 ff ff       	call   86d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
    d5a7:	eb 00                	jmp    d5a9 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xc9>
	      __throw_exception_again;
    d5a9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d5b0:	00 00 
    d5b2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d5b6:	48 39 c8             	cmp    rax,rcx
    d5b9:	75 4f                	jne    d60a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d5bb:	e8 20 71 ff ff       	call   46e0 <__cxa_rethrow@plt>
    d5c0:	eb 48                	jmp    d60a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d5c2:	f3 0f 1e fa          	endbr64
    d5c6:	48 89 c1             	mov    rcx,rax
	}
    d5c9:	89 d0                	mov    eax,edx
    d5cb:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d5cf:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
	    }
    d5d2:	e8 d9 71 ff ff       	call   47b0 <__cxa_end_catch@plt>
    d5d7:	eb 00                	jmp    d5d9 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xf9>
    d5d9:	eb 00                	jmp    d5db <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0xfb>
    d5db:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d5df:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    d5e3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d5ea:	00 00 
    d5ec:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d5f0:	48 39 c8             	cmp    rax,rcx
    d5f3:	75 15                	jne    d60a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_+0x12a>
    d5f5:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    d5f9:	e8 62 6e ff ff       	call   4460 <_Unwind_Resume@plt>
    d5fe:	f3 0f 1e fa          	endbr64
    d602:	48 89 c7             	mov    rdi,rax
    d605:	e8 b6 92 ff ff       	call   68c0 <__clang_call_terminate>
    d60a:	e8 a1 6f ff ff       	call   45b0 <__stack_chk_fail@plt>
    d60f:	90                   	nop

000000000000d610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      { return const_iterator(this->_M_impl._M_start); }
    d610:	f3 0f 1e fa          	endbr64
    d614:	55                   	push   rbp
    d615:	48 89 e5             	mov    rbp,rsp
    d618:	48 83 ec 20          	sub    rsp,0x20
    d61c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d623:	00 00 
    d625:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d629:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d62d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    d631:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d635:	e8 36 05 00 00       	call   db70 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>
    d63a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d63e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d642:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d649:	00 00 
    d64b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d64f:	48 39 c8             	cmp    rax,rcx
    d652:	75 0a                	jne    d65e <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv+0x4e>
    d654:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d658:	48 83 c4 20          	add    rsp,0x20
    d65c:	5d                   	pop    rbp
    d65d:	c3                   	ret
    d65e:	e8 4d 6f ff ff       	call   45b0 <__stack_chk_fail@plt>
    d663:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d66a:	00 00 00 
    d66d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d670 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      { return const_iterator(this->_M_impl._M_finish); }
    d670:	f3 0f 1e fa          	endbr64
    d674:	55                   	push   rbp
    d675:	48 89 e5             	mov    rbp,rsp
    d678:	48 83 ec 20          	sub    rsp,0x20
    d67c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d683:	00 00 
    d685:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d689:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    d68d:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    d691:	48 83 c6 08          	add    rsi,0x8
    d695:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d699:	e8 d2 04 00 00       	call   db70 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>
    d69e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d6a2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d6a6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d6ad:	00 00 
    d6af:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d6b3:	48 39 c8             	cmp    rax,rcx
    d6b6:	75 0a                	jne    d6c2 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv+0x52>
    d6b8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d6bc:	48 83 c4 20          	add    rsp,0x20
    d6c0:	5d                   	pop    rbp
    d6c1:	c3                   	ret
    d6c2:	e8 e9 6e ff ff       	call   45b0 <__stack_chk_fail@plt>
    d6c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    d6ce:	00 00 

000000000000d6d0 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>:
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    {
    d6d0:	f3 0f 1e fa          	endbr64
    d6d4:	55                   	push   rbp
    d6d5:	48 89 e5             	mov    rbp,rsp
    d6d8:	48 83 ec 60          	sub    rsp,0x60
    d6dc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d6e3:	00 00 
    d6e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d6e9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d6ed:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d6f1:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    d6f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d6f9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d6fd:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    d701:	e8 8a 06 00 00       	call   dd90 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
    d706:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    d70a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d70e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    d712:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d716:	e8 75 06 00 00       	call   dd90 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
    d71b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    d71f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d723:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return std::__copy_move_a<__is_move_iterator<_II>::__value>
    d727:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    d72b:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    d72f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    d733:	e8 98 05 00 00       	call   dcd0 <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>
    d738:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d73c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d740:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    d744:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d74b:	00 00 
    d74d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d751:	48 39 c8             	cmp    rax,rcx
    d754:	75 0a                	jne    d760 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_+0x90>
    d756:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    d75a:	48 83 c4 60          	add    rsp,0x60
    d75e:	5d                   	pop    rbp
    d75f:	c3                   	ret
    d760:	e8 4b 6e ff ff       	call   45b0 <__stack_chk_fail@plt>
    d765:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d76c:	00 00 00 
    d76f:	90                   	nop

000000000000d770 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    d770:	f3 0f 1e fa          	endbr64
    d774:	55                   	push   rbp
    d775:	48 89 e5             	mov    rbp,rsp
    d778:	48 83 ec 20          	sub    rsp,0x20
    d77c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d780:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d784:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    d788:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d78c:	e8 3f 09 00 00       	call   e0d0 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    d791:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d795:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    d799:	e8 32 09 00 00       	call   e0d0 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    d79e:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d7a2:	48 89 c6             	mov    rsi,rax
    d7a5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move_a<__is_move_iterator<_II>::__value>
    d7a9:	e8 92 08 00 00       	call   e040 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    d7ae:	48 83 c4 20          	add    rsp,0x20
    d7b2:	5d                   	pop    rbp
    d7b3:	c3                   	ret
    d7b4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d7bb:	00 00 00 
    d7be:	66 90                	xchg   ax,ax

000000000000d7c0 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>:
    {
    d7c0:	f3 0f 1e fa          	endbr64
    d7c4:	55                   	push   rbp
    d7c5:	48 89 e5             	mov    rbp,rsp
    d7c8:	48 83 ec 20          	sub    rsp,0x20
    d7cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    d7d0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    d7d4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    d7d8:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
      return std::uninitialized_copy(__first, __last, __result);
    d7dc:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    d7e0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    d7e4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    d7e8:	e8 f3 09 00 00       	call   e1e0 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    d7ed:	48 83 c4 20          	add    rsp,0x20
    d7f1:	5d                   	pop    rbp
    d7f2:	c3                   	ret
    d7f3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d7fa:	00 00 00 
    d7fd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d800 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>:
    {
    d800:	f3 0f 1e fa          	endbr64
    d804:	55                   	push   rbp
    d805:	48 89 e5             	mov    rbp,rsp
    d808:	48 83 ec 40          	sub    rsp,0x40
    d80c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d813:	00 00 
    d815:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d819:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d81d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d821:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    d825:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
      return std::uninitialized_copy(__first, __last, __result);
    d829:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d82d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d831:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d835:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d839:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    d83d:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d841:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d845:	e8 26 00 00 00       	call   d870 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
    d84a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d84e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d855:	00 00 
    d857:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d85b:	48 39 c8             	cmp    rax,rcx
    d85e:	75 0a                	jne    d86a <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E+0x6a>
    d860:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d864:	48 83 c4 40          	add    rsp,0x40
    d868:	5d                   	pop    rbp
    d869:	c3                   	ret
    d86a:	e8 41 6d ff ff       	call   45b0 <__stack_chk_fail@plt>
    d86f:	90                   	nop

000000000000d870 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    {
    d870:	f3 0f 1e fa          	endbr64
    d874:	55                   	push   rbp
    d875:	48 89 e5             	mov    rbp,rsp
    d878:	48 83 ec 40          	sub    rsp,0x40
    d87c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d883:	00 00 
    d885:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d889:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d88d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d891:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
      const bool __can_memmove = __is_trivial(_ValueType1);
    d895:	c6 45 cf 00          	mov    BYTE PTR [rbp-0x31],0x0
      const bool __assignable
    d899:	c6 45 ce 00          	mov    BYTE PTR [rbp-0x32],0x0
	__uninit_copy(__first, __last, __result);
    d89d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d8a1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d8a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d8a9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d8ad:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
      return std::__uninitialized_copy<__can_memmove && __assignable>::
    d8b1:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d8b5:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d8b9:	e8 32 00 00 00       	call   d8f0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>
    d8be:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d8c2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d8c9:	00 00 
    d8cb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d8cf:	48 39 c8             	cmp    rax,rcx
    d8d2:	75 0a                	jne    d8de <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x6e>
    d8d4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    d8d8:	48 83 c4 40          	add    rsp,0x40
    d8dc:	5d                   	pop    rbp
    d8dd:	c3                   	ret
    d8de:	e8 cd 6c ff ff       	call   45b0 <__stack_chk_fail@plt>
    d8e3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d8ea:	00 00 00 
    d8ed:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d8f0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>:
	{ return std::__do_uninit_copy(__first, __last, __result); }
    d8f0:	f3 0f 1e fa          	endbr64
    d8f4:	55                   	push   rbp
    d8f5:	48 89 e5             	mov    rbp,rsp
    d8f8:	48 83 ec 40          	sub    rsp,0x40
    d8fc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d903:	00 00 
    d905:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d909:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d90d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d911:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
    d915:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d919:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    d91d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d921:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d925:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    d929:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d92d:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d931:	e8 2a 00 00 00       	call   d960 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
    d936:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    d93a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d941:	00 00 
    d943:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    d947:	48 39 c8             	cmp    rax,rcx
    d94a:	75 0a                	jne    d956 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x66>
    d94c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    d950:	48 83 c4 40          	add    rsp,0x40
    d954:	5d                   	pop    rbp
    d955:	c3                   	ret
    d956:	e8 55 6c ff ff       	call   45b0 <__stack_chk_fail@plt>
    d95b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d960 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    {
    d960:	f3 0f 1e fa          	endbr64
    d964:	55                   	push   rbp
    d965:	48 89 e5             	mov    rbp,rsp
    d968:	48 83 ec 50          	sub    rsp,0x50
    d96c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d973:	00 00 
    d975:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d979:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    d97d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    d981:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      _ForwardIterator __cur = __result;
    d985:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    d989:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  for (; __first != __last; ++__first, (void)++__cur)
    d98d:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d991:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    d995:	e8 f6 00 00 00       	call   da90 <_ZN9__gnu_cxxeqIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    d99a:	34 ff                	xor    al,0xff
    d99c:	a8 01                	test   al,0x1
    d99e:	75 02                	jne    d9a2 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x42>
    d9a0:	eb 79                	jmp    da1b <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xbb>
	    std::_Construct(std::__addressof(*__cur), *__first);
    d9a2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d9a6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    d9aa:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d9ae:	e8 5d 01 00 00       	call   db10 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    d9b3:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    d9b7:	48 89 c6             	mov    rsi,rax
    d9ba:	e8 21 01 00 00       	call   dae0 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>
    d9bf:	eb 00                	jmp    d9c1 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x61>
    d9c1:	eb 00                	jmp    d9c3 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x63>
	  for (; __first != __last; ++__first, (void)++__cur)
    d9c3:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    d9c7:	e8 64 01 00 00       	call   db30 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
    d9cc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d9d0:	48 83 c0 20          	add    rax,0x20
    d9d4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    d9d8:	eb b3                	jmp    d98d <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x2d>
    d9da:	f3 0f 1e fa          	endbr64
    d9de:	48 89 c1             	mov    rcx,rax
    }
    d9e1:	89 d0                	mov    eax,edx
    d9e3:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    d9e7:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
	}
    d9ea:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    d9ee:	e8 ad 6a ff ff       	call   44a0 <__cxa_begin_catch@plt>
	  std::_Destroy(__result, __cur);
    d9f3:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    d9f7:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    d9fb:	e8 40 ac ff ff       	call   8640 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    da00:	eb 00                	jmp    da02 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xa2>
	  __throw_exception_again;
    da02:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    da09:	00 00 
    da0b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    da0f:	48 39 c8             	cmp    rax,rcx
    da12:	75 73                	jne    da87 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    da14:	e8 c7 6c ff ff       	call   46e0 <__cxa_rethrow@plt>
    da19:	eb 6c                	jmp    da87 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
	  return __cur;
    da1b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    da1f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    da23:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    da2a:	00 00 
    da2c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    da30:	48 39 c8             	cmp    rax,rcx
    da33:	75 52                	jne    da87 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    da35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    da39:	48 83 c4 50          	add    rsp,0x50
    da3d:	5d                   	pop    rbp
    da3e:	c3                   	ret
    da3f:	f3 0f 1e fa          	endbr64
    da43:	48 89 c1             	mov    rcx,rax
    }
    da46:	89 d0                	mov    eax,edx
    da48:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    da4c:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
	}
    da4f:	e8 5c 6d ff ff       	call   47b0 <__cxa_end_catch@plt>
    da54:	eb 00                	jmp    da56 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xf6>
    da56:	eb 00                	jmp    da58 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0xf8>
    da58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    da5c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    da60:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    da67:	00 00 
    da69:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    da6d:	48 39 c8             	cmp    rax,rcx
    da70:	75 15                	jne    da87 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_+0x127>
    da72:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    da76:	e8 e5 69 ff ff       	call   4460 <_Unwind_Resume@plt>
    da7b:	f3 0f 1e fa          	endbr64
    da7f:	48 89 c7             	mov    rdi,rax
    da82:	e8 39 8e ff ff       	call   68c0 <__clang_call_terminate>
    da87:	e8 24 6b ff ff       	call   45b0 <__stack_chk_fail@plt>
    da8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000da90 <_ZN9__gnu_cxxeqIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    da90:	f3 0f 1e fa          	endbr64
    da94:	55                   	push   rbp
    da95:	48 89 e5             	mov    rbp,rsp
    da98:	48 83 ec 20          	sub    rsp,0x20
    da9c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    daa0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    daa4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    daa8:	e8 a3 00 00 00       	call   db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    daad:	48 8b 00             	mov    rax,QWORD PTR [rax]
    dab0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    dab4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    dab8:	e8 93 00 00 00       	call   db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dabd:	48 89 c1             	mov    rcx,rax
    dac0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dac4:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    dac7:	0f 94 c0             	sete   al
    daca:	24 01                	and    al,0x1
    dacc:	48 83 c4 20          	add    rsp,0x20
    dad0:	5d                   	pop    rbp
    dad1:	c3                   	ret
    dad2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    dad9:	00 00 00 
    dadc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dae0 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>:
    {
    dae0:	f3 0f 1e fa          	endbr64
    dae4:	55                   	push   rbp
    dae5:	48 89 e5             	mov    rbp,rsp
    dae8:	48 83 ec 10          	sub    rsp,0x10
    daec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    daf0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    daf4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    daf8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    dafc:	e8 ef 83 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    }
    db01:	48 83 c4 10          	add    rsp,0x10
    db05:	5d                   	pop    rbp
    db06:	c3                   	ret
    db07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    db0e:	00 00 

000000000000db10 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      { return *_M_current; }
    db10:	f3 0f 1e fa          	endbr64
    db14:	55                   	push   rbp
    db15:	48 89 e5             	mov    rbp,rsp
    db18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    db20:	48 8b 00             	mov    rax,QWORD PTR [rax]
    db23:	5d                   	pop    rbp
    db24:	c3                   	ret
    db25:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    db2c:	00 00 00 
    db2f:	90                   	nop

000000000000db30 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      {
    db30:	f3 0f 1e fa          	endbr64
    db34:	55                   	push   rbp
    db35:	48 89 e5             	mov    rbp,rsp
    db38:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db3c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    db40:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    db43:	48 83 c1 20          	add    rcx,0x20
    db47:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    db4a:	5d                   	pop    rbp
    db4b:	c3                   	ret
    db4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      { return _M_current; }
    db50:	f3 0f 1e fa          	endbr64
    db54:	55                   	push   rbp
    db55:	48 89 e5             	mov    rbp,rsp
    db58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    db60:	5d                   	pop    rbp
    db61:	c3                   	ret
    db62:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    db69:	00 00 00 
    db6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000db70 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS8_>:
      : _M_current(__i) { }
    db70:	f3 0f 1e fa          	endbr64
    db74:	55                   	push   rbp
    db75:	48 89 e5             	mov    rbp,rsp
    db78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    db7c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    db80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    db84:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    db88:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    db8b:	48 89 08             	mov    QWORD PTR [rax],rcx
    db8e:	5d                   	pop    rbp
    db8f:	c3                   	ret

000000000000db90 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>:
    {
    db90:	f3 0f 1e fa          	endbr64
    db94:	55                   	push   rbp
    db95:	48 89 e5             	mov    rbp,rsp
    db98:	48 83 ec 30          	sub    rsp,0x30
    db9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dba3:	00 00 
    dba5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dba9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dbad:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
	__destroy(__first, __last);
    dbb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dbb5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    dbb9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dbbd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    dbc1:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    dbc5:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    dbc9:	e8 22 00 00 00       	call   dbf0 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>
    }
    dbce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dbd5:	00 00 
    dbd7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dbdb:	48 39 c8             	cmp    rax,rcx
    dbde:	75 06                	jne    dbe6 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_+0x56>
    dbe0:	48 83 c4 30          	add    rsp,0x30
    dbe4:	5d                   	pop    rbp
    dbe5:	c3                   	ret
    dbe6:	e8 c5 69 ff ff       	call   45b0 <__stack_chk_fail@plt>
    dbeb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000dbf0 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>:
	{
    dbf0:	f3 0f 1e fa          	endbr64
    dbf4:	55                   	push   rbp
    dbf5:	48 89 e5             	mov    rbp,rsp
    dbf8:	48 83 ec 20          	sub    rsp,0x20
    dbfc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dc03:	00 00 
    dc05:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dc09:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dc0d:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
	  for (; __first != __last; ++__first)
    dc11:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc15:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    dc19:	e8 42 00 00 00       	call   dc60 <_ZN9__gnu_cxxeqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>
    dc1e:	34 ff                	xor    al,0xff
    dc20:	a8 01                	test   al,0x1
    dc22:	75 02                	jne    dc26 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x36>
    dc24:	eb 1c                	jmp    dc42 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x52>
	    std::_Destroy(std::__addressof(*__first));
    dc26:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc2a:	e8 b1 a3 ff ff       	call   7fe0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    dc2f:	48 89 c7             	mov    rdi,rax
    dc32:	e8 79 aa ff ff       	call   86b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    dc37:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    dc3b:	e8 70 00 00 00       	call   dcb0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
    dc40:	eb cf                	jmp    dc11 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x21>
	}
    dc42:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dc49:	00 00 
    dc4b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dc4f:	48 39 c8             	cmp    rax,rcx
    dc52:	75 06                	jne    dc5a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x6a>
    dc54:	48 83 c4 20          	add    rsp,0x20
    dc58:	5d                   	pop    rbp
    dc59:	c3                   	ret
    dc5a:	e8 51 69 ff ff       	call   45b0 <__stack_chk_fail@plt>
    dc5f:	90                   	nop

000000000000dc60 <_ZN9__gnu_cxxeqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_QrqXeqcldtfp_4baseEcldtfp0_4baseERSt14convertible_toIbEE>:
    { return __lhs.base() == __rhs.base(); }
    dc60:	f3 0f 1e fa          	endbr64
    dc64:	55                   	push   rbp
    dc65:	48 89 e5             	mov    rbp,rsp
    dc68:	48 83 ec 20          	sub    rsp,0x20
    dc6c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dc70:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dc74:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    dc78:	e8 53 9f ff ff       	call   7bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dc7d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    dc80:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    dc84:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    dc88:	e8 43 9f ff ff       	call   7bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    dc8d:	48 89 c1             	mov    rcx,rax
    dc90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dc94:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    dc97:	0f 94 c0             	sete   al
    dc9a:	24 01                	and    al,0x1
    dc9c:	48 83 c4 20          	add    rsp,0x20
    dca0:	5d                   	pop    rbp
    dca1:	c3                   	ret
    dca2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    dca9:	00 00 00 
    dcac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dcb0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      {
    dcb0:	f3 0f 1e fa          	endbr64
    dcb4:	55                   	push   rbp
    dcb5:	48 89 e5             	mov    rbp,rsp
    dcb8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dcbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	++_M_current;
    dcc0:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    dcc3:	48 83 c1 20          	add    rcx,0x20
    dcc7:	48 89 08             	mov    QWORD PTR [rax],rcx
	return *this;
    dcca:	5d                   	pop    rbp
    dccb:	c3                   	ret
    dccc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dcd0 <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>:
    {
    dcd0:	f3 0f 1e fa          	endbr64
    dcd4:	55                   	push   rbp
    dcd5:	48 89 e5             	mov    rbp,rsp
    dcd8:	48 83 ec 60          	sub    rsp,0x60
    dcdc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dce3:	00 00 
    dce5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dce9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dced:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    dcf1:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
      return std::__niter_wrap(__result,
    dcf5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    dcf9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    dcfd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dd01:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    dd05:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    dd09:	e8 82 01 00 00       	call   de90 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
    dd0e:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
					     std::__niter_base(__last),
    dd12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    dd16:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    dd1a:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    dd1e:	e8 6d 01 00 00       	call   de90 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
    dd23:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
					     std::__niter_base(__result)));
    dd27:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    dd2b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    dd2f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    dd33:	e8 a8 01 00 00       	call   dee0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
    dd38:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    dd3c:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    dd40:	48 89 c2             	mov    rdx,rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    dd43:	e8 18 01 00 00       	call   de60 <_ZSt14__copy_move_a1ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>
    dd48:	48 89 c6             	mov    rsi,rax
      return std::__niter_wrap(__result,
    dd4b:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    dd4f:	e8 8c 00 00 00       	call   dde0 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>
    dd54:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    dd58:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    dd5c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    dd60:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dd67:	00 00 
    dd69:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dd6d:	48 39 c8             	cmp    rax,rcx
    dd70:	75 0a                	jne    dd7c <_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_+0xac>
    dd72:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    dd76:	48 83 c4 60          	add    rsp,0x60
    dd7a:	5d                   	pop    rbp
    dd7b:	c3                   	ret
    dd7c:	e8 2f 68 ff ff       	call   45b0 <__stack_chk_fail@plt>
    dd81:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    dd88:	00 00 00 
    dd8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000dd90 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>:
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    { return __it; }
    dd90:	f3 0f 1e fa          	endbr64
    dd94:	55                   	push   rbp
    dd95:	48 89 e5             	mov    rbp,rsp
    dd98:	48 83 ec 20          	sub    rsp,0x20
    dd9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dda3:	00 00 
    dda5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dda9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ddad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ddb1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ddb5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ddb9:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ddbd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ddc4:	00 00 
    ddc6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    ddca:	48 39 c8             	cmp    rax,rcx
    ddcd:	75 0a                	jne    ddd9 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_+0x49>
    ddcf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ddd3:	48 83 c4 20          	add    rsp,0x20
    ddd7:	5d                   	pop    rbp
    ddd8:	c3                   	ret
    ddd9:	e8 d2 67 ff ff       	call   45b0 <__stack_chk_fail@plt>
    ddde:	66 90                	xchg   ax,ax

000000000000dde0 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>:
    { return __from + (std::__niter_base(__res) - std::__niter_base(__from)); }
    dde0:	f3 0f 1e fa          	endbr64
    dde4:	55                   	push   rbp
    dde5:	48 89 e5             	mov    rbp,rsp
    dde8:	48 83 ec 40          	sub    rsp,0x40
    ddec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ddf3:	00 00 
    ddf5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ddf9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    ddfd:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    de01:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    de05:	e8 36 9f ff ff       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    de0a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    de0e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    de12:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    de16:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    de1a:	e8 c1 00 00 00       	call   dee0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
    de1f:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    de23:	48 29 c6             	sub    rsi,rax
    de26:	48 c1 fe 05          	sar    rsi,0x5
    de2a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    de2e:	e8 fd 00 00 00       	call   df30 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl>
    de33:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    de37:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    de3b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    de3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    de46:	00 00 
    de48:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    de4c:	48 39 c8             	cmp    rax,rcx
    de4f:	75 0a                	jne    de5b <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_+0x7b>
    de51:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    de55:	48 83 c4 40          	add    rsp,0x40
    de59:	5d                   	pop    rbp
    de5a:	c3                   	ret
    de5b:	e8 50 67 ff ff       	call   45b0 <__stack_chk_fail@plt>

000000000000de60 <_ZSt14__copy_move_a1ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>:
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    de60:	f3 0f 1e fa          	endbr64
    de64:	55                   	push   rbp
    de65:	48 89 e5             	mov    rbp,rsp
    de68:	48 83 ec 20          	sub    rsp,0x20
    de6c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    de70:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    de74:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    de78:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    de7c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    de80:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    de84:	e8 17 01 00 00       	call   dfa0 <_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>
    de89:	48 83 c4 20          	add    rsp,0x20
    de8d:	5d                   	pop    rbp
    de8e:	c3                   	ret
    de8f:	90                   	nop

000000000000de90 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>:
  template<typename _Iterator, typename _Container>
    _GLIBCXX20_CONSTEXPR
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
    de90:	f3 0f 1e fa          	endbr64
    de94:	55                   	push   rbp
    de95:	48 89 e5             	mov    rbp,rsp
    de98:	48 83 ec 20          	sub    rsp,0x20
    de9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dea3:	00 00 
    dea5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dea9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    dead:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    deb1:	e8 9a fc ff ff       	call   db50 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    deb6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    deb9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    debd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dec4:	00 00 
    dec6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    deca:	48 39 c8             	cmp    rax,rcx
    decd:	75 0a                	jne    ded9 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE+0x49>
    decf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ded3:	48 83 c4 20          	add    rsp,0x20
    ded7:	5d                   	pop    rbp
    ded8:	c3                   	ret
    ded9:	e8 d2 66 ff ff       	call   45b0 <__stack_chk_fail@plt>
    dede:	66 90                	xchg   ax,ax

000000000000dee0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>:
    dee0:	f3 0f 1e fa          	endbr64
    dee4:	55                   	push   rbp
    dee5:	48 89 e5             	mov    rbp,rsp
    dee8:	48 83 ec 20          	sub    rsp,0x20
    deec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    def3:	00 00 
    def5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    def9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    defd:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    df01:	e8 ca 9c ff ff       	call   7bd0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    df06:	48 8b 00             	mov    rax,QWORD PTR [rax]
    df09:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    df0d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df14:	00 00 
    df16:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    df1a:	48 39 c8             	cmp    rax,rcx
    df1d:	75 0a                	jne    df29 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE+0x49>
    df1f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    df23:	48 83 c4 20          	add    rsp,0x20
    df27:	5d                   	pop    rbp
    df28:	c3                   	ret
    df29:	e8 82 66 ff ff       	call   45b0 <__stack_chk_fail@plt>
    df2e:	66 90                	xchg   ax,ax

000000000000df30 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl>:
      { return __normal_iterator(_M_current + __n); }
    df30:	f3 0f 1e fa          	endbr64
    df34:	55                   	push   rbp
    df35:	48 89 e5             	mov    rbp,rsp
    df38:	48 83 ec 30          	sub    rsp,0x30
    df3c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df43:	00 00 
    df45:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    df49:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    df4d:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    df51:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    df55:	48 8b 00             	mov    rax,QWORD PTR [rax]
    df58:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    df5c:	48 c1 e1 05          	shl    rcx,0x5
    df60:	48 01 c8             	add    rax,rcx
    df63:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    df67:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    df6b:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
    df6f:	e8 7c 9c ff ff       	call   7bf0 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_>
    df74:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    df78:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    df7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df83:	00 00 
    df85:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    df89:	48 39 c8             	cmp    rax,rcx
    df8c:	75 0a                	jne    df98 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEl+0x68>
    df8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    df92:	48 83 c4 30          	add    rsp,0x30
    df96:	5d                   	pop    rbp
    df97:	c3                   	ret
    df98:	e8 13 66 ff ff       	call   45b0 <__stack_chk_fail@plt>
    df9d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000dfa0 <_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>:
    {
    dfa0:	f3 0f 1e fa          	endbr64
    dfa4:	55                   	push   rbp
    dfa5:	48 89 e5             	mov    rbp,rsp
    dfa8:	48 83 ec 20          	sub    rsp,0x20
    dfac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dfb0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dfb4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
			      _Category>::__copy_m(__first, __last, __result);
    dfb8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    dfbc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    dfc0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
    dfc4:	e8 07 00 00 00       	call   dfd0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>
    dfc9:	48 83 c4 20          	add    rsp,0x20
    dfcd:	5d                   	pop    rbp
    dfce:	c3                   	ret
    dfcf:	90                   	nop

000000000000dfd0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>:
	{
    dfd0:	f3 0f 1e fa          	endbr64
    dfd4:	55                   	push   rbp
    dfd5:	48 89 e5             	mov    rbp,rsp
    dfd8:	48 83 ec 20          	sub    rsp,0x20
    dfdc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    dfe0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    dfe4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    dfe8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    dfec:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    dff0:	48 29 c8             	sub    rax,rcx
    dff3:	48 c1 f8 05          	sar    rax,0x5
    dff7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    dffb:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    e000:	7e 33                	jle    e035 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x65>
	      *__result = *__first;
    e002:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e006:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e00a:	e8 91 bb ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
    e00f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e013:	48 83 c0 20          	add    rax,0x20
    e017:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	      ++__result;
    e01b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e01f:	48 83 c0 20          	add    rax,0x20
    e023:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e027:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e02b:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e02f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e033:	eb c6                	jmp    dffb <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x2b>
	  return __result;
    e035:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e039:	48 83 c4 20          	add    rsp,0x20
    e03d:	5d                   	pop    rbp
    e03e:	c3                   	ret
    e03f:	90                   	nop

000000000000e040 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    {
    e040:	f3 0f 1e fa          	endbr64
    e044:	55                   	push   rbp
    e045:	48 89 e5             	mov    rbp,rsp
    e048:	48 83 ec 40          	sub    rsp,0x40
    e04c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e053:	00 00 
    e055:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e059:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e05d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    e061:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    e065:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e069:	e8 d2 9c ff ff       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e06e:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
					     std::__niter_base(__last),
    e072:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e076:	e8 c5 9c ff ff       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e07b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
					     std::__niter_base(__result)));
    e07f:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e083:	e8 b8 9c ff ff       	call   7d40 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
    e088:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    e08c:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    e090:	48 89 c2             	mov    rdx,rax
		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
    e093:	e8 78 00 00 00       	call   e110 <_ZSt14__copy_move_a1ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    e098:	48 89 c6             	mov    rsi,rax
    e09b:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
      return std::__niter_wrap(__result,
    e09f:	e8 4c 00 00 00       	call   e0f0 <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>
    e0a4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    e0a8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e0af:	00 00 
    e0b1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e0b5:	48 39 c8             	cmp    rax,rcx
    e0b8:	75 0a                	jne    e0c4 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_+0x84>
    e0ba:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e0be:	48 83 c4 40          	add    rsp,0x40
    e0c2:	5d                   	pop    rbp
    e0c3:	c3                   	ret
    e0c4:	e8 e7 64 ff ff       	call   45b0 <__stack_chk_fail@plt>
    e0c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e0d0 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
    e0d0:	f3 0f 1e fa          	endbr64
    e0d4:	55                   	push   rbp
    e0d5:	48 89 e5             	mov    rbp,rsp
    e0d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e0dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e0e0:	5d                   	pop    rbp
    e0e1:	c3                   	ret
    e0e2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e0e9:	00 00 00 
    e0ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e0f0 <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>:
    { return __res; }
    e0f0:	f3 0f 1e fa          	endbr64
    e0f4:	55                   	push   rbp
    e0f5:	48 89 e5             	mov    rbp,rsp
    e0f8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e0fc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e100:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e104:	5d                   	pop    rbp
    e105:	c3                   	ret
    e106:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e10d:	00 00 00 

000000000000e110 <_ZSt14__copy_move_a1ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    e110:	f3 0f 1e fa          	endbr64
    e114:	55                   	push   rbp
    e115:	48 89 e5             	mov    rbp,rsp
    e118:	48 83 ec 20          	sub    rsp,0x20
    e11c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e120:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e124:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e128:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e12c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e130:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e134:	e8 07 00 00 00       	call   e140 <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
    e139:	48 83 c4 20          	add    rsp,0x20
    e13d:	5d                   	pop    rbp
    e13e:	c3                   	ret
    e13f:	90                   	nop

000000000000e140 <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    {
    e140:	f3 0f 1e fa          	endbr64
    e144:	55                   	push   rbp
    e145:	48 89 e5             	mov    rbp,rsp
    e148:	48 83 ec 20          	sub    rsp,0x20
    e14c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e150:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e154:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
			      _Category>::__copy_m(__first, __last, __result);
    e158:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e15c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e160:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
    e164:	e8 07 00 00 00       	call   e170 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>
    e169:	48 83 c4 20          	add    rsp,0x20
    e16d:	5d                   	pop    rbp
    e16e:	c3                   	ret
    e16f:	90                   	nop

000000000000e170 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>:
	{
    e170:	f3 0f 1e fa          	endbr64
    e174:	55                   	push   rbp
    e175:	48 89 e5             	mov    rbp,rsp
    e178:	48 83 ec 20          	sub    rsp,0x20
    e17c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e180:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e184:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e188:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e18c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e190:	48 29 c8             	sub    rax,rcx
    e193:	48 c1 f8 05          	sar    rax,0x5
    e197:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e19b:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    e1a0:	7e 33                	jle    e1d5 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x65>
	      *__result = *__first;
    e1a2:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e1a6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e1aa:	e8 f1 b9 ff ff       	call   9ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
    e1af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e1b3:	48 83 c0 20          	add    rax,0x20
    e1b7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
	      ++__result;
    e1bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e1bf:	48 83 c0 20          	add    rax,0x20
    e1c3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    e1c7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e1cb:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e1cf:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e1d3:	eb c6                	jmp    e19b <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x2b>
	  return __result;
    e1d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e1d9:	48 83 c4 20          	add    rsp,0x20
    e1dd:	5d                   	pop    rbp
    e1de:	c3                   	ret
    e1df:	90                   	nop

000000000000e1e0 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    e1e0:	f3 0f 1e fa          	endbr64
    e1e4:	55                   	push   rbp
    e1e5:	48 89 e5             	mov    rbp,rsp
    e1e8:	48 83 ec 20          	sub    rsp,0x20
    e1ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e1f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e1f4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
      const bool __can_memmove = __is_trivial(_ValueType1);
    e1f8:	c6 45 e7 00          	mov    BYTE PTR [rbp-0x19],0x0
      const bool __assignable
    e1fc:	c6 45 e6 00          	mov    BYTE PTR [rbp-0x1a],0x0
	__uninit_copy(__first, __last, __result);
    e200:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e204:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e208:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
      return std::__uninitialized_copy<__can_memmove && __assignable>::
    e20c:	e8 0f 00 00 00       	call   e220 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>
    e211:	48 83 c4 20          	add    rsp,0x20
    e215:	5d                   	pop    rbp
    e216:	c3                   	ret
    e217:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e21e:	00 00 

000000000000e220 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>:
	{ return std::__do_uninit_copy(__first, __last, __result); }
    e220:	f3 0f 1e fa          	endbr64
    e224:	55                   	push   rbp
    e225:	48 89 e5             	mov    rbp,rsp
    e228:	48 83 ec 20          	sub    rsp,0x20
    e22c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e230:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e234:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e238:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e23c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e240:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e244:	e8 07 00 00 00       	call   e250 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
    e249:	48 83 c4 20          	add    rsp,0x20
    e24d:	5d                   	pop    rbp
    e24e:	c3                   	ret
    e24f:	90                   	nop

000000000000e250 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    {
    e250:	f3 0f 1e fa          	endbr64
    e254:	55                   	push   rbp
    e255:	48 89 e5             	mov    rbp,rsp
    e258:	48 83 ec 30          	sub    rsp,0x30
    e25c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e260:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e264:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
      _ForwardIterator __cur = __result;
    e268:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e26c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	  for (; __first != __last; ++__first, (void)++__cur)
    e270:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e274:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
    e278:	74 5a                	je     e2d4 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x84>
	    std::_Construct(std::__addressof(*__cur), *__first);
    e27a:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e27e:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    e282:	e8 89 00 00 00       	call   e310 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>
    e287:	eb 00                	jmp    e289 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x39>
    e289:	eb 00                	jmp    e28b <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x3b>
	  for (; __first != __last; ++__first, (void)++__cur)
    e28b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e28f:	48 83 c0 20          	add    rax,0x20
    e293:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e297:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e29b:	48 83 c0 20          	add    rax,0x20
    e29f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    e2a3:	eb cb                	jmp    e270 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x20>
    e2a5:	f3 0f 1e fa          	endbr64
    e2a9:	48 89 c1             	mov    rcx,rax
    }
    e2ac:	89 d0                	mov    eax,edx
    e2ae:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    e2b2:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
	}
    e2b5:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e2b9:	e8 e2 61 ff ff       	call   44a0 <__cxa_begin_catch@plt>
	  std::_Destroy(__result, __cur);
    e2be:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e2c2:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    e2c6:	e8 75 a3 ff ff       	call   8640 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    e2cb:	eb 00                	jmp    e2cd <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0x7d>
	  __throw_exception_again;
    e2cd:	e8 0e 64 ff ff       	call   46e0 <__cxa_rethrow@plt>
    e2d2:	eb 38                	jmp    e30c <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xbc>
	  return __cur;
    e2d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    e2d8:	48 83 c4 30          	add    rsp,0x30
    e2dc:	5d                   	pop    rbp
    e2dd:	c3                   	ret
    e2de:	f3 0f 1e fa          	endbr64
    e2e2:	48 89 c1             	mov    rcx,rax
    }
    e2e5:	89 d0                	mov    eax,edx
    e2e7:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    e2eb:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
	}
    e2ee:	e8 bd 64 ff ff       	call   47b0 <__cxa_end_catch@plt>
    e2f3:	eb 00                	jmp    e2f5 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xa5>
    e2f5:	eb 00                	jmp    e2f7 <_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_+0xa7>
    e2f7:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e2fb:	e8 60 61 ff ff       	call   4460 <_Unwind_Resume@plt>
    e300:	f3 0f 1e fa          	endbr64
    e304:	48 89 c7             	mov    rdi,rax
    e307:	e8 b4 85 ff ff       	call   68c0 <__clang_call_terminate>
    e30c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e310 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>:
    {
    e310:	f3 0f 1e fa          	endbr64
    e314:	55                   	push   rbp
    e315:	48 89 e5             	mov    rbp,rsp
    e318:	48 83 ec 10          	sub    rsp,0x10
    e31c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e320:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e324:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e328:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e32c:	e8 bf 7b ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    }
    e331:	48 83 c4 10          	add    rsp,0x10
    e335:	5d                   	pop    rbp
    e336:	c3                   	ret
    e337:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e33e:	00 00 

000000000000e340 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>:
		   const _Hash&, const _Equal&, const allocator_type&,
		   false_type __uks);

    public:
      // Constructor, destructor, assignment, swap
      _Hashtable() = default;
    e340:	f3 0f 1e fa          	endbr64
    e344:	55                   	push   rbp
    e345:	48 89 e5             	mov    rbp,rsp
    e348:	48 83 ec 10          	sub    rsp,0x10
    e34c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e350:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e354:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    e358:	e8 63 00 00 00       	call   e3c0 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>
    e35d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e361:	e8 8a 00 00 00       	call   e3f0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEEC2Ev>
    e366:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      __buckets_ptr		_M_buckets		= &_M_single_bucket;
    e36a:	48 89 f8             	mov    rax,rdi
    e36d:	48 83 c0 30          	add    rax,0x30
    e371:	48 89 07             	mov    QWORD PTR [rdi],rax
      size_type			_M_bucket_count		= 1;
    e374:	48 c7 47 08 01 00 00 	mov    QWORD PTR [rdi+0x8],0x1
    e37b:	00 
      _Hashtable() = default;
    e37c:	48 83 c7 10          	add    rdi,0x10
    e380:	e8 8b 00 00 00       	call   e410 <_ZNSt8__detail15_Hash_node_baseC2Ev>
    e385:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      size_type			_M_element_count	= 0;
    e389:	48 c7 47 18 00 00 00 	mov    QWORD PTR [rdi+0x18],0x0
    e390:	00 
      _Hashtable() = default;
    e391:	48 83 c7 20          	add    rdi,0x20
    e395:	f3 0f 10 05 67 2c 00 	movss  xmm0,DWORD PTR [rip+0x2c67]        # 11004 <_IO_stdin_used+0x4>
    e39c:	00 
    e39d:	e8 8e 00 00 00       	call   e430 <_ZNSt8__detail20_Prime_rehash_policyC2Ef>
    e3a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
      __node_base_ptr		_M_single_bucket	= nullptr;
    e3a6:	48 c7 40 30 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    e3ad:	00 
      _Hashtable() = default;
    e3ae:	48 83 c4 10          	add    rsp,0x10
    e3b2:	5d                   	pop    rbp
    e3b3:	c3                   	ret
    e3b4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e3bb:	00 00 00 
    e3be:	66 90                	xchg   ax,ax

000000000000e3c0 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev>:
      _S_node_equals(const _Hash_node_code_cache<true>& __lhn,
		     const _Hash_node_code_cache<true>& __rhn)
      { return __lhn._M_hash_code == __rhn._M_hash_code; }

    protected:
      _Hashtable_base() = default;
    e3c0:	f3 0f 1e fa          	endbr64
    e3c4:	55                   	push   rbp
    e3c5:	48 89 e5             	mov    rbp,rsp
    e3c8:	48 83 ec 10          	sub    rsp,0x10
    e3cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e3d0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e3d4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    e3d8:	e8 83 00 00 00       	call   e460 <_ZNSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EEC2Ev>
    e3dd:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e3e1:	e8 9a 00 00 00       	call   e480 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>
    e3e6:	48 83 c4 10          	add    rsp,0x10
    e3ea:	5d                   	pop    rbp
    e3eb:	c3                   	ret
    e3ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e3f0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEEC2Ev>:
      using __buckets_alloc_type =
	__alloc_rebind<__node_alloc_type, __node_base_ptr>;
      using __buckets_alloc_traits = std::allocator_traits<__buckets_alloc_type>;
      using __buckets_ptr = __node_base_ptr*;

      _Hashtable_alloc() = default;
    e3f0:	f3 0f 1e fa          	endbr64
    e3f4:	55                   	push   rbp
    e3f5:	48 89 e5             	mov    rbp,rsp
    e3f8:	48 83 ec 10          	sub    rsp,0x10
    e3fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e400:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e404:	e8 97 00 00 00       	call   e4a0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EEC2Ev>
    e409:	48 83 c4 10          	add    rsp,0x10
    e40d:	5d                   	pop    rbp
    e40e:	c3                   	ret
    e40f:	90                   	nop

000000000000e410 <_ZNSt8__detail15_Hash_node_baseC2Ev>:
    _Hash_node_base() noexcept : _M_nxt() { }
    e410:	f3 0f 1e fa          	endbr64
    e414:	55                   	push   rbp
    e415:	48 89 e5             	mov    rbp,rsp
    e418:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e41c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e420:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    e427:	5d                   	pop    rbp
    e428:	c3                   	ret
    e429:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e430 <_ZNSt8__detail20_Prime_rehash_policyC2Ef>:
    : _M_max_load_factor(__z), _M_next_resize(0) { }
    e430:	f3 0f 1e fa          	endbr64
    e434:	55                   	push   rbp
    e435:	48 89 e5             	mov    rbp,rsp
    e438:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e43c:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0
    e441:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e445:	f3 0f 10 45 f4       	movss  xmm0,DWORD PTR [rbp-0xc]
    e44a:	f3 0f 11 00          	movss  DWORD PTR [rax],xmm0
    e44e:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    e455:	00 
    e456:	5d                   	pop    rbp
    e457:	c3                   	ret
    e458:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e45f:	00 

000000000000e460 <_ZNSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EEC2Ev>:
      _Hash_code_base() = default;
    e460:	f3 0f 1e fa          	endbr64
    e464:	55                   	push   rbp
    e465:	48 89 e5             	mov    rbp,rsp
    e468:	48 83 ec 10          	sub    rsp,0x10
    e46c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e470:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e474:	e8 17 00 00 00       	call   e490 <_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>
    e479:	48 83 c4 10          	add    rsp,0x10
    e47d:	5d                   	pop    rbp
    e47e:	c3                   	ret
    e47f:	90                   	nop

000000000000e480 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>:
      _Hashtable_ebo_helper() noexcept(noexcept(_Tp())) : _Tp() { }
    e480:	f3 0f 1e fa          	endbr64
    e484:	55                   	push   rbp
    e485:	48 89 e5             	mov    rbp,rsp
    e488:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e48c:	5d                   	pop    rbp
    e48d:	c3                   	ret
    e48e:	66 90                	xchg   ax,ax

000000000000e490 <_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EEC2Ev>:
    e490:	f3 0f 1e fa          	endbr64
    e494:	55                   	push   rbp
    e495:	48 89 e5             	mov    rbp,rsp
    e498:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e49c:	5d                   	pop    rbp
    e49d:	c3                   	ret
    e49e:	66 90                	xchg   ax,ax

000000000000e4a0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EEC2Ev>:
    e4a0:	f3 0f 1e fa          	endbr64
    e4a4:	55                   	push   rbp
    e4a5:	48 89 e5             	mov    rbp,rsp
    e4a8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e4ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e4b0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    e4b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e4b8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e4bc:	5d                   	pop    rbp
    e4bd:	c3                   	ret
    e4be:	66 90                	xchg   ax,ax

000000000000e4c0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC2EPKcm>:
      { }

      constexpr
      basic_string_view(const _CharT* __str, size_type __len) noexcept
      : _M_len{__len}, _M_str{__str}
      { }
    e4c0:	f3 0f 1e fa          	endbr64
    e4c4:	55                   	push   rbp
    e4c5:	48 89 e5             	mov    rbp,rsp
    e4c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e4cc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e4d0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e4d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
      : _M_len{__len}, _M_str{__str}
    e4d8:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    e4dc:	48 89 08             	mov    QWORD PTR [rax],rcx
    e4df:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    e4e3:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      { }
    e4e7:	5d                   	pop    rbp
    e4e8:	c3                   	ret
    e4e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e4f0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc>:
      }

      [[nodiscard]]
      constexpr bool
      ends_with(_CharT __x) const noexcept
      { return !this->empty() && traits_type::eq(this->back(), __x); }
    e4f0:	f3 0f 1e fa          	endbr64
    e4f4:	55                   	push   rbp
    e4f5:	48 89 e5             	mov    rbp,rsp
    e4f8:	48 83 ec 30          	sub    rsp,0x30
    e4fc:	40 88 f0             	mov    al,sil
    e4ff:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
    e506:	00 00 
    e508:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    e50c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e510:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    e513:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e517:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    e51b:	e8 50 00 00 00       	call   e570 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE5emptyEv>
    e520:	88 c1                	mov    cl,al
    e522:	31 c0                	xor    eax,eax
    e524:	f6 c1 01             	test   cl,0x1
    e527:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    e52a:	75 18                	jne    e544 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc+0x54>
    e52c:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e530:	e8 8b 00 00 00       	call   e5c0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv>
    e535:	48 89 c7             	mov    rdi,rax
    e538:	48 8d 75 f7          	lea    rsi,[rbp-0x9]
    e53c:	e8 4f 00 00 00       	call   e590 <_ZNSt11char_traitsIcE2eqERKcS2_>
    e541:	88 45 e7             	mov    BYTE PTR [rbp-0x19],al
    e544:	8a 45 e7             	mov    al,BYTE PTR [rbp-0x19]
    e547:	88 45 d7             	mov    BYTE PTR [rbp-0x29],al
    e54a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e551:	00 00 
    e553:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e557:	48 39 c8             	cmp    rax,rcx
    e55a:	75 0b                	jne    e567 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE9ends_withEc+0x77>
    e55c:	8a 45 d7             	mov    al,BYTE PTR [rbp-0x29]
    e55f:	24 01                	and    al,0x1
    e561:	48 83 c4 30          	add    rsp,0x30
    e565:	5d                   	pop    rbp
    e566:	c3                   	ret
    e567:	e8 44 60 ff ff       	call   45b0 <__stack_chk_fail@plt>
    e56c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e570 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE5emptyEv>:
      { return this->_M_len == 0; }
    e570:	f3 0f 1e fa          	endbr64
    e574:	55                   	push   rbp
    e575:	48 89 e5             	mov    rbp,rsp
    e578:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e57c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e580:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    e584:	0f 94 c0             	sete   al
    e587:	24 01                	and    al,0x1
    e589:	5d                   	pop    rbp
    e58a:	c3                   	ret
    e58b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e590 <_ZNSt11char_traitsIcE2eqERKcS2_>:
      { return __c1 == __c2; }
    e590:	f3 0f 1e fa          	endbr64
    e594:	55                   	push   rbp
    e595:	48 89 e5             	mov    rbp,rsp
    e598:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e59c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e5a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e5a4:	0f be 00             	movsx  eax,BYTE PTR [rax]
    e5a7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    e5ab:	0f be 09             	movsx  ecx,BYTE PTR [rcx]
    e5ae:	39 c8                	cmp    eax,ecx
    e5b0:	0f 94 c0             	sete   al
    e5b3:	24 01                	and    al,0x1
    e5b5:	5d                   	pop    rbp
    e5b6:	c3                   	ret
    e5b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e5be:	00 00 

000000000000e5c0 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv>:
      {
    e5c0:	f3 0f 1e fa          	endbr64
    e5c4:	55                   	push   rbp
    e5c5:	48 89 e5             	mov    rbp,rsp
    e5c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e5cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e5d0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	__glibcxx_assert(this->_M_len > 0);
    e5d4:	eb 00                	jmp    e5d6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv+0x16>
    e5d6:	eb 00                	jmp    e5d8 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4backEv+0x18>
    e5d8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	return *(this->_M_str + this->_M_len - 1);
    e5dc:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    e5e0:	48 03 01             	add    rax,QWORD PTR [rcx]
    e5e3:	48 83 c0 ff          	add    rax,0xffffffffffffffff
    e5e7:	5d                   	pop    rbp
    e5e8:	c3                   	ret
    e5e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000e5f0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev>:
	   typename _Hash, typename _RangeHash, typename _Unused,
	   typename _RehashPolicy, typename _Traits>
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    ~_Hashtable() noexcept
    {
    e5f0:	f3 0f 1e fa          	endbr64
    e5f4:	55                   	push   rbp
    e5f5:	48 89 e5             	mov    rbp,rsp
    e5f8:	48 83 ec 10          	sub    rsp,0x10
    e5fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e600:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e604:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
			._M_bucket_index(declval<const __node_value_type&>(),
					 (std::size_t)0)),
		    "Cache the hash code or qualify your functors involved"
		    " in hash code and bucket index computation with noexcept");

      clear();
    e608:	e8 33 00 00 00       	call   e640 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv>
    e60d:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
      _M_deallocate_buckets();
    e611:	e8 9a 00 00 00       	call   e6b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>
    e616:	eb 00                	jmp    e618 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev+0x28>
    e618:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    }
    e61c:	e8 bf 00 00 00       	call   e6e0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEED2Ev>
    e621:	48 83 c4 10          	add    rsp,0x10
    e625:	5d                   	pop    rbp
    e626:	c3                   	ret
    e627:	f3 0f 1e fa          	endbr64
    e62b:	48 89 c7             	mov    rdi,rax
      _M_deallocate_buckets();
    e62e:	e8 8d 82 ff ff       	call   68c0 <__clang_call_terminate>
    e633:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e63a:	00 00 00 
    e63d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000e640 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv>:
	   typename _RehashPolicy, typename _Traits>
    void
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    clear() noexcept
    {
    e640:	f3 0f 1e fa          	endbr64
    e644:	55                   	push   rbp
    e645:	48 89 e5             	mov    rbp,rsp
    e648:	48 83 ec 20          	sub    rsp,0x20
    e64c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e650:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e654:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
      this->_M_deallocate_nodes(_M_begin());
    e658:	e8 f3 00 00 00       	call   e750 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    e65d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    e661:	eb 00                	jmp    e663 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv+0x23>
    e663:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e667:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e66b:	e8 90 00 00 00       	call   e700 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_>
    e670:	eb 00                	jmp    e672 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv+0x32>
    e672:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
      __builtin_memset(_M_buckets, 0,
    e676:	48 8b 38             	mov    rdi,QWORD PTR [rax]
		       _M_bucket_count * sizeof(__node_base_ptr));
    e679:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    e67d:	48 c1 e2 03          	shl    rdx,0x3
      __builtin_memset(_M_buckets, 0,
    e681:	31 f6                	xor    esi,esi
    e683:	e8 78 5e ff ff       	call   4500 <memset@plt>
    e688:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
      _M_element_count = 0;
    e68c:	48 c7 40 18 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
    e693:	00 
      _M_before_begin._M_nxt = nullptr;
    e694:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    e69b:	00 
    }
    e69c:	48 83 c4 20          	add    rsp,0x20
    e6a0:	5d                   	pop    rbp
    e6a1:	c3                   	ret
    e6a2:	f3 0f 1e fa          	endbr64
    e6a6:	48 89 c7             	mov    rdi,rax
      this->_M_deallocate_nodes(_M_begin());
    e6a9:	e8 12 82 ff ff       	call   68c0 <__clang_call_terminate>
    e6ae:	66 90                	xchg   ax,ax

000000000000e6b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>:
      { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
    e6b0:	f3 0f 1e fa          	endbr64
    e6b4:	55                   	push   rbp
    e6b5:	48 89 e5             	mov    rbp,rsp
    e6b8:	48 83 ec 10          	sub    rsp,0x10
    e6bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e6c0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e6c4:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    e6c7:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    e6cb:	e8 c0 02 00 00       	call   e990 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm>
    e6d0:	48 83 c4 10          	add    rsp,0x10
    e6d4:	5d                   	pop    rbp
    e6d5:	c3                   	ret
    e6d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e6dd:	00 00 00 

000000000000e6e0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEED2Ev>:
    struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
    e6e0:	f3 0f 1e fa          	endbr64
    e6e4:	55                   	push   rbp
    e6e5:	48 89 e5             	mov    rbp,rsp
    e6e8:	48 83 ec 10          	sub    rsp,0x10
    e6ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e6f0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e6f4:	e8 27 04 00 00       	call   eb20 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EED2Ev>
    e6f9:	48 83 c4 10          	add    rsp,0x10
    e6fd:	5d                   	pop    rbp
    e6fe:	c3                   	ret
    e6ff:	90                   	nop

000000000000e700 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_>:
    }

  template<typename _NodeAlloc>
    void
    _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_ptr __n)
    {
    e700:	f3 0f 1e fa          	endbr64
    e704:	55                   	push   rbp
    e705:	48 89 e5             	mov    rbp,rsp
    e708:	48 83 ec 20          	sub    rsp,0x20
    e70c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e710:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e714:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e718:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      while (__n)
    e71c:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    e721:	74 24                	je     e747 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_+0x47>
	{
	  __node_ptr __tmp = __n;
    e723:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e727:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  __n = __n->_M_next();
    e72b:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e72f:	e8 3c 00 00 00       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    e734:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e738:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	  _M_deallocate_node(__tmp);
    e73c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    e740:	e8 4b 00 00 00       	call   e790 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>
      while (__n)
    e745:	eb d5                	jmp    e71c <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_deallocate_nodesEPSB_+0x1c>
	}
    }
    e747:	48 83 c4 20          	add    rsp,0x20
    e74b:	5d                   	pop    rbp
    e74c:	c3                   	ret
    e74d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000e750 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>:
      { return static_cast<__node_ptr>(_M_before_begin._M_nxt); }
    e750:	f3 0f 1e fa          	endbr64
    e754:	55                   	push   rbp
    e755:	48 89 e5             	mov    rbp,rsp
    e758:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e75c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e760:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    e764:	5d                   	pop    rbp
    e765:	c3                   	ret
    e766:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e76d:	00 00 00 

000000000000e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>:
      { return static_cast<_Hash_node*>(this->_M_nxt); }
    e770:	f3 0f 1e fa          	endbr64
    e774:	55                   	push   rbp
    e775:	48 89 e5             	mov    rbp,rsp
    e778:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e77c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e780:	48 8b 00             	mov    rax,QWORD PTR [rax]
    e783:	5d                   	pop    rbp
    e784:	c3                   	ret
    e785:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e78c:	00 00 00 
    e78f:	90                   	nop

000000000000e790 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>:
    {
    e790:	f3 0f 1e fa          	endbr64
    e794:	55                   	push   rbp
    e795:	48 89 e5             	mov    rbp,rsp
    e798:	48 83 ec 40          	sub    rsp,0x40
    e79c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    e7a0:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
    e7a4:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    e7a8:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
      __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
    e7ac:	e8 4f 00 00 00       	call   e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    e7b1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    e7b5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e7b9:	48 83 c0 08          	add    rax,0x8
    e7bd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e7c1:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
      { return _M_storage._M_ptr(); }
    e7c5:	e8 36 01 00 00       	call   e900 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    e7ca:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    e7ce:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    e7d2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
	  std::destroy_at(__p);
    e7d6:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    e7da:	e8 c1 00 00 00       	call   e8a0 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEvPT_>
    e7df:	eb 0c                	jmp    e7ed <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_+0x5d>
    e7e1:	f3 0f 1e fa          	endbr64
    e7e5:	48 89 c7             	mov    rdi,rax
    e7e8:	e8 d3 80 ff ff       	call   68c0 <__clang_call_terminate>
    e7ed:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
      _M_deallocate_node_ptr(__n);
    e7f1:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    e7f5:	e8 26 00 00 00       	call   e820 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE22_M_deallocate_node_ptrEPSB_>
    }
    e7fa:	48 83 c4 40          	add    rsp,0x40
    e7fe:	5d                   	pop    rbp
    e7ff:	c3                   	ret

000000000000e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>:
      { return __ebo_node_alloc::_M_get(); }
    e800:	f3 0f 1e fa          	endbr64
    e804:	55                   	push   rbp
    e805:	48 89 e5             	mov    rbp,rsp
    e808:	48 83 ec 10          	sub    rsp,0x10
    e80c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e810:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e814:	e8 c7 00 00 00       	call   e8e0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EE6_M_getEv>
    e819:	48 83 c4 10          	add    rsp,0x10
    e81d:	5d                   	pop    rbp
    e81e:	c3                   	ret
    e81f:	90                   	nop

000000000000e820 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE22_M_deallocate_node_ptrEPSB_>:
    {
    e820:	f3 0f 1e fa          	endbr64
    e824:	55                   	push   rbp
    e825:	48 89 e5             	mov    rbp,rsp
    e828:	48 83 ec 50          	sub    rsp,0x50
    e82c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    e830:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    e834:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    e838:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
    e83c:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    e840:	e8 fb 00 00 00       	call   e940 <_ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESB_Lb0EE10pointer_toERSB_>
    e845:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    e849:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
      __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
    e84d:	e8 ae ff ff ff       	call   e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    e852:	48 89 c1             	mov    rcx,rax
    e855:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    e859:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    e85d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    e861:	48 c7 45 d0 01 00 00 	mov    QWORD PTR [rbp-0x30],0x1
    e868:	00 
      { __a.deallocate(__p, __n); }
    e869:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    e86d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    e871:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    e875:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
    e879:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
    e87d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    e881:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	__allocator_base<_Tp>::deallocate(__p, __n);
    e885:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e889:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e88d:	e8 ce 00 00 00       	call   e960 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>
    }
    e892:	48 83 c4 50          	add    rsp,0x50
    e896:	5d                   	pop    rbp
    e897:	c3                   	ret
    e898:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e89f:	00 

000000000000e8a0 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEvPT_>:
    {
    e8a0:	f3 0f 1e fa          	endbr64
    e8a4:	55                   	push   rbp
    e8a5:	48 89 e5             	mov    rbp,rsp
    e8a8:	48 83 ec 10          	sub    rsp,0x10
    e8ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
	__location->~_Tp();
    e8b0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e8b4:	e8 07 00 00 00       	call   e8c0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmED2Ev>
    }
    e8b9:	48 83 c4 10          	add    rsp,0x10
    e8bd:	5d                   	pop    rbp
    e8be:	c3                   	ret
    e8bf:	90                   	nop

000000000000e8c0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmED2Ev>:
   *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
   *
   * @headerfile utility
   */
  template<typename _T1, typename _T2>
    struct pair
    e8c0:	f3 0f 1e fa          	endbr64
    e8c4:	55                   	push   rbp
    e8c5:	48 89 e5             	mov    rbp,rsp
    e8c8:	48 83 ec 10          	sub    rsp,0x10
    e8cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e8d0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e8d4:	e8 57 78 ff ff       	call   6130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
    e8d9:	48 83 c4 10          	add    rsp,0x10
    e8dd:	5d                   	pop    rbp
    e8de:	c3                   	ret
    e8df:	90                   	nop

000000000000e8e0 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EE6_M_getEv>:
      _Tp& _M_get() { return static_cast<_Tp&>(*this); }
    e8e0:	f3 0f 1e fa          	endbr64
    e8e4:	55                   	push   rbp
    e8e5:	48 89 e5             	mov    rbp,rsp
    e8e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e8ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e8f0:	5d                   	pop    rbp
    e8f1:	c3                   	ret
    e8f2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e8f9:	00 00 00 
    e8fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e900 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>:
        return static_cast<const void*>(&_M_storage);
      }

      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }
    e900:	f3 0f 1e fa          	endbr64
    e904:	55                   	push   rbp
    e905:	48 89 e5             	mov    rbp,rsp
    e908:	48 83 ec 10          	sub    rsp,0x10
    e90c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e910:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e914:	e8 07 00 00 00       	call   e920 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>
    e919:	48 83 c4 10          	add    rsp,0x10
    e91d:	5d                   	pop    rbp
    e91e:	c3                   	ret
    e91f:	90                   	nop

000000000000e920 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>:
      {
    e920:	f3 0f 1e fa          	endbr64
    e924:	55                   	push   rbp
    e925:	48 89 e5             	mov    rbp,rsp
    e928:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e92c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
        return static_cast<void*>(&_M_storage);
    e930:	5d                   	pop    rbp
    e931:	c3                   	ret
    e932:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e939:	00 00 00 
    e93c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e940 <_ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEESB_Lb0EE10pointer_toERSB_>:
      { return std::addressof(__r); }
    e940:	f3 0f 1e fa          	endbr64
    e944:	55                   	push   rbp
    e945:	48 89 e5             	mov    rbp,rsp
    e948:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e94c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e950:	5d                   	pop    rbp
    e951:	c3                   	ret
    e952:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e959:	00 00 00 
    e95c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e960 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>:
      {
    e960:	f3 0f 1e fa          	endbr64
    e964:	55                   	push   rbp
    e965:	48 89 e5             	mov    rbp,rsp
    e968:	48 83 ec 20          	sub    rsp,0x20
    e96c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e970:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e974:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e978:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    e97c:	48 6b 75 e8 38       	imul   rsi,QWORD PTR [rbp-0x18],0x38
    e981:	e8 fa 5b ff ff       	call   4580 <_ZdlPvm@plt>
      }
    e986:	48 83 c4 20          	add    rsp,0x20
    e98a:	5d                   	pop    rbp
    e98b:	c3                   	ret
    e98c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e990 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm>:
      {
    e990:	f3 0f 1e fa          	endbr64
    e994:	55                   	push   rbp
    e995:	48 89 e5             	mov    rbp,rsp
    e998:	48 83 ec 20          	sub    rsp,0x20
    e99c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e9a0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e9a4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    e9a8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e9ac:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	if (_M_uses_single_bucket(__bkts))
    e9b0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e9b4:	e8 27 00 00 00       	call   e9e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSA_15_Hash_node_baseE>
    e9b9:	a8 01                	test   al,0x1
    e9bb:	75 02                	jne    e9bf <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x2f>
    e9bd:	eb 02                	jmp    e9c1 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x31>
	  return;
    e9bf:	eb 11                	jmp    e9d2 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSA_15_Hash_node_baseEm+0x42>
    e9c1:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
    e9c5:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    e9c9:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    e9cd:	e8 3e 00 00 00       	call   ea10 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm>
      }
    e9d2:	48 83 c4 20          	add    rsp,0x20
    e9d6:	5d                   	pop    rbp
    e9d7:	c3                   	ret
    e9d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e9df:	00 

000000000000e9e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSA_15_Hash_node_baseE>:
      { return __builtin_expect(__bkts == &_M_single_bucket, false); }
    e9e0:	f3 0f 1e fa          	endbr64
    e9e4:	55                   	push   rbp
    e9e5:	48 89 e5             	mov    rbp,rsp
    e9e8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    e9ec:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    e9f0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e9f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    e9f8:	48 83 c1 30          	add    rcx,0x30
    e9fc:	48 39 c8             	cmp    rax,rcx
    e9ff:	0f 94 c0             	sete   al
    ea02:	24 01                	and    al,0x1
    ea04:	5d                   	pop    rbp
    ea05:	c3                   	ret
    ea06:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ea0d:	00 00 00 

000000000000ea10 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm>:
  template<typename _NodeAlloc>
    void
    _Hashtable_alloc<_NodeAlloc>::
    _M_deallocate_buckets(__buckets_ptr __bkts,
			  std::size_t __bkt_count)
    {
    ea10:	f3 0f 1e fa          	endbr64
    ea14:	55                   	push   rbp
    ea15:	48 89 e5             	mov    rbp,rsp
    ea18:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    ea1f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ea26:	00 00 
    ea28:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ea2c:	48 89 7d a0          	mov    QWORD PTR [rbp-0x60],rdi
    ea30:	48 89 75 98          	mov    QWORD PTR [rbp-0x68],rsi
    ea34:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    ea38:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ea3c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
      typedef typename __buckets_alloc_traits::pointer _Ptr;
      auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__bkts);
    ea40:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    ea44:	e8 87 00 00 00       	call   ead0 <_ZNSt19__ptr_traits_ptr_toIPPNSt8__detail15_Hash_node_baseES2_Lb0EE10pointer_toERS2_>
    ea49:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
    ea4d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
      __buckets_alloc_type __alloc(_M_node_allocator());
    ea51:	e8 aa fd ff ff       	call   e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    ea56:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
    ea5a:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
    ea5e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ea62:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ea66:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      __buckets_alloc_traits::deallocate(__alloc, __ptr, __bkt_count);
    ea6a:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
    ea6e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    ea72:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    ea76:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    ea7a:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ea7e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ea82:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    ea86:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ea8a:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    ea8e:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    ea92:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ea96:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    ea9a:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    ea9e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    eaa2:	e8 49 00 00 00       	call   eaf0 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS2_m>
    }
    eaa7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eaae:	00 00 
    eab0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eab4:	48 39 c8             	cmp    rax,rcx
    eab7:	75 09                	jne    eac2 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm+0xb2>
    eab9:	48 81 c4 80 00 00 00 	add    rsp,0x80
    eac0:	5d                   	pop    rbp
    eac1:	c3                   	ret
    eac2:	e8 e9 5a ff ff       	call   45b0 <__stack_chk_fail@plt>
    eac7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    eace:	00 00 

000000000000ead0 <_ZNSt19__ptr_traits_ptr_toIPPNSt8__detail15_Hash_node_baseES2_Lb0EE10pointer_toERS2_>:
    ead0:	f3 0f 1e fa          	endbr64
    ead4:	55                   	push   rbp
    ead5:	48 89 e5             	mov    rbp,rsp
    ead8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    eadc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eae0:	5d                   	pop    rbp
    eae1:	c3                   	ret
    eae2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    eae9:	00 00 00 
    eaec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000eaf0 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS2_m>:
      {
    eaf0:	f3 0f 1e fa          	endbr64
    eaf4:	55                   	push   rbp
    eaf5:	48 89 e5             	mov    rbp,rsp
    eaf8:	48 83 ec 20          	sub    rsp,0x20
    eafc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    eb00:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    eb04:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    eb08:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    eb0c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    eb10:	48 c1 e6 03          	shl    rsi,0x3
    eb14:	e8 67 5a ff ff       	call   4580 <_ZdlPvm@plt>
      }
    eb19:	48 83 c4 20          	add    rsp,0x20
    eb1d:	5d                   	pop    rbp
    eb1e:	c3                   	ret
    eb1f:	90                   	nop

000000000000eb20 <_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEELb1EED2Ev>:
    struct _Hashtable_ebo_helper;
    eb20:	f3 0f 1e fa          	endbr64
    eb24:	55                   	push   rbp
    eb25:	48 89 e5             	mov    rbp,rsp
    eb28:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    eb2c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    eb30:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eb34:	5d                   	pop    rbp
    eb35:	c3                   	ret
    eb36:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    eb3d:	00 00 00 

000000000000eb40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_>:
	{ return _M_emplace(__unique_keys{}, std::forward<_Args>(__args)...); }
    eb40:	f3 0f 1e fa          	endbr64
    eb44:	55                   	push   rbp
    eb45:	48 89 e5             	mov    rbp,rsp
    eb48:	48 83 ec 60          	sub    rsp,0x60
    eb4c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eb53:	00 00 
    eb55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eb59:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    eb5d:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
    eb61:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    eb65:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    eb69:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    eb6d:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    eb71:	e8 4a 00 00 00       	call   ebc0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_>
    eb76:	88 55 e0             	mov    BYTE PTR [rbp-0x20],dl
    eb79:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    eb7d:	8a 45 e0             	mov    al,BYTE PTR [rbp-0x20]
    eb80:	88 45 f0             	mov    BYTE PTR [rbp-0x10],al
    eb83:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    eb87:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    eb8b:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    eb8e:	88 45 af             	mov    BYTE PTR [rbp-0x51],al
    eb91:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eb95:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    eb99:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eba0:	00 00 
    eba2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eba6:	48 39 c8             	cmp    rax,rcx
    eba9:	75 0d                	jne    ebb8 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE7emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbEDpOT_+0x78>
    ebab:	8a 55 af             	mov    dl,BYTE PTR [rbp-0x51]
    ebae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ebb2:	48 83 c4 60          	add    rsp,0x60
    ebb6:	5d                   	pop    rbp
    ebb7:	c3                   	ret
    ebb8:	e8 f3 59 ff ff       	call   45b0 <__stack_chk_fail@plt>
    ebbd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ebc0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_>:
      {
    ebc0:	f3 0f 1e fa          	endbr64
    ebc4:	55                   	push   rbp
    ebc5:	48 89 e5             	mov    rbp,rsp
    ebc8:	48 81 ec 30 01 00 00 	sub    rsp,0x130
    ebcf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ebd6:	00 00 
    ebd8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ebdc:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    ebe0:	48 89 b5 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rsi
    ebe7:	48 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdx
    ebee:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
    ebf2:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
    ebf9:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    ec00:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
    ec07:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ec0b:	e8 f0 02 00 00       	call   ef00 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC2IJRS5_mEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_>
	const key_type& __k = _ExtractKey{}(__node._M_node->_M_v());
    ec10:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ec14:	48 83 c0 08          	add    rax,0x8
    ec18:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    ec1c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    ec20:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    ec24:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
      { return _M_storage._M_ptr(); }
    ec28:	e8 d3 fc ff ff       	call   e900 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    ec2d:	48 89 c6             	mov    rsi,rax
    ec30:	48 8d 7d d7          	lea    rdi,[rbp-0x29]
    ec34:	e8 17 03 00 00       	call   ef50 <_ZNKSt8__detail10_Select1stclIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSD_>
    ec39:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    ec40:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
	const size_type __size = size();
    ec47:	e8 24 03 00 00       	call   ef70 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>
    ec4c:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
	if (__size <= __small_size_threshold())
    ec53:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    ec5a:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    ec61:	e8 2a 03 00 00       	call   ef90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    ec66:	48 89 c1             	mov    rcx,rax
    ec69:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    ec70:	48 39 c8             	cmp    rax,rcx
    ec73:	0f 87 c7 00 00 00    	ja     ed40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x180>
    ec79:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	    for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ec80:	e8 cb fa ff ff       	call   e750 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    ec85:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    ec8c:	48 83 bd 58 ff ff ff 	cmp    QWORD PTR [rbp-0xa8],0x0
    ec93:	00 
    ec94:	0f 84 a4 00 00 00    	je     ed3e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x17e>
    ec9a:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	      if (this->_M_key_equals(__k, *__it))
    eca1:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    eca8:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    ecaf:	48 83 c2 08          	add    rdx,0x8
    ecb3:	e8 e8 02 00 00       	call   efa0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
    ecb8:	88 85 1f ff ff ff    	mov    BYTE PTR [rbp-0xe1],al
    ecbe:	eb 00                	jmp    ecc0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x100>
    ecc0:	8a 85 1f ff ff ff    	mov    al,BYTE PTR [rbp-0xe1]
    ecc6:	a8 01                	test   al,0x1
    ecc8:	75 02                	jne    eccc <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x10c>
    ecca:	eb 58                	jmp    ed24 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x164>
		return { iterator(__it), false };
    eccc:	48 8b b5 58 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa8]
    ecd3:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
    ecd7:	e8 64 03 00 00       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    ecdc:	c6 45 c7 00          	mov    BYTE PTR [rbp-0x39],0x0
    ece0:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    ece4:	48 8d 75 c8          	lea    rsi,[rbp-0x38]
    ece8:	48 8d 55 c7          	lea    rdx,[rbp-0x39]
    ecec:	e8 7f 03 00 00       	call   f070 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>
    ecf1:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    ecf8:	00 00 00 
    ecfb:	e9 8a 01 00 00       	jmp    ee8a <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x2ca>
    ed00:	f3 0f 1e fa          	endbr64
    ed04:	48 89 c1             	mov    rcx,rax
      }
    ed07:	89 d0                	mov    eax,edx
    ed09:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    ed10:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
    ed16:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ed1a:	e8 01 06 00 00       	call   f320 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>
    ed1f:	e9 ab 01 00 00       	jmp    eecf <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x30f>
	      if (this->_M_key_equals(__k, *__it))
    ed24:	eb 00                	jmp    ed26 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x166>
	    for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ed26:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    ed2d:	e8 3e fa ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    ed32:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    ed39:	e9 4e ff ff ff       	jmp    ec8c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0xcc>
	  }
    ed3e:	eb 00                	jmp    ed40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x180>
    ed40:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	__hash_code __code = this->_M_hash_code(__k);
    ed47:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    ed4e:	e8 4d 03 00 00       	call   f0a0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>
    ed53:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    ed5a:	eb 00                	jmp    ed5c <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x19c>
    ed5c:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
    ed63:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    ed6a:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
	size_type __bkt = _M_bucket_index(__code);
    ed71:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    ed78:	e8 53 03 00 00       	call   f0d0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
    ed7d:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    ed84:	eb 00                	jmp    ed86 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x1c6>
    ed86:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    ed8d:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
	if (__size > __small_size_threshold())
    ed94:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    ed9b:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
    eda2:	e8 e9 01 00 00       	call   ef90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    eda7:	48 89 c1             	mov    rcx,rax
    edaa:	48 8b 85 00 ff ff ff 	mov    rax,QWORD PTR [rbp-0x100]
    edb1:	48 39 c8             	cmp    rax,rcx
    edb4:	76 75                	jbe    ee2b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x26b>
    edb6:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	  if (__node_ptr __p = _M_find_node(__bkt, __k, __code))
    edbd:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    edc4:	48 8b 95 68 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x98]
    edcb:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
    edd2:	e8 29 03 00 00       	call   f100 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>
    edd7:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    edde:	eb 00                	jmp    ede0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x220>
    ede0:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    ede7:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    edee:	48 83 bd 30 ff ff ff 	cmp    QWORD PTR [rbp-0xd0],0x0
    edf5:	00 
    edf6:	74 31                	je     ee29 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x269>
	    return { iterator(__p), false };
    edf8:	48 8b b5 30 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd0]
    edff:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
    ee03:	e8 38 02 00 00       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    ee08:	c6 45 b7 00          	mov    BYTE PTR [rbp-0x49],0x0
    ee0c:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    ee10:	48 8d 75 b8          	lea    rsi,[rbp-0x48]
    ee14:	48 8d 55 b7          	lea    rdx,[rbp-0x49]
    ee18:	e8 53 02 00 00       	call   f070 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>
    ee1d:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    ee24:	00 00 00 
    ee27:	eb 61                	jmp    ee8a <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x2ca>
	  if (__node_ptr __p = _M_find_node(__bkt, __k, __code))
    ee29:	eb 00                	jmp    ee2b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x26b>
    ee2b:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
	auto __pos = _M_insert_unique_node(__bkt, __code, __node._M_node);
    ee32:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
    ee39:	48 8b 95 40 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc0]
    ee40:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    ee44:	41 b8 01 00 00 00    	mov    r8d,0x1
    ee4a:	e8 11 03 00 00       	call   f160 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm>
    ee4f:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    ee56:	eb 00                	jmp    ee58 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x298>
    ee58:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    ee5f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
	__node._M_node = nullptr;
    ee63:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    ee6a:	00 
	return { __pos, true };
    ee6b:	c6 45 a7 01          	mov    BYTE PTR [rbp-0x59],0x1
    ee6f:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
    ee73:	48 8d 75 a8          	lea    rsi,[rbp-0x58]
    ee77:	48 8d 55 a7          	lea    rdx,[rbp-0x59]
    ee7b:	e8 70 04 00 00       	call   f2f0 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2IRSA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISE_SF_EEEEOT_OT0_>
    ee80:	c7 85 48 ff ff ff 01 	mov    DWORD PTR [rbp-0xb8],0x1
    ee87:	00 00 00 
    ee8a:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
      }
    ee8e:	e8 8d 04 00 00       	call   f320 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>
    ee93:	8a 45 f0             	mov    al,BYTE PTR [rbp-0x10]
    ee96:	88 85 e7 fe ff ff    	mov    BYTE PTR [rbp-0x119],al
    ee9c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eea0:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    eea7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eeae:	00 00 
    eeb0:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eeb4:	48 39 c8             	cmp    rax,rcx
    eeb7:	75 42                	jne    eefb <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x33b>
    eeb9:	8a 95 e7 fe ff ff    	mov    dl,BYTE PTR [rbp-0x119]
    eebf:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    eec6:	48 81 c4 30 01 00 00 	add    rsp,0x130
    eecd:	5d                   	pop    rbp
    eece:	c3                   	ret
    eecf:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    eed6:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    eedd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    eee4:	00 00 
    eee6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    eeea:	48 39 c8             	cmp    rax,rcx
    eeed:	75 0c                	jne    eefb <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE10_M_emplaceIJRS5_mEEES6_INSA_14_Node_iteratorIS8_Lb0ELb1EEEbESt17integral_constantIbLb1EEDpOT_+0x33b>
    eeef:	48 8b bd d8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x128]
    eef6:	e8 65 55 ff ff       	call   4460 <_Unwind_Resume@plt>
    eefb:	e8 b0 56 ff ff       	call   45b0 <__stack_chk_fail@plt>

000000000000ef00 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC2IJRS5_mEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_>:
	  { }
    ef00:	f3 0f 1e fa          	endbr64
    ef04:	55                   	push   rbp
    ef05:	48 89 e5             	mov    rbp,rsp
    ef08:	48 83 ec 30          	sub    rsp,0x30
    ef0c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ef10:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ef14:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    ef18:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    ef1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ef20:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
	  : _M_h(__h),
    ef24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ef28:	48 89 08             	mov    QWORD PTR [rax],rcx
	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
    ef2b:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    ef2f:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    ef33:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    ef37:	e8 34 04 00 00       	call   f370 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_>
    ef3c:	48 89 c1             	mov    rcx,rax
    ef3f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ef43:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
	  { }
    ef47:	48 83 c4 30          	add    rsp,0x30
    ef4b:	5d                   	pop    rbp
    ef4c:	c3                   	ret
    ef4d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000ef50 <_ZNKSt8__detail10_Select1stclIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSD_>:
      { return std::forward<_Tp>(__x).first; }
    ef50:	f3 0f 1e fa          	endbr64
    ef54:	55                   	push   rbp
    ef55:	48 89 e5             	mov    rbp,rsp
    ef58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ef5c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ef60:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ef64:	5d                   	pop    rbp
    ef65:	c3                   	ret
    ef66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ef6d:	00 00 00 

000000000000ef70 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>:
      { return _M_element_count; }
    ef70:	f3 0f 1e fa          	endbr64
    ef74:	55                   	push   rbp
    ef75:	48 89 e5             	mov    rbp,rsp
    ef78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ef7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ef80:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    ef84:	5d                   	pop    rbp
    ef85:	c3                   	ret
    ef86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ef8d:	00 00 00 

000000000000ef90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>:
      {
    ef90:	f3 0f 1e fa          	endbr64
    ef94:	55                   	push   rbp
    ef95:	48 89 e5             	mov    rbp,rsp
	  __detail::_Hashtable_hash_traits<_Hash>::__small_size_threshold();
    ef98:	e8 a3 06 00 00       	call   f640 <_ZNSt8__detail22_Hashtable_hash_traitsISt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE22__small_size_thresholdEv>
	return
    ef9d:	5d                   	pop    rbp
    ef9e:	c3                   	ret
    ef9f:	90                   	nop

000000000000efa0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>:
      {
    efa0:	f3 0f 1e fa          	endbr64
    efa4:	55                   	push   rbp
    efa5:	48 89 e5             	mov    rbp,rsp
    efa8:	48 83 ec 50          	sub    rsp,0x50
    efac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    efb3:	00 00 
    efb5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    efb9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    efbd:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    efc1:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    efc5:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
	return _M_eq()(__k, _ExtractKey{}(__n._M_v()));
    efc9:	e8 82 06 00 00       	call   f650 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv>
    efce:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    efd2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    efd6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    efda:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    efde:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    efe2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    efe6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    efea:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
      { return _M_storage._M_ptr(); }
    efee:	e8 ed 06 00 00       	call   f6e0 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    eff3:	48 89 c6             	mov    rsi,rax
    eff6:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
	return _M_eq()(__k, _ExtractKey{}(__n._M_v()));
    effa:	e8 a1 06 00 00       	call   f6a0 <_ZNKSt8__detail10_Select1stclIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSE_>
    efff:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    f003:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    f007:	48 89 c2             	mov    rdx,rax
    f00a:	e8 61 06 00 00       	call   f670 <_ZNKSt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f00f:	88 45 c7             	mov    BYTE PTR [rbp-0x39],al
    f012:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f019:	00 00 
    f01b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f01f:	48 39 c8             	cmp    rax,rcx
    f022:	75 0b                	jne    f02f <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE+0x8f>
    f024:	8a 45 c7             	mov    al,BYTE PTR [rbp-0x39]
    f027:	24 01                	and    al,0x1
    f029:	48 83 c4 50          	add    rsp,0x50
    f02d:	5d                   	pop    rbp
    f02e:	c3                   	ret
    f02f:	e8 7c 55 ff ff       	call   45b0 <__stack_chk_fail@plt>
    f034:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f03b:	00 00 00 
    f03e:	66 90                	xchg   ax,ax

000000000000f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>:
      : __base_type(__p) { }
    f040:	f3 0f 1e fa          	endbr64
    f044:	55                   	push   rbp
    f045:	48 89 e5             	mov    rbp,rsp
    f048:	48 83 ec 10          	sub    rsp,0x10
    f04c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f050:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f054:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f058:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f05c:	e8 bf 06 00 00       	call   f720 <_ZNSt8__detail19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    f061:	48 83 c4 10          	add    rsp,0x10
    f065:	5d                   	pop    rbp
    f066:	c3                   	ret
    f067:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f06e:	00 00 

000000000000f070 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2ISA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISD_SE_EEEEOT_OT0_>:
	requires (_S_constructible<_U1, _U2>()) && (!_S_dangles<_U1, _U2>())
	constexpr explicit(!_S_convertible<_U1, _U2>())
	pair(_U1&& __x, _U2&& __y)
	noexcept(_S_nothrow_constructible<_U1, _U2>())
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
	{ }
    f070:	f3 0f 1e fa          	endbr64
    f074:	55                   	push   rbp
    f075:	48 89 e5             	mov    rbp,rsp
    f078:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f07c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f080:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f084:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f088:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f08c:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f08f:	48 89 08             	mov    QWORD PTR [rax],rcx
    f092:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f096:	8a 09                	mov    cl,BYTE PTR [rcx]
    f098:	80 e1 01             	and    cl,0x1
    f09b:	88 48 08             	mov    BYTE PTR [rax+0x8],cl
	{ }
    f09e:	5d                   	pop    rbp
    f09f:	c3                   	ret

000000000000f0a0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>:
      {
    f0a0:	f3 0f 1e fa          	endbr64
    f0a4:	55                   	push   rbp
    f0a5:	48 89 e5             	mov    rbp,rsp
    f0a8:	48 83 ec 10          	sub    rsp,0x10
    f0ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f0b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f0b4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return _M_hash()(__k);
    f0b8:	e8 83 06 00 00       	call   f740 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv>
    f0bd:	48 89 c7             	mov    rdi,rax
    f0c0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f0c4:	e8 97 06 00 00       	call   f760 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_>
    f0c9:	48 83 c4 10          	add    rsp,0x10
    f0cd:	5d                   	pop    rbp
    f0ce:	c3                   	ret
    f0cf:	90                   	nop

000000000000f0d0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>:
      { return __hash_code_base::_M_bucket_index(__c, _M_bucket_count); }
    f0d0:	f3 0f 1e fa          	endbr64
    f0d4:	55                   	push   rbp
    f0d5:	48 89 e5             	mov    rbp,rsp
    f0d8:	48 83 ec 10          	sub    rsp,0x10
    f0dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f0e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f0e4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f0e8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f0ec:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    f0f0:	e8 1b 07 00 00       	call   f810 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm>
    f0f5:	48 83 c4 10          	add    rsp,0x10
    f0f9:	5d                   	pop    rbp
    f0fa:	c3                   	ret
    f0fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f100 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>:
      {
    f100:	f3 0f 1e fa          	endbr64
    f104:	55                   	push   rbp
    f105:	48 89 e5             	mov    rbp,rsp
    f108:	48 83 ec 30          	sub    rsp,0x30
    f10c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f110:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f114:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f118:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f11c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
	__node_base_ptr __before_n = _M_find_before_node(__bkt, __key, __c);
    f120:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    f124:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f128:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    f12c:	e8 6f 07 00 00       	call   f8a0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m>
    f131:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	if (__before_n)
    f135:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    f13a:	74 0d                	je     f149 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m+0x49>
	  return static_cast<__node_ptr>(__before_n->_M_nxt);
    f13c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f140:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f143:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f147:	eb 08                	jmp    f151 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m+0x51>
	return nullptr;
    f149:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f150:	00 
      }
    f151:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f155:	48 83 c4 30          	add    rsp,0x30
    f159:	5d                   	pop    rbp
    f15a:	c3                   	ret
    f15b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f160 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm>:
    {
    f160:	f3 0f 1e fa          	endbr64
    f164:	55                   	push   rbp
    f165:	48 89 e5             	mov    rbp,rsp
    f168:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
    f16f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f176:	00 00 
    f178:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f17c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    f180:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    f184:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    f188:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    f18c:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
    f190:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    f194:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
      __rehash_guard_t __rehash_guard(_M_rehash_policy);
    f198:	48 83 c6 20          	add    rsi,0x20
    f19c:	48 89 75 88          	mov    QWORD PTR [rbp-0x78],rsi
    f1a0:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    f1a4:	e8 f7 08 00 00       	call   faa0 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEEC2ERS1_>
    f1a9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    f1ad:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
    f1b1:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    f1b5:	48 8b 50 18          	mov    rdx,QWORD PTR [rax+0x18]
					  __n_elt);
    f1b9:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
    f1bd:	e8 9e 54 ff ff       	call   4660 <_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@plt>
    f1c2:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    f1c6:	88 45 9a             	mov    BYTE PTR [rbp-0x66],al
    f1c9:	eb 00                	jmp    f1cb <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x6b>
    f1cb:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    f1cf:	8a 4d 9a             	mov    cl,BYTE PTR [rbp-0x66]
    f1d2:	88 4d a8             	mov    BYTE PTR [rbp-0x58],cl
    f1d5:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
      if (__do_rehash.first)
    f1d9:	f6 45 a8 01          	test   BYTE PTR [rbp-0x58],0x1
    f1dd:	74 50                	je     f22f <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xcf>
    f1df:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  _M_rehash(__do_rehash.second, true_type{});
    f1e3:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    f1e7:	e8 f4 08 00 00       	call   fae0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE>
    f1ec:	eb 00                	jmp    f1ee <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x8e>
    f1ee:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	  __bkt = _M_bucket_index(__code);
    f1f2:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    f1f6:	e8 d5 fe ff ff       	call   f0d0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
    f1fb:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    f202:	eb 00                	jmp    f204 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xa4>
    f204:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f20b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	}
    f20f:	eb 1e                	jmp    f22f <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xcf>
    f211:	f3 0f 1e fa          	endbr64
    f215:	48 89 c1             	mov    rcx,rax
    }
    f218:	89 d0                	mov    eax,edx
    f21a:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    f21e:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    f221:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    f225:	e8 f6 0a 00 00       	call   fd20 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>
    f22a:	e9 84 00 00 00       	jmp    f2b3 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x153>
    f22f:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
      __rehash_guard._M_guarded_obj = nullptr;
    f233:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    f23a:	00 
      this->_M_store_code(*__node, __code);
    f23b:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    f23f:	48 83 c6 30          	add    rsi,0x30
    f243:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    f247:	e8 c4 09 00 00       	call   fc10 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeERNS_21_Hash_node_code_cacheILb1EEEm>
    f24c:	eb 00                	jmp    f24e <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0xee>
    f24e:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
      _M_insert_bucket_begin(__bkt, __node);
    f252:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    f256:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f25a:	e8 e1 09 00 00       	call   fc40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE>
    f25f:	eb 00                	jmp    f261 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x101>
    f261:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
      ++_M_element_count;
    f265:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
    f269:	48 ff c1             	inc    rcx
    f26c:	48 89 48 18          	mov    QWORD PTR [rax+0x18],rcx
      return iterator(__node);
    f270:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
    f274:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    f278:	e8 c3 fd ff ff       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    f27d:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
    }
    f281:	e8 9a 0a 00 00       	call   fd20 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>
    f286:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f28a:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    f291:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f298:	00 00 
    f29a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f29e:	48 39 c8             	cmp    rax,rcx
    f2a1:	75 39                	jne    f2dc <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x17c>
    f2a3:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    f2aa:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    f2b1:	5d                   	pop    rbp
    f2b2:	c3                   	ret
    f2b3:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    f2b7:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    f2be:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f2c5:	00 00 
    f2c7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f2cb:	48 39 c8             	cmp    rax,rcx
    f2ce:	75 0c                	jne    f2dc <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm+0x17c>
    f2d0:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    f2d7:	e8 84 51 ff ff       	call   4460 <_Unwind_Resume@plt>
    f2dc:	e8 cf 52 ff ff       	call   45b0 <__stack_chk_fail@plt>
    f2e1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f2e8:	00 00 00 
    f2eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f2f0 <_ZNSt4pairINSt8__detail14_Node_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEEbEC2IRSA_bQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISE_SF_EEEEOT_OT0_>:
    f2f0:	f3 0f 1e fa          	endbr64
    f2f4:	55                   	push   rbp
    f2f5:	48 89 e5             	mov    rbp,rsp
    f2f8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f2fc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f300:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f304:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f308:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f30c:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f30f:	48 89 08             	mov    QWORD PTR [rax],rcx
    f312:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f316:	8a 09                	mov    cl,BYTE PTR [rcx]
    f318:	80 e1 01             	and    cl,0x1
    f31b:	88 48 08             	mov    BYTE PTR [rax+0x8],cl
	{ }
    f31e:	5d                   	pop    rbp
    f31f:	c3                   	ret

000000000000f320 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev>:
	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
    f320:	f3 0f 1e fa          	endbr64
    f324:	55                   	push   rbp
    f325:	48 89 e5             	mov    rbp,rsp
    f328:	48 83 ec 10          	sub    rsp,0x10
    f32c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f330:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f334:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    f338:	48 83 78 08 00       	cmp    QWORD PTR [rax+0x8],0x0
    f33d:	74 14                	je     f353 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x33>
    f33f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f343:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    f346:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    f34a:	e8 41 f4 ff ff       	call   e790 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE18_M_deallocate_nodeEPSB_>
    f34f:	eb 00                	jmp    f351 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x31>
    f351:	eb 00                	jmp    f353 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeD2Ev+0x33>
    f353:	48 83 c4 10          	add    rsp,0x10
    f357:	5d                   	pop    rbp
    f358:	c3                   	ret
    f359:	f3 0f 1e fa          	endbr64
    f35d:	48 89 c7             	mov    rdi,rax
    f360:	e8 5b 75 ff ff       	call   68c0 <__clang_call_terminate>
    f365:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f36c:	00 00 00 
    f36f:	90                   	nop

000000000000f370 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_>:
      {
    f370:	f3 0f 1e fa          	endbr64
    f374:	55                   	push   rbp
    f375:	48 89 e5             	mov    rbp,rsp
    f378:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    f37f:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    f383:	48 89 b5 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rsi
    f38a:	48 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdx
    f391:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
	auto& __alloc = _M_node_allocator();
    f395:	e8 66 f4 ff ff       	call   e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    f39a:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
	auto __nptr = __node_alloc_traits::allocate(__alloc, 1);
    f3a1:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    f3a8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f3ac:	48 c7 45 c0 01 00 00 	mov    QWORD PTR [rbp-0x40],0x1
    f3b3:	00 
      { return __a.allocate(__n); }
    f3b4:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    f3b8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    f3bc:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    f3c0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    f3c4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
	return __allocator_base<_Tp>::allocate(__n, 0);
    f3c8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f3cc:	31 c0                	xor    eax,eax
    f3ce:	89 c2                	mov    edx,eax
    f3d0:	e8 8b 01 00 00       	call   f560 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv>
    f3d5:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
	__node_ptr __n = std::__to_address(__nptr);
    f3dc:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    f3e3:	e8 38 01 00 00       	call   f520 <_ZSt12__to_addressINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEPT_SD_>
    f3e8:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
	    ::new ((void*)__n) __node_type;
    f3ef:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
    f3f6:	e8 45 01 00 00       	call   f540 <_ZNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2Ev>
	    __node_alloc_traits::construct(__alloc, __n->_M_valptr(),
    f3fb:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    f402:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    f409:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    f410:	48 83 c0 08          	add    rax,0x8
    f414:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    f418:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
      { return _M_storage._M_ptr(); }
    f41c:	e8 df f4 ff ff       	call   e900 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
    f421:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
    f428:	48 89 c2             	mov    rdx,rax
					   std::forward<_Args>(__args)...);
    f42b:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    f432:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    f439:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f43d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f441:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f445:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    f449:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    f44d:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    f451:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    f455:	e8 66 01 00 00       	call   f5c0 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEJRS6_mEEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPSB_DpOSC_>
    f45a:	eb 00                	jmp    f45c <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0xec>
	}
    f45c:	eb 00                	jmp    f45e <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0xee>
	    return __n;
    f45e:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    f465:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
    f46c:	5d                   	pop    rbp
    f46d:	c3                   	ret
    f46e:	f3 0f 1e fa          	endbr64
    f472:	48 89 c1             	mov    rcx,rax
      }
    f475:	89 d0                	mov    eax,edx
    f477:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    f47e:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
	  }
    f484:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    f48b:	e8 10 50 ff ff       	call   44a0 <__cxa_begin_catch@plt>
	    __node_alloc_traits::deallocate(__alloc, __nptr, 1);
    f490:	48 8b 8d 68 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x98]
    f497:	48 8b 85 60 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa0]
    f49e:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    f4a2:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    f4a6:	48 c7 45 90 01 00 00 	mov    QWORD PTR [rbp-0x70],0x1
    f4ad:	00 
      { __a.deallocate(__p, __n); }
    f4ae:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    f4b2:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    f4b6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    f4ba:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    f4be:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    f4c2:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    f4c6:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	__allocator_base<_Tp>::deallocate(__p, __n);
    f4ca:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
    f4ce:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    f4d2:	e8 89 f4 ff ff       	call   e960 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE10deallocateEPSB_m>
    f4d7:	eb 00                	jmp    f4d9 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x169>
	    __throw_exception_again;
    f4d9:	e8 02 52 ff ff       	call   46e0 <__cxa_rethrow@plt>
    f4de:	eb 37                	jmp    f517 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x1a7>
    f4e0:	f3 0f 1e fa          	endbr64
    f4e4:	48 89 c1             	mov    rcx,rax
      }
    f4e7:	89 d0                	mov    eax,edx
    f4e9:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
    f4f0:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
	  }
    f4f6:	e8 b5 52 ff ff       	call   47b0 <__cxa_end_catch@plt>
    f4fb:	eb 00                	jmp    f4fd <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x18d>
    f4fd:	eb 00                	jmp    f4ff <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE16_M_allocate_nodeIJRS8_mEEEPSB_DpOT_+0x18f>
    f4ff:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    f506:	e8 55 4f ff ff       	call   4460 <_Unwind_Resume@plt>
    f50b:	f3 0f 1e fa          	endbr64
    f50f:	48 89 c7             	mov    rdi,rax
    f512:	e8 a9 73 ff ff       	call   68c0 <__clang_call_terminate>
    f517:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f51e:	00 00 

000000000000f520 <_ZSt12__to_addressINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEPT_SD_>:
    {
    f520:	f3 0f 1e fa          	endbr64
    f524:	55                   	push   rbp
    f525:	48 89 e5             	mov    rbp,rsp
    f528:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      return __ptr;
    f52c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f530:	5d                   	pop    rbp
    f531:	c3                   	ret
    f532:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f539:	00 00 00 
    f53c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f540 <_ZNSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2Ev>:
    struct _Hash_node
    f540:	f3 0f 1e fa          	endbr64
    f544:	55                   	push   rbp
    f545:	48 89 e5             	mov    rbp,rsp
    f548:	48 83 ec 10          	sub    rsp,0x10
    f54c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f550:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f554:	e8 b7 ee ff ff       	call   e410 <_ZNSt8__detail15_Hash_node_baseC2Ev>
    f559:	48 83 c4 10          	add    rsp,0x10
    f55d:	5d                   	pop    rbp
    f55e:	c3                   	ret
    f55f:	90                   	nop

000000000000f560 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv>:
      {
    f560:	f3 0f 1e fa          	endbr64
    f564:	55                   	push   rbp
    f565:	48 89 e5             	mov    rbp,rsp
    f568:	48 83 ec 20          	sub    rsp,0x20
    f56c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f570:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f574:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f578:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f57c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f580:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    f584:	48 b9 49 92 24 49 92 	movabs rcx,0x249249249249249
    f58b:	24 49 02 
    f58e:	48 39 c8             	cmp    rax,rcx
    f591:	76 1a                	jbe    f5ad <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f593:	48 b8 92 24 49 92 24 	movabs rax,0x492492492492492
    f59a:	49 92 04 
    f59d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    f5a1:	76 05                	jbe    f5a8 <_ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    f5a3:	e8 88 4f ff ff       	call   4530 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f5a8:	e8 e3 4e ff ff       	call   4490 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f5ad:	48 6b 7d e8 38       	imul   rdi,QWORD PTR [rbp-0x18],0x38
    f5b2:	e8 b9 4f ff ff       	call   4570 <_Znwm@plt>
    f5b7:	48 83 c4 20          	add    rsp,0x20
    f5bb:	5d                   	pop    rbp
    f5bc:	c3                   	ret
    f5bd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f5c0 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEJRS6_mEEDTgsnwcvPvLi0E_T_pispclsr3stdE7declvalIT0_EEEEPSB_DpOSC_>:
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    f5c0:	f3 0f 1e fa          	endbr64
    f5c4:	55                   	push   rbp
    f5c5:	48 89 e5             	mov    rbp,rsp
    f5c8:	48 83 ec 20          	sub    rsp,0x20
    f5cc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f5d0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f5d4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f5d8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f5dc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    f5e0:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f5e4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    f5e8:	e8 13 00 00 00       	call   f600 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEC2IRS5_mQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISA_SB_EEEEOT_OT0_>
    f5ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f5f1:	48 83 c4 20          	add    rsp,0x20
    f5f5:	5d                   	pop    rbp
    f5f6:	c3                   	ret
    f5f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f5fe:	00 00 

000000000000f600 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEC2IRS5_mQaacl16_S_constructibleITL0__TL0_0_EEntcl10_S_danglesISA_SB_EEEEOT_OT0_>:
    f600:	f3 0f 1e fa          	endbr64
    f604:	55                   	push   rbp
    f605:	48 89 e5             	mov    rbp,rsp
    f608:	48 83 ec 20          	sub    rsp,0x20
    f60c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f610:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f614:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f618:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f61c:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
    f620:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f624:	e8 c7 68 ff ff       	call   5ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_>
    f629:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f62d:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f631:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    f634:	48 89 48 20          	mov    QWORD PTR [rax+0x20],rcx
	{ }
    f638:	48 83 c4 20          	add    rsp,0x20
    f63c:	5d                   	pop    rbp
    f63d:	c3                   	ret
    f63e:	66 90                	xchg   ax,ax

000000000000f640 <_ZNSt8__detail22_Hashtable_hash_traitsISt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE22__small_size_thresholdEv>:
      { return std::__is_fast_hash<_Hash>::value ? 0 : 20; }
    f640:	f3 0f 1e fa          	endbr64
    f644:	55                   	push   rbp
    f645:	48 89 e5             	mov    rbp,rsp
    f648:	b8 14 00 00 00       	mov    eax,0x14
    f64d:	5d                   	pop    rbp
    f64e:	c3                   	ret
    f64f:	90                   	nop

000000000000f650 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv>:
      _M_eq() const { return _EqualEBO::_M_cget(); }
    f650:	f3 0f 1e fa          	endbr64
    f654:	55                   	push   rbp
    f655:	48 89 e5             	mov    rbp,rsp
    f658:	48 83 ec 10          	sub    rsp,0x10
    f65c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f660:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f664:	e8 57 00 00 00       	call   f6c0 <_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>
    f669:	48 83 c4 10          	add    rsp,0x10
    f66d:	5d                   	pop    rbp
    f66e:	c3                   	ret
    f66f:	90                   	nop

000000000000f670 <_ZNKSt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      { return __x == __y; }
    f670:	f3 0f 1e fa          	endbr64
    f674:	55                   	push   rbp
    f675:	48 89 e5             	mov    rbp,rsp
    f678:	48 83 ec 20          	sub    rsp,0x20
    f67c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f680:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f684:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f688:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f68c:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    f690:	e8 6b 71 ff ff       	call   6800 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    f695:	24 01                	and    al,0x1
    f697:	48 83 c4 20          	add    rsp,0x20
    f69b:	5d                   	pop    rbp
    f69c:	c3                   	ret
    f69d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f6a0 <_ZNKSt8__detail10_Select1stclIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEEEONS0_10__1st_typeIT_E4typeEOSE_>:
      { return std::forward<_Tp>(__x).first; }
    f6a0:	f3 0f 1e fa          	endbr64
    f6a4:	55                   	push   rbp
    f6a5:	48 89 e5             	mov    rbp,rsp
    f6a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6ac:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f6b0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f6b4:	5d                   	pop    rbp
    f6b5:	c3                   	ret
    f6b6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f6bd:	00 00 00 

000000000000f6c0 <_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>:
      const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
    f6c0:	f3 0f 1e fa          	endbr64
    f6c4:	55                   	push   rbp
    f6c5:	48 89 e5             	mov    rbp,rsp
    f6c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f6d0:	5d                   	pop    rbp
    f6d1:	c3                   	ret
    f6d2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f6d9:	00 00 00 
    f6dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f6e0 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
      { return static_cast<const _Tp*>(_M_addr()); }
    f6e0:	f3 0f 1e fa          	endbr64
    f6e4:	55                   	push   rbp
    f6e5:	48 89 e5             	mov    rbp,rsp
    f6e8:	48 83 ec 10          	sub    rsp,0x10
    f6ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f6f0:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f6f4:	e8 07 00 00 00       	call   f700 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>
    f6f9:	48 83 c4 10          	add    rsp,0x10
    f6fd:	5d                   	pop    rbp
    f6fe:	c3                   	ret
    f6ff:	90                   	nop

000000000000f700 <_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE7_M_addrEv>:
      {
    f700:	f3 0f 1e fa          	endbr64
    f704:	55                   	push   rbp
    f705:	48 89 e5             	mov    rbp,rsp
    f708:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f70c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
        return static_cast<const void*>(&_M_storage);
    f710:	5d                   	pop    rbp
    f711:	c3                   	ret
    f712:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f719:	00 00 00 
    f71c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f720 <_ZNSt8__detail19_Node_iterator_baseISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>:
      : _M_cur(__p) { }
    f720:	f3 0f 1e fa          	endbr64
    f724:	55                   	push   rbp
    f725:	48 89 e5             	mov    rbp,rsp
    f728:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f72c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f730:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f734:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    f738:	48 89 08             	mov    QWORD PTR [rax],rcx
    f73b:	5d                   	pop    rbp
    f73c:	c3                   	ret
    f73d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000f740 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv>:
      _M_hash() const { return __ebo_hash::_M_cget(); }
    f740:	f3 0f 1e fa          	endbr64
    f744:	55                   	push   rbp
    f745:	48 89 e5             	mov    rbp,rsp
    f748:	48 83 ec 10          	sub    rsp,0x10
    f74c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f750:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f754:	e8 67 00 00 00       	call   f7c0 <_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>
    f759:	48 83 c4 10          	add    rsp,0x10
    f75d:	5d                   	pop    rbp
    f75e:	c3                   	ret
    f75f:	90                   	nop

000000000000f760 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_>:
    : public __hash_base<size_t, _StrT>
    {
      [[__nodiscard__]]
      size_t
      operator()(const _StrT& __s) const noexcept
      { return _Hash_impl::hash(__s.data(), __s.length() * sizeof(_CharT)); }
    f760:	f3 0f 1e fa          	endbr64
    f764:	55                   	push   rbp
    f765:	48 89 e5             	mov    rbp,rsp
    f768:	48 83 ec 20          	sub    rsp,0x20
    f76c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f770:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f774:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f778:	e8 83 98 ff ff       	call   9000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
    f77d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    f781:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    f785:	e8 d6 68 ff ff       	call   6060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    f78a:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    f78e:	48 89 c6             	mov    rsi,rax
    f791:	ba 07 69 0f c7       	mov    edx,0xc70f6907
    f796:	e8 45 00 00 00       	call   f7e0 <_ZNSt10_Hash_impl4hashEPKvmm>
    f79b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    f79f:	eb 00                	jmp    f7a1 <_ZNKSt15__str_hash_baseIcSaIcENSt7__cxx1112basic_stringIcSt11char_traitsIcES0_EEEclERKS5_+0x41>
    f7a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f7a5:	48 83 c4 20          	add    rsp,0x20
    f7a9:	5d                   	pop    rbp
    f7aa:	c3                   	ret
    f7ab:	f3 0f 1e fa          	endbr64
    f7af:	48 89 c7             	mov    rdi,rax
    f7b2:	e8 09 71 ff ff       	call   68c0 <__clang_call_terminate>
    f7b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f7be:	00 00 

000000000000f7c0 <_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb1EE7_M_cgetEv>:
      const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
    f7c0:	f3 0f 1e fa          	endbr64
    f7c4:	55                   	push   rbp
    f7c5:	48 89 e5             	mov    rbp,rsp
    f7c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f7cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f7d0:	5d                   	pop    rbp
    f7d1:	c3                   	ret
    f7d2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f7d9:	00 00 00 
    f7dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f7e0 <_ZNSt10_Hash_impl4hashEPKvmm>:
  struct _Hash_impl
  {
    static size_t
    hash(const void* __ptr, size_t __clength,
	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
    { return _Hash_bytes(__ptr, __clength, __seed); }
    f7e0:	f3 0f 1e fa          	endbr64
    f7e4:	55                   	push   rbp
    f7e5:	48 89 e5             	mov    rbp,rsp
    f7e8:	48 83 ec 20          	sub    rsp,0x20
    f7ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f7f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f7f4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f7f8:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f7fc:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f800:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    f804:	e8 47 4c ff ff       	call   4450 <_ZSt11_Hash_bytesPKvmm@plt>
    f809:	48 83 c4 20          	add    rsp,0x20
    f80d:	5d                   	pop    rbp
    f80e:	c3                   	ret
    f80f:	90                   	nop

000000000000f810 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm>:
      { return _RangeHash{}(__c, __bkt_count); }
    f810:	f3 0f 1e fa          	endbr64
    f814:	55                   	push   rbp
    f815:	48 89 e5             	mov    rbp,rsp
    f818:	48 83 ec 30          	sub    rsp,0x30
    f81c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f823:	00 00 
    f825:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f829:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    f82d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    f831:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    f835:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f839:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    f83d:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    f841:	e8 2a 00 00 00       	call   f870 <_ZNKSt8__detail18_Mod_range_hashingclEmm>
    f846:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    f84a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    f851:	00 00 
    f853:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    f857:	48 39 c8             	cmp    rax,rcx
    f85a:	75 0a                	jne    f866 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm+0x56>
    f85c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f860:	48 83 c4 30          	add    rsp,0x30
    f864:	5d                   	pop    rbp
    f865:	c3                   	ret
    f866:	e8 45 4d ff ff       	call   45b0 <__stack_chk_fail@plt>
    f86b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f870 <_ZNKSt8__detail18_Mod_range_hashingclEmm>:
    { return __num % __den; }
    f870:	f3 0f 1e fa          	endbr64
    f874:	55                   	push   rbp
    f875:	48 89 e5             	mov    rbp,rsp
    f878:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f87c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f880:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f884:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f888:	31 c9                	xor    ecx,ecx
    f88a:	89 ca                	mov    edx,ecx
    f88c:	48 f7 75 e8          	div    QWORD PTR [rbp-0x18]
    f890:	48 89 d0             	mov    rax,rdx
    f893:	5d                   	pop    rbp
    f894:	c3                   	ret
    f895:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f89c:	00 00 00 
    f89f:	90                   	nop

000000000000f8a0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m>:
    {
    f8a0:	f3 0f 1e fa          	endbr64
    f8a4:	55                   	push   rbp
    f8a5:	48 89 e5             	mov    rbp,rsp
    f8a8:	48 83 ec 40          	sub    rsp,0x40
    f8ac:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    f8b0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    f8b4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    f8b8:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    f8bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    f8c0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
      __node_base_ptr __prev_p = _M_buckets[__bkt];
    f8c4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f8c7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    f8cb:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    f8cf:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      if (!__prev_p)
    f8d3:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    f8d8:	75 0a                	jne    f8e4 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x44>
	return nullptr;
    f8da:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f8e1:	00 
    f8e2:	eb 7e                	jmp    f962 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xc2>
      for (__node_ptr __p = static_cast<__node_ptr>(__prev_p->_M_nxt);;
    f8e4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f8e8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f8eb:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f8ef:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
	  if (this->_M_equals(__k, __code, *__p))
    f8f3:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f8f7:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    f8fb:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
    f8ff:	48 83 c1 08          	add    rcx,0x8
    f903:	e8 68 00 00 00       	call   f970 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE>
    f908:	a8 01                	test   al,0x1
    f90a:	75 02                	jne    f90e <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x6e>
    f90c:	eb 0a                	jmp    f918 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x78>
	    return __prev_p;
    f90e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f912:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f916:	eb 4a                	jmp    f962 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xc2>
	  if (!__p->_M_nxt || _M_bucket_index(*__p->_M_next()) != __bkt)
    f918:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f91c:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    f920:	74 1f                	je     f941 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xa1>
    f922:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    f926:	e8 45 ee ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    f92b:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
    f92f:	48 89 c6             	mov    rsi,rax
    f932:	48 83 c6 08          	add    rsi,0x8
    f936:	e8 a5 00 00 00       	call   f9e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>
    f93b:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
    f93f:	74 02                	je     f943 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xa3>
	    break;
    f941:	eb 17                	jmp    f95a <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0xba>
	  __prev_p = __p;
    f943:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f947:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	   __p = __p->_M_next())
    f94b:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    f94f:	e8 1c ee ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    f954:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      for (__node_ptr __p = static_cast<__node_ptr>(__prev_p->_M_nxt);;
    f958:	eb 95                	jmp    f8ef <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS7_m+0x4f>
      return nullptr;
    f95a:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    f961:	00 
    }
    f962:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f966:	48 83 c4 40          	add    rsp,0x40
    f96a:	5d                   	pop    rbp
    f96b:	c3                   	ret
    f96c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f970 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE>:
      { return _S_equals(__c, __n) && _M_key_equals(__k, __n); }
    f970:	f3 0f 1e fa          	endbr64
    f974:	55                   	push   rbp
    f975:	48 89 e5             	mov    rbp,rsp
    f978:	48 83 ec 30          	sub    rsp,0x30
    f97c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f980:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f984:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    f988:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    f98c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    f990:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    f994:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    f998:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    f99c:	48 83 c6 28          	add    rsi,0x28
    f9a0:	e8 6b 00 00 00       	call   fa10 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE>
    f9a5:	88 c1                	mov    cl,al
    f9a7:	31 c0                	xor    eax,eax
    f9a9:	f6 c1 01             	test   cl,0x1
    f9ac:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    f9af:	75 02                	jne    f9b3 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE+0x43>
    f9b1:	eb 14                	jmp    f9c7 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS8_mRKNS_16_Hash_node_valueIS9_Lb1EEE+0x57>
    f9b3:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
    f9b7:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f9bb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f9bf:	e8 dc f5 ff ff       	call   efa0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
    f9c4:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
    f9c7:	8a 45 df             	mov    al,BYTE PTR [rbp-0x21]
    f9ca:	24 01                	and    al,0x1
    f9cc:	48 83 c4 30          	add    rsp,0x30
    f9d0:	5d                   	pop    rbp
    f9d1:	c3                   	ret
    f9d2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f9d9:	00 00 00 
    f9dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f9e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>:
      { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
    f9e0:	f3 0f 1e fa          	endbr64
    f9e4:	55                   	push   rbp
    f9e5:	48 89 e5             	mov    rbp,rsp
    f9e8:	48 83 ec 10          	sub    rsp,0x10
    f9ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    f9f0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    f9f4:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    f9f8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
    f9fc:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
    fa00:	e8 3b 00 00 00       	call   fa40 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>
    fa05:	48 83 c4 10          	add    rsp,0x10
    fa09:	5d                   	pop    rbp
    fa0a:	c3                   	ret
    fa0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fa10 <_ZNSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE>:
      { return __c == __n._M_hash_code; }
    fa10:	f3 0f 1e fa          	endbr64
    fa14:	55                   	push   rbp
    fa15:	48 89 e5             	mov    rbp,rsp
    fa18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fa1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fa20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fa24:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fa28:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
    fa2b:	0f 94 c0             	sete   al
    fa2e:	24 01                	and    al,0x1
    fa30:	5d                   	pop    rbp
    fa31:	c3                   	ret
    fa32:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fa39:	00 00 00 
    fa3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000fa40 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>:
      { return _RangeHash{}(__n._M_hash_code, __bkt_count); }
    fa40:	f3 0f 1e fa          	endbr64
    fa44:	55                   	push   rbp
    fa45:	48 89 e5             	mov    rbp,rsp
    fa48:	48 83 ec 30          	sub    rsp,0x30
    fa4c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fa53:	00 00 
    fa55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fa59:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    fa5d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    fa61:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    fa65:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fa69:	48 8b 70 28          	mov    rsi,QWORD PTR [rax+0x28]
    fa6d:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fa71:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
    fa75:	e8 f6 fd ff ff       	call   f870 <_ZNKSt8__detail18_Mod_range_hashingclEmm>
    fa7a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    fa7e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fa85:	00 00 
    fa87:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    fa8b:	48 39 c8             	cmp    rax,rcx
    fa8e:	75 0a                	jne    fa9a <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm+0x5a>
    fa90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fa94:	48 83 c4 30          	add    rsp,0x30
    fa98:	5d                   	pop    rbp
    fa99:	c3                   	ret
    fa9a:	e8 11 4b ff ff       	call   45b0 <__stack_chk_fail@plt>
    fa9f:	90                   	nop

000000000000faa0 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEEC2ERS1_>:
      { }
    faa0:	f3 0f 1e fa          	endbr64
    faa4:	55                   	push   rbp
    faa5:	48 89 e5             	mov    rbp,rsp
    faa8:	48 83 ec 20          	sub    rsp,0x20
    faac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fab0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fab4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fab8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
      : _M_guarded_obj(std::__addressof(__policy))
    fabc:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fac0:	48 89 08             	mov    QWORD PTR [rax],rcx
      , _M_prev_state(__policy._M_state())
    fac3:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    fac7:	e8 a4 02 00 00       	call   fd70 <_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv>
    facc:	48 89 c1             	mov    rcx,rax
    facf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    fad3:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      { }
    fad7:	48 83 c4 20          	add    rsp,0x20
    fadb:	5d                   	pop    rbp
    fadc:	c3                   	ret
    fadd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000fae0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE>:
	   typename _RehashPolicy, typename _Traits>
    void
    _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
	       _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
    _M_rehash(size_type __bkt_count, true_type /* __uks */)
    {
    fae0:	f3 0f 1e fa          	endbr64
    fae4:	55                   	push   rbp
    fae5:	48 89 e5             	mov    rbp,rsp
    fae8:	48 83 ec 50          	sub    rsp,0x50
    faec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    faf0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    faf4:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
    faf8:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
      __buckets_ptr __new_buckets = _M_allocate_buckets(__bkt_count);
    fafc:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    fb00:	e8 8b 02 00 00       	call   fd90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm>
    fb05:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    fb09:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
      __node_ptr __p = _M_begin();
    fb0d:	e8 3e ec ff ff       	call   e750 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    fb12:	48 89 c1             	mov    rcx,rax
    fb15:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    fb19:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
      _M_before_begin._M_nxt = nullptr;
    fb1d:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    fb24:	00 
      std::size_t __bbegin_bkt = 0;
    fb25:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    fb2c:	00 
      while (__p)
    fb2d:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    fb32:	0f 84 b6 00 00 00    	je     fbee <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x10e>
	{
	  __node_ptr __next = __p->_M_next();
    fb38:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    fb3c:	e8 2f ec ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    fb41:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    fb45:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
	  std::size_t __bkt
	    = __hash_code_base::_M_bucket_index(*__p, __bkt_count);
    fb49:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    fb4d:	48 83 c6 08          	add    rsi,0x8
    fb51:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    fb55:	e8 e6 fe ff ff       	call   fa40 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueIS9_Lb1EEEm>
	  std::size_t __bkt
    fb5a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
	  if (!__new_buckets[__bkt])
    fb5e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fb62:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fb66:	48 83 3c c8 00       	cmp    QWORD PTR [rax+rcx*8],0x0
    fb6b:	75 4b                	jne    fbb8 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0xd8>
    fb6d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
	    {
	      __p->_M_nxt = _M_before_begin._M_nxt;
    fb71:	48 8b 4a 10          	mov    rcx,QWORD PTR [rdx+0x10]
    fb75:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fb79:	48 89 08             	mov    QWORD PTR [rax],rcx
	      _M_before_begin._M_nxt = __p;
    fb7c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fb80:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
	      __new_buckets[__bkt] = &_M_before_begin;
    fb84:	48 83 c2 10          	add    rdx,0x10
    fb88:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fb8c:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fb90:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
	      if (__p->_M_nxt)
    fb94:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fb98:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fb9c:	74 10                	je     fbae <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0xce>
		__new_buckets[__bbegin_bkt] = __p;
    fb9e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fba2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fba6:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    fbaa:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
	      __bbegin_bkt = __bkt;
    fbae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fbb2:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
	    }
    fbb6:	eb 29                	jmp    fbe1 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x101>
	  else
	    {
	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
    fbb8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fbbc:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    fbc0:	48 8b 04 c8          	mov    rax,QWORD PTR [rax+rcx*8]
    fbc4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    fbc7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fbcb:	48 89 08             	mov    QWORD PTR [rax],rcx
	      __new_buckets[__bkt]->_M_nxt = __p;
    fbce:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    fbd2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    fbd6:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    fbda:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
    fbde:	48 89 08             	mov    QWORD PTR [rax],rcx
	    }

	  __p = __next;
    fbe1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    fbe5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
      while (__p)
    fbe9:	e9 3f ff ff ff       	jmp    fb2d <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmSt17integral_constantIbLb1EE+0x4d>
    fbee:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	}

      _M_deallocate_buckets();
    fbf2:	e8 b9 ea ff ff       	call   e6b0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv>
    fbf7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
      _M_bucket_count = __bkt_count;
    fbfb:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fbff:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
      _M_buckets = __new_buckets;
    fc03:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    fc07:	48 89 08             	mov    QWORD PTR [rax],rcx
    }
    fc0a:	48 83 c4 50          	add    rsp,0x50
    fc0e:	5d                   	pop    rbp
    fc0f:	c3                   	ret

000000000000fc10 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeERNS_21_Hash_node_code_cacheILb1EEEm>:
      { __n._M_hash_code = __c; }
    fc10:	f3 0f 1e fa          	endbr64
    fc14:	55                   	push   rbp
    fc15:	48 89 e5             	mov    rbp,rsp
    fc18:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fc1c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fc20:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    fc24:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fc28:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    fc2c:	48 89 08             	mov    QWORD PTR [rax],rcx
    fc2f:	5d                   	pop    rbp
    fc30:	c3                   	ret
    fc31:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fc38:	00 00 00 
    fc3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fc40 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE>:
      {
    fc40:	f3 0f 1e fa          	endbr64
    fc44:	55                   	push   rbp
    fc45:	48 89 e5             	mov    rbp,rsp
    fc48:	48 83 ec 30          	sub    rsp,0x30
    fc4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fc50:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    fc54:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    fc58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fc5c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (_M_buckets[__bkt])
    fc60:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fc63:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fc67:	48 83 3c c8 00       	cmp    QWORD PTR [rax+rcx*8],0x0
    fc6c:	74 2d                	je     fc9b <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0x5b>
    fc6e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
    fc72:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    fc75:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    fc79:	48 8b 0c d1          	mov    rcx,QWORD PTR [rcx+rdx*8]
    fc7d:	48 8b 11             	mov    rdx,QWORD PTR [rcx]
    fc80:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fc84:	48 89 11             	mov    QWORD PTR [rcx],rdx
	    _M_buckets[__bkt]->_M_nxt = __node;
    fc87:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fc8b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fc8e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    fc92:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
    fc96:	48 89 08             	mov    QWORD PTR [rax],rcx
	  }
    fc99:	eb 72                	jmp    fd0d <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0xcd>
    fc9b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    __node->_M_nxt = _M_before_begin._M_nxt;
    fc9f:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    fca3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fca7:	48 89 11             	mov    QWORD PTR [rcx],rdx
	    _M_before_begin._M_nxt = __node;
    fcaa:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fcae:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
	    if (__node->_M_nxt)
    fcb2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    fcb6:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fcba:	74 3b                	je     fcf7 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSA_10_Hash_nodeIS8_Lb1EEE+0xb7>
    fcbc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	      _M_buckets[_M_bucket_index(*__node->_M_next())] = __node;
    fcc0:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    fcc4:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    fcc8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fccb:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    fccf:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    fcd3:	e8 98 ea ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    fcd8:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
    fcdc:	48 89 c6             	mov    rsi,rax
    fcdf:	48 83 c6 08          	add    rsi,0x8
    fce3:	e8 f8 fc ff ff       	call   f9e0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSA_16_Hash_node_valueIS8_Lb1EEE>
    fce8:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    fcec:	48 89 c1             	mov    rcx,rax
    fcef:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fcf3:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
    fcf7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    _M_buckets[__bkt] = &_M_before_begin;
    fcfb:	48 89 c2             	mov    rdx,rax
    fcfe:	48 83 c2 10          	add    rdx,0x10
    fd02:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fd05:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    fd09:	48 89 14 c8          	mov    QWORD PTR [rax+rcx*8],rdx
      }
    fd0d:	48 83 c4 30          	add    rsp,0x30
    fd11:	5d                   	pop    rbp
    fd12:	c3                   	ret
    fd13:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fd1a:	00 00 00 
    fd1d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000fd20 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev>:
      {
    fd20:	f3 0f 1e fa          	endbr64
    fd24:	55                   	push   rbp
    fd25:	48 89 e5             	mov    rbp,rsp
    fd28:	48 83 ec 10          	sub    rsp,0x10
    fd2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fd30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fd34:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	if (_M_guarded_obj)
    fd38:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    fd3c:	74 14                	je     fd52 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x32>
    fd3e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
	  _M_guarded_obj->_M_reset(_M_prev_state);
    fd42:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    fd45:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    fd49:	e8 f2 01 00 00       	call   ff40 <_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm>
    fd4e:	eb 00                	jmp    fd50 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x30>
    fd50:	eb 00                	jmp    fd52 <_ZNSt8__detail17_RehashStateGuardINS_20_Prime_rehash_policyEED2Ev+0x32>
      }
    fd52:	48 83 c4 10          	add    rsp,0x10
    fd56:	5d                   	pop    rbp
    fd57:	c3                   	ret
    fd58:	f3 0f 1e fa          	endbr64
    fd5c:	48 89 c7             	mov    rdi,rax
	  _M_guarded_obj->_M_reset(_M_prev_state);
    fd5f:	e8 5c 6b ff ff       	call   68c0 <__clang_call_terminate>
    fd64:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fd6b:	00 00 00 
    fd6e:	66 90                	xchg   ax,ax

000000000000fd70 <_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv>:
    { return _M_next_resize; }
    fd70:	f3 0f 1e fa          	endbr64
    fd74:	55                   	push   rbp
    fd75:	48 89 e5             	mov    rbp,rsp
    fd78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    fd7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fd80:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    fd84:	5d                   	pop    rbp
    fd85:	c3                   	ret
    fd86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fd8d:	00 00 00 

000000000000fd90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm>:
      {
    fd90:	f3 0f 1e fa          	endbr64
    fd94:	55                   	push   rbp
    fd95:	48 89 e5             	mov    rbp,rsp
    fd98:	48 83 ec 20          	sub    rsp,0x20
    fd9c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    fda0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    fda4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    fda8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
	if (__builtin_expect(__bkt_count == 1, false))
    fdac:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
    fdb1:	75 16                	jne    fdc9 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm+0x39>
    fdb3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
	    _M_single_bucket = nullptr;
    fdb7:	48 c7 40 30 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    fdbe:	00 
	    return &_M_single_bucket;
    fdbf:	48 83 c0 30          	add    rax,0x30
    fdc3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fdc7:	eb 11                	jmp    fdda <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm+0x4a>
    fdc9:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
    fdcd:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    fdd1:	e8 1a 00 00 00       	call   fdf0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm>
    fdd6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
      }
    fdda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fdde:	48 83 c4 20          	add    rsp,0x20
    fde2:	5d                   	pop    rbp
    fde3:	c3                   	ret
    fde4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fdeb:	00 00 00 
    fdee:	66 90                	xchg   ax,ax

000000000000fdf0 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm>:
    {
    fdf0:	f3 0f 1e fa          	endbr64
    fdf4:	55                   	push   rbp
    fdf5:	48 89 e5             	mov    rbp,rsp
    fdf8:	48 81 ec 80 00 00 00 	sub    rsp,0x80
    fdff:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fe06:	00 00 
    fe08:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    fe0c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
    fe10:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    fe14:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
      __buckets_alloc_type __alloc(_M_node_allocator());
    fe18:	e8 e3 e9 ff ff       	call   e800 <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE17_M_node_allocatorEv>
    fe1d:	48 8d 4d f7          	lea    rcx,[rbp-0x9]
    fe21:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    fe25:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    fe29:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fe2d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      auto __ptr = __buckets_alloc_traits::allocate(__alloc, __bkt_count);
    fe31:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    fe35:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    fe39:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      { return __a.allocate(__n); }
    fe3d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    fe41:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fe45:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    fe49:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    fe4d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	return __allocator_base<_Tp>::allocate(__n, 0);
    fe51:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    fe55:	31 c0                	xor    eax,eax
    fe57:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fe5a:	89 c2                	mov    edx,eax
    fe5c:	e8 7f 00 00 00       	call   fee0 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv>
    fe61:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
      __buckets_ptr __p = std::__to_address(__ptr);
    fe65:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
    fe69:	e8 52 00 00 00       	call   fec0 <_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_>
    fe6e:	8b 75 8c             	mov    esi,DWORD PTR [rbp-0x74]
    fe71:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
      __builtin_memset(__p, 0, __bkt_count * sizeof(__node_base_ptr));
    fe75:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    fe79:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    fe7d:	48 c1 e2 03          	shl    rdx,0x3
    fe81:	e8 7a 46 ff ff       	call   4500 <memset@plt>
      return __p;
    fe86:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    fe8a:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    fe8e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    fe95:	00 00 
    fe97:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    fe9b:	48 39 c8             	cmp    rax,rcx
    fe9e:	75 0d                	jne    fead <_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EEEEE19_M_allocate_bucketsEm+0xbd>
    fea0:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    fea4:	48 81 c4 80 00 00 00 	add    rsp,0x80
    feab:	5d                   	pop    rbp
    feac:	c3                   	ret
    fead:	e8 fe 46 ff ff       	call   45b0 <__stack_chk_fail@plt>
    feb2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    feb9:	00 00 00 
    febc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000fec0 <_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_>:
    {
    fec0:	f3 0f 1e fa          	endbr64
    fec4:	55                   	push   rbp
    fec5:	48 89 e5             	mov    rbp,rsp
    fec8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
      return __ptr;
    fecc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    fed0:	5d                   	pop    rbp
    fed1:	c3                   	ret
    fed2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fed9:	00 00 00 
    fedc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000fee0 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv>:
      {
    fee0:	f3 0f 1e fa          	endbr64
    fee4:	55                   	push   rbp
    fee5:	48 89 e5             	mov    rbp,rsp
    fee8:	48 83 ec 20          	sub    rsp,0x20
    feec:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
    fef0:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
    fef4:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    fef8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
	if (__builtin_expect(__n > this->_M_max_size(), false))
    fefc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ff00:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
    ff04:	48 b9 ff ff ff ff ff 	movabs rcx,0xfffffffffffffff
    ff0b:	ff ff 0f 
    ff0e:	48 39 c8             	cmp    rax,rcx
    ff11:	76 1a                	jbe    ff2d <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv+0x4d>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ff13:	48 b8 ff ff ff ff ff 	movabs rax,0x1fffffffffffffff
    ff1a:	ff ff 1f 
    ff1d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    ff21:	76 05                	jbe    ff28 <_ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv+0x48>
	      std::__throw_bad_array_new_length();
    ff23:	e8 08 46 ff ff       	call   4530 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ff28:	e8 63 45 ff ff       	call   4490 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ff2d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    ff31:	48 c1 e7 03          	shl    rdi,0x3
    ff35:	e8 36 46 ff ff       	call   4570 <_Znwm@plt>
    ff3a:	48 83 c4 20          	add    rsp,0x20
    ff3e:	5d                   	pop    rbp
    ff3f:	c3                   	ret

000000000000ff40 <_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm>:
    { _M_next_resize = __state; }
    ff40:	f3 0f 1e fa          	endbr64
    ff44:	55                   	push   rbp
    ff45:	48 89 e5             	mov    rbp,rsp
    ff48:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ff4c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ff50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ff54:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    ff58:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    ff5c:	5d                   	pop    rbp
    ff5d:	c3                   	ret
    ff5e:	66 90                	xchg   ax,ax

000000000000ff60 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>:
    {
    ff60:	f3 0f 1e fa          	endbr64
    ff64:	55                   	push   rbp
    ff65:	48 89 e5             	mov    rbp,rsp
    ff68:	48 83 ec 50          	sub    rsp,0x50
    ff6c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ff73:	00 00 
    ff75:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ff79:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ff7d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    ff81:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
    ff85:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
      if (size() <= __small_size_threshold())
    ff89:	e8 e2 ef ff ff       	call   ef70 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4sizeEv>
    ff8e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    ff92:	e8 f9 ef ff ff       	call   ef90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE22__small_size_thresholdEv>
    ff97:	48 89 c1             	mov    rcx,rax
    ff9a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ff9e:	48 39 c8             	cmp    rax,rcx
    ffa1:	77 5e                	ja     10001 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xa1>
    ffa3:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	  for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ffa7:	e8 a4 e7 ff ff       	call   e750 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv>
    ffac:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ffb0:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    ffb5:	74 3b                	je     fff2 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x92>
    ffb7:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	    if (this->_M_key_equals(__k, *__it))
    ffbb:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    ffbf:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    ffc3:	48 83 c2 08          	add    rdx,0x8
    ffc7:	e8 d4 ef ff ff       	call   efa0 <_ZNKSt8__detail15_Hashtable_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_key_equalsERS8_RKNS_16_Hash_node_valueIS9_Lb1EEE>
    ffcc:	a8 01                	test   al,0x1
    ffce:	75 02                	jne    ffd2 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x72>
    ffd0:	eb 0f                	jmp    ffe1 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x81>
	      return iterator(__it);
    ffd2:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    ffd6:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    ffda:	e8 61 f0 ff ff       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    ffdf:	eb 63                	jmp    10044 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xe4>
	    if (this->_M_key_equals(__k, *__it))
    ffe1:	eb 00                	jmp    ffe3 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x83>
	  for (auto __it = _M_begin(); __it; __it = __it->_M_next())
    ffe3:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    ffe7:	e8 84 e7 ff ff       	call   e770 <_ZNKSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb1EE7_M_nextEv>
    ffec:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    fff0:	eb be                	jmp    ffb0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x50>
    fff2:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
	  return end();
    fff6:	e8 75 00 00 00       	call   10070 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>
    fffb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ffff:	eb 43                	jmp    10044 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0xe4>
   10001:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
      __hash_code __code = this->_M_hash_code(__k);
   10005:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   10009:	e8 92 f0 ff ff       	call   f0a0 <_ZNKSt8__detail15_Hash_code_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mENS_10_Select1stESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS8_>
   1000e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   10012:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
      std::size_t __bkt = _M_bucket_index(__code);
   10016:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   1001a:	e8 b1 f0 ff ff       	call   f0d0 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm>
   1001f:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   10023:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
      return iterator(_M_find_node(__bkt, __k, __code));
   10027:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
   1002b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   1002f:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   10033:	e8 c8 f0 ff ff       	call   f100 <_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS7_m>
   10038:	48 89 c6             	mov    rsi,rax
   1003b:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
   1003f:	e8 fc ef ff ff       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
    }
   10044:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   10048:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1004c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10053:	00 00 
   10055:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10059:	48 39 c8             	cmp    rax,rcx
   1005c:	75 0a                	jne    10068 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_+0x108>
   1005e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   10062:	48 83 c4 50          	add    rsp,0x50
   10066:	5d                   	pop    rbp
   10067:	c3                   	ret
   10068:	e8 43 45 ff ff       	call   45b0 <__stack_chk_fail@plt>
   1006d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010070 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv>:
      { return iterator(nullptr); }
   10070:	f3 0f 1e fa          	endbr64
   10074:	55                   	push   rbp
   10075:	48 89 e5             	mov    rbp,rsp
   10078:	48 83 ec 20          	sub    rsp,0x20
   1007c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10083:	00 00 
   10085:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   10089:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   1008d:	31 c0                	xor    eax,eax
   1008f:	89 c6                	mov    esi,eax
   10091:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
   10095:	e8 a6 ef ff ff       	call   f040 <_ZNSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEC2EPNS_10_Hash_nodeIS9_Lb1EEE>
   1009a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   1009e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   100a2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   100a9:	00 00 
   100ab:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   100af:	48 39 c8             	cmp    rax,rcx
   100b2:	75 0a                	jne    100be <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv+0x4e>
   100b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   100b8:	48 83 c4 20          	add    rsp,0x20
   100bc:	5d                   	pop    rbp
   100bd:	c3                   	ret
   100be:	e8 ed 44 ff ff       	call   45b0 <__stack_chk_fail@plt>
   100c3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   100ca:	00 00 00 
   100cd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000100d0 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_>:
      {
   100d0:	f3 0f 1e fa          	endbr64
   100d4:	55                   	push   rbp
   100d5:	48 89 e5             	mov    rbp,rsp
   100d8:	48 83 ec 30          	sub    rsp,0x30
   100dc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   100e3:	00 00 
   100e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   100e9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   100ed:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   100f1:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
	auto __ite = static_cast<__hashtable*>(this)->find(__k);
   100f5:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   100f9:	e8 62 fe ff ff       	call   ff60 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_mESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS7_>
   100fe:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
	if (!__ite._M_cur)
   10102:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   10107:	75 1e                	jne    10127 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x57>
	  __throw_out_of_range(__N("unordered_map::at"));
   10109:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10110:	00 00 
   10112:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10116:	48 39 c8             	cmp    rax,rcx
   10119:	75 39                	jne    10154 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x84>
   1011b:	48 8d 3d 35 13 00 00 	lea    rdi,[rip+0x1335]        # 11457 <_IO_stdin_used+0x457>
   10122:	e8 a9 45 ff ff       	call   46d0 <_ZSt20__throw_out_of_rangePKc@plt>
   10127:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
	return __ite->second;
   1012b:	e8 30 00 00 00       	call   10160 <_ZNKSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEptEv>
   10130:	48 83 c0 20          	add    rax,0x20
   10134:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   10138:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   1013f:	00 00 
   10141:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   10145:	48 39 c8             	cmp    rax,rcx
   10148:	75 0a                	jne    10154 <_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_mESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EE2atERS8_+0x84>
   1014a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   1014e:	48 83 c4 30          	add    rsp,0x30
   10152:	5d                   	pop    rbp
   10153:	c3                   	ret
   10154:	e8 57 44 ff ff       	call   45b0 <__stack_chk_fail@plt>
   10159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010160 <_ZNKSt8__detail14_Node_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmELb0ELb1EEptEv>:
      { return this->_M_cur->_M_valptr(); }
   10160:	f3 0f 1e fa          	endbr64
   10164:	55                   	push   rbp
   10165:	48 89 e5             	mov    rbp,rsp
   10168:	48 83 ec 10          	sub    rsp,0x10
   1016c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   10170:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   10174:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10177:	48 83 c0 08          	add    rax,0x8
   1017b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1017f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
      { return _M_storage._M_ptr(); }
   10183:	e8 78 e7 ff ff       	call   e900 <_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEE6_M_ptrEv>
      { return this->_M_cur->_M_valptr(); }
   10188:	48 83 c4 10          	add    rsp,0x10
   1018c:	5d                   	pop    rbp
   1018d:	c3                   	ret
   1018e:	66 90                	xchg   ax,ax

Disassembly of section .fini:

0000000000010190 <_fini>:
   10190:	f3 0f 1e fa          	endbr64
   10194:	48 83 ec 08          	sub    rsp,0x8
   10198:	48 83 c4 08          	add    rsp,0x8
   1019c:	c3                   	ret
